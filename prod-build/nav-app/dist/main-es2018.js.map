{"version":3,"sources":["./src/app/icons.service.ts","./src/app/matrix/tactic-cell/tactic-cell.component.ts","./src/app/matrix/tactic-cell/tactic-cell.component.html","webpack:///crypto (ignored)?9175","webpack:///util (ignored)?26ad","webpack:///util (ignored)?5cd2","util (ignored)","./src/app/sidebar/sidebar.component.ts","./src/app/sidebar/sidebar.component.html","webpack:///util (ignored)?9c36","./src/app/matrix/matrix-side/matrix-side.component.ts","./src/app/matrix/matrix-side/matrix-side.component.html","webpack:///buffer (ignored)?0f3d","./src/app/datatable/data-table.component.ts","./src/app/datatable/data-table.component.html","crypto (ignored)","buffer (ignored)","./src/app/matrix/technique-cell/contextmenu/contextmenu.component.ts","./src/app/matrix/technique-cell/contextmenu/contextmenu.component.html","./src/environments/environment.ts","./src/app/layer-information/layer-information.component.ts","./src/app/layer-information/layer-information.component.html","./src/app/matrix/matrix-mini/matrix-mini.component.ts","./src/app/matrix/matrix-mini/matrix-mini.component.html","./src/app/exporter/exporter.component.ts","./src/app/exporter/exporter.component.html","./src/app/search-and-multiselect/search-and-multiselect.component.ts","./src/app/search-and-multiselect/search-and-multiselect.component.html","./src/app/data.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/version-upgrade/version-upgrade.component.ts","./src/app/version-upgrade/version-upgrade.component.html","./src/app/changelog/changelog.component.ts","./src/app/changelog/changelog.component.html","./src/app/layer-upgrade/layer-upgrade.component.ts","./src/app/layer-upgrade/layer-upgrade.component.html","./src/app/app.module.ts","./src/app/tabs/tabs.component.ts","./src/app/tabs/tabs.component.html","./src/app/matrix/cell.ts","./src/app/matrix/matrix-common.ts","./src/$_lazy_route_resource lazy namespace object","./src/app/list-input/list-input.component.ts","./src/app/list-input/list-input.component.html","./src/app/matrix/technique-cell/cell-popover.ts","./src/app/help/help.component.ts","./src/app/help/help.component.html","./src/app/matrix/matrix-flat/matrix-flat.component.ts","./src/app/matrix/matrix-flat/matrix-flat.component.html","./src/app/cookies.ts","./src/app/viewmodels.service.ts","./src/app/matrix/technique-cell/technique-cell.component.ts","./src/app/matrix/technique-cell/technique-cell.component.html","./src/app/matrix/technique-cell/tooltip/tooltip.component.ts","./src/app/matrix/technique-cell/tooltip/tooltip.component.html","./src/app/config.service.ts","./src/app/globals.ts","./src/app/layer-upgrade/changelog-cell/changelog-cell.component.ts","./src/app/layer-upgrade/changelog-cell/changelog-cell.component.html","./src/app/taxii2lib.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2018.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { MatIconRegistry } from \"@angular/material/icon\";\r\nimport { DomSanitizer } from \"@angular/platform-browser\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class IconsService {\r\n\r\n  constructor(private matIconRegistry: MatIconRegistry, private domSanitizer: DomSanitizer) {\r\n  }\r\n\r\n  public registerIcons(): void {\r\n    this.loadIcons(Object.values(Icons), 'assets/icons');\r\n  }\r\n\r\n  private loadIcons(iconKeys: string[], iconUrl: string): void {\r\n    iconKeys.forEach(key => {\r\n      this.matIconRegistry.addSvgIcon(key, this.domSanitizer.bypassSecurityTrustResourceUrl(`${iconUrl}/${key}.svg`));\r\n    });\r\n  }\r\n}\r\n\r\nexport enum Icons {\r\n  SORT_ALPHABETICAL_ASC = 'ic_sort_alphabetically_ascending',\r\n  SORT_ALPHABETICAL_DESC = 'ic_sort_alphabetically_descending',\r\n  SORT_NUMERICAL_ASC = 'ic_sort_numerically_ascending',\r\n  SORT_NUMERICAL_DESC = 'ic_sort_numerically_descending',\r\n  UNFOLD_MORE_ALT = 'ic_unfold_more_alt'\r\n}\r\n","import { Component, OnInit, Input, ViewEncapsulation } from '@angular/core';\r\nimport { Technique, Tactic } from '../../data.service';\r\nimport { ViewModel } from '../../viewmodels.service';\r\n\r\n@Component({\r\n  selector: 'tactic-cell',\r\n  templateUrl: './tactic-cell.component.html',\r\n  styleUrls: ['./tactic-cell.component.scss'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class TacticCellComponent implements OnInit {\r\n    @Input() tactic: Tactic;\r\n    @Input() viewModel: ViewModel;\r\n\r\n    constructor() { }\r\n\r\n    ngOnInit() {\r\n    }\r\n}\r\n","<div class=\"tactic-cell noselect\" [class.bordered]=\"!(viewModel.layout.showID || viewModel.layout.showName)\" \r\n                         [class.mini]=\"viewModel.layout.layout == 'mini'\"\r\n                         [matTooltip]=\"tactic.attackID + ': ' + tactic.name\" \r\n                         [matTooltipDisabled]=\"viewModel.layout.showID || viewModel.layout.showName\" \r\n                         matTooltipPosition=\"above\">\r\n    <ng-container *ngIf=\"viewModel.layout.showID\">{{tactic.attackID}}</ng-container><div class=\"id-name-break\" *ngIf=\"viewModel.layout.showID && viewModel.layout.showName\"></div><ng-container *ngIf=\"viewModel.layout.showName\">{{tactic.name}}</ng-container>\r\n</div>\r\n","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","import { Component, Input, OnChanges } from '@angular/core';\r\nimport { DataService } from '../data.service';\r\nimport { ViewModel } from '../viewmodels.service';\r\n\r\n@Component({\r\n    selector: 'sidebar',\r\n    templateUrl: './sidebar.component.html',\r\n    styleUrls: ['./sidebar.component.scss']\r\n})\r\nexport class SidebarComponent implements OnChanges {\r\n    @Input() viewModel: ViewModel;\r\n    public reloadToggle: boolean = true;\r\n\r\n    constructor(public dataService: DataService) { }\r\n\r\n    ngOnChanges(): void {\r\n        this.reloadToggle = false;\r\n        setTimeout(() => this.reloadToggle = true);\r\n    }\r\n}\r\n","<div class=\"sidebar\">\r\n    <div *ngIf=\"viewModel\">\r\n        <div *ngIf=\"viewModel.sidebarContentType === 'search'\">\r\n            <app-search-and-multiselect [viewModel]=\"viewModel\"></app-search-and-multiselect>\r\n        </div>\r\n        <div *ngIf=\"viewModel.sidebarContentType === 'layerUpgrade' && reloadToggle\">\r\n            <div *ngIf=\"viewModel.versionChangelog && viewModel.compareTo\">\r\n                <layer-upgrade [viewModel]=\"viewModel\"></layer-upgrade>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n","/* (ignored) */","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { MatrixCommon } from '../matrix-common';\r\nimport { ConfigService } from '../../config.service';\r\nimport { ViewModelsService } from '../../viewmodels.service';\r\n\r\n@Component({\r\n  selector: 'matrix-side',\r\n  templateUrl: './matrix-side.component.html',\r\n  styleUrls: ['./matrix-side.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class MatrixSideComponent extends MatrixCommon implements OnInit  {\r\n\r\n    constructor(configService: ConfigService, viewModelsService: ViewModelsService) {\r\n        super(configService, viewModelsService);\r\n    }\r\n\r\n    ngOnInit() {}\r\n}\r\n","<table class=\"matrix side\">\r\n    <thead [ngStyle]=\"tacticRowStyle\">\r\n        <tr class=\"tactic\">\r\n            <td *ngFor=\"let tactic of filterTactics(matrix.tactics)\" class=\"tactic name\"><a (click)=\"onTacticClick(tactic)\">\r\n                <tactic-cell [viewModel]=\"viewModel\" [tactic]=\"tactic\"></tactic-cell>\r\n            </a></td>\r\n        </tr>\r\n        <tr>\r\n            <td *ngFor=\"let tactic of filterTactics(matrix.tactics)\" class=\"tactic count\">\r\n                {{filterTechniques(tactic.techniques, tactic).length }}<ng-container *ngIf=\"viewModel.layout.showName\">&nbsp;techniques</ng-container>\r\n            </td>\r\n        </tr>\r\n    </thead>\r\n    <tbody>\r\n        <tr>\r\n            <td *ngFor=\"let tactic of filterTactics(matrix.tactics)\" class=\"tactic\">\r\n                <table class=\"techniques-table\">\r\n                    <tr *ngFor=\"let technique of applyControls(tactic.techniques, tactic)\" class=\"technique-row\">\r\n                        <td>\r\n                            <ng-container *ngIf=\"technique.subtechniques.length == 0; else supertechnique\">\r\n                                <technique-cell\r\n                                                [tactic]=\"tactic\"\r\n                                                [technique]=\"technique\" \r\n                                                [viewModel]=\"viewModel\"\r\n                                                [matrix]=\"matrix\"\r\n                                                (leftclick)=\"onTechniqueLeftClick($event, technique, tactic)\"\r\n                                                (rightclick)=\"onTechniqueRightClick($event, technique)\"\r\n                                                (highlight)=\"onTechniqueHighlight($event, technique, tactic)\"\r\n                                                (unhighlight)=\"onTechniqueUnhighlight($event)\">\r\n                                </technique-cell>\r\n                            </ng-container>\r\n                            <ng-template #supertechnique>\r\n                                <table class=\"supertechnique\">\r\n                                    <tr>\r\n                                        <td class=\"technique\">\r\n                                            <technique-cell\r\n                                                            [tactic]=\"tactic\"\r\n                                                            [technique]=\"technique\" \r\n                                                            [viewModel]=\"viewModel\"\r\n                                                            [matrix]=\"matrix\"\r\n                                                            (leftclick)=\"onTechniqueLeftClick($event, technique, tactic)\"\r\n                                                            (rightclick)=\"onTechniqueRightClick($event, technique)\"\r\n                                                            (highlight)=\"onTechniqueHighlight($event, technique, tactic)\"\r\n                                                            (unhighlight)=\"onTechniqueUnhighlight($event)\">\r\n                                            </technique-cell>\r\n                                        </td>\r\n                                    </tr>\r\n                                </table>\r\n                            </ng-template>\r\n                        </td>\r\n                        <!-- TODO onclick expand -->\r\n                        <td *ngIf=\"technique.subtechniques.length > 0\" [ngClass]=\"{disabled: applyControls(technique.subtechniques, tactic).length == 0, expanded: viewModel.getTechniqueVM(technique, tactic).showSubtechniques && applyControls(technique.subtechniques, tactic).length > 0}\"\r\n                                class=\"sidebar sidebar--{{tactic.id}}--{{technique.id}}\" (click)=\"onToggleSubtechniquesVisible(technique, tactic)\">                            \r\n                            <div class=\"angle top\">\r\n                                <svg width=\"12px\" height=\"12px\">\r\n                                    <path d=\"M0 12H12V0Z\"/>\r\n                                </svg>\r\n                            </div>\r\n                            <div class=\"handle\"> = </div>\r\n                            <div class=\"angle bottom\">\r\n                                <svg width=\"12px\" height=\"12px\">\r\n                                    <path d=\"M0 0H12V12Z\"/>\r\n                                </svg>\r\n                            </div>\r\n                        </td>\r\n                        <td class=\"subtechniques-td\">\r\n                            <div class=\"subtechniques\"\r\n                                    [class.hidden]=\"!viewModel.getTechniqueVM(technique, tactic).showSubtechniques\">\r\n                                <div *ngFor=\"let subtechnique of applyControls(technique.subtechniques, tactic)\" class=\"subtechnique\">\r\n                                    <technique-cell\r\n                                                    [tactic]=\"tactic\"\r\n                                                    [technique]=\"subtechnique\" \r\n                                                    [viewModel]=\"viewModel\"\r\n                                                    [matrix]=\"matrix\"\r\n                                                    (leftclick)=\"onTechniqueLeftClick($event, subtechnique, tactic)\"\r\n                                                    (rightclick)=\"onTechniqueRightClick($event, subtechnique)\"\r\n                                                    (highlight)=\"onTechniqueHighlight($event, subtechnique, tactic)\"\r\n                                                    (unhighlight)=\"onTechniqueUnhighlight($event)\">\r\n                                    </technique-cell>\r\n                                </div>\r\n                            </div>\r\n                        </td>\r\n                    </tr>\r\n                </table>\r\n            </td>\r\n        </tr>\r\n    </tbody>\r\n</table>\r\n","/* (ignored) */","import { Component, Input, ViewChild, AfterViewInit, ViewEncapsulation, OnDestroy, ElementRef, Output, EventEmitter } from '@angular/core';\r\nimport { DataService } from '../data.service';\r\nimport { ConfigService } from '../config.service';\r\nimport { TabsComponent } from '../tabs/tabs.component';\r\nimport { ViewModel, ViewModelsService } from \"../viewmodels.service\";\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { Subscription } from 'rxjs';\r\nimport * as Excel from 'exceljs/dist/es5/exceljs.browser';\r\nimport * as is from 'is_js';\r\nimport * as tinycolor from 'tinycolor2';\r\n\r\n@Component({\r\n    selector: 'DataTable',\r\n    templateUrl: './data-table.component.html',\r\n    styleUrls: ['./data-table.component.scss'],\r\n    encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class DataTableComponent implements AfterViewInit, OnDestroy {\r\n    @ViewChild('scrollRef') private scrollRef: ElementRef;\r\n\r\n    //items for custom context menu\r\n    customContextMenuItems = [];\r\n    //is the legend panel currently expanded\r\n    showingLegend = false;\r\n\r\n    // The ViewModel being used by this data-table\r\n    @Input() viewModel: ViewModel;\r\n    @Input() currentDropdown: string = \"\"; //current dropdown menu\r\n    @Output() dropdownChange = new EventEmitter<any>();\r\n    @Output() onScroll = new EventEmitter<any>();\r\n\r\n    //////////////////////////////////////////////////////////\r\n    // Stringifies the current view model into a json string//\r\n    // stores the string as a blob                          //\r\n    // and then saves the blob as a json file               //\r\n    //////////////////////////////////////////////////////////\r\n\r\n    saveLayerLocally(){\r\n        var json = this.viewModel.serialize();\r\n        var blob = new Blob([json], {type: \"text/json\"});\r\n        let filename = this.viewModel.name.toLowerCase().replace(/ /g, \"_\") + \".json\";\r\n        this.saveBlob(blob, filename);\r\n    }\r\n\r\n    saveBlob(blob, filename){\r\n        if (is.ie()) { //internet explorer\r\n            window.navigator.msSaveOrOpenBlob(blob, filename)\r\n        } else {\r\n            var svgUrl = URL.createObjectURL(blob);\r\n            var downloadLink = document.createElement(\"a\");\r\n            downloadLink.href = svgUrl;\r\n            downloadLink.download = filename\r\n            document.body.appendChild(downloadLink);\r\n            downloadLink.click();\r\n            document.body.removeChild(downloadLink);\r\n        }\r\n    }\r\n\r\n    /////////////////////////////\r\n    //     EXPORT TO EXCEL     //\r\n    /////////////////////////////\r\n\r\n    saveLayerLocallyExcel() {\r\n        var workbook = new Excel.Workbook();\r\n        let domain = this.dataService.getDomain(this.viewModel.domainVersionID);\r\n        for (let matrix of domain.matrices) {\r\n            var worksheet = workbook.addWorksheet(matrix.name + \" (v\" + domain.getVersion() + \")\");\r\n\r\n            // create tactic columns\r\n            let columns = this.viewModel.filterTactics(matrix.tactics, matrix).map(tactic => { return {header: this.getDisplayName(tactic), key: tactic.name} });\r\n            worksheet.columns = columns;\r\n\r\n            // create cells\r\n            for (let tactic of this.viewModel.filterTactics(matrix.tactics, matrix)) {\r\n                let tacticCol = worksheet.getColumn(tactic.name);\r\n                let techniques = this.viewModel.applyControls(tactic.techniques, tactic, matrix);\r\n                let techniqueCells = techniques.map(technique => { return technique.name });\r\n                let subtechniqueList = [];\r\n\r\n                // create subtechnique cells, if shown\r\n                let subtechniqueCells = [];\r\n                for (let technique of techniques) {\r\n                    let techniqueRow = techniqueCells.indexOf(technique.name);\r\n                    let tvm = this.viewModel.getTechniqueVM(technique, tactic);\r\n                    if(tvm.showSubtechniques) {\r\n                        // retrieve subtechniques\r\n                        let subtechniques = this.viewModel.applyControls(technique.subtechniques, tactic, matrix)\r\n                            .map( sub => { return sub.name });\r\n                        subtechniqueList = subtechniqueList.concat(technique.subtechniques);\r\n\r\n                        // format technique cells for subtechniques\r\n                        let excelIndex = 0;\r\n                        for (let subtechnique of subtechniques) {\r\n                            if(excelIndex !== 0) {\r\n                                techniqueCells.splice(techniqueRow + excelIndex, 0, technique.name);\r\n                            }\r\n                            subtechniqueCells[techniqueRow + excelIndex++] = subtechnique;\r\n                        }\r\n\r\n                        // merge technique cells\r\n                        if (excelIndex > 0) {\r\n                            worksheet.mergeCells(techniqueRow + 2, tacticCol.number, techniqueRow + excelIndex + 1, tacticCol.number);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if(subtechniqueCells.length > 0) {\r\n                    // add subtechniques column\r\n                    let id = columns.findIndex(col => col.key == tactic.name);\r\n                    columns.splice(id + 1, 0, {header: this.getDisplayName(tactic), key: tactic.name + \"Subtechniques\"});\r\n                    worksheet.columns = columns;\r\n\r\n                    // merge subtechniques header\r\n                    let subtechniqueCol = worksheet.getColumn(tactic.name + \"Subtechniques\");\r\n                    worksheet.mergeCells(tacticCol.letter + '1:' + subtechniqueCol.letter + '1');\r\n                    subtechniqueCol.values = [tactic.name.toString() + \"Subtechniques\"].concat(subtechniqueCells);\r\n\r\n                    // style subtechnique cells\r\n                    const seen = [];\r\n                    subtechniqueCol.eachCell(cell => {\r\n                        if(cell.row > 1) {\r\n                            if(cell.value && cell.value !== undefined) {\r\n                                let subtechnique = subtechniqueList.find(s => {\r\n                                    return s.name == cell.value.substring(cell.value.indexOf(':') + 1).trim() && !seen.includes(s.attackID) });\r\n                                seen.push(subtechnique.attackID);\r\n                                let svm = this.viewModel.getTechniqueVM(subtechnique, tactic);\r\n                                this.styleCells(cell, subtechnique, svm);\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n                tacticCol.values = [this.getDisplayName(tactic)].concat(techniqueCells);\r\n\r\n                // style technique cells\r\n                tacticCol.eachCell(cell => {\r\n                    if (cell.row > 1) {\r\n                        if(cell.value && cell.value !== undefined) {\r\n                            let technique = techniques.find( t => {\r\n                                return t.name === cell.value.substring(cell.value.indexOf(':') + 1).trim() || t.attackID === cell.value });\r\n                            let tvm = this.viewModel.getTechniqueVM(technique, tactic);\r\n                            this.styleCells(cell, technique, tvm);\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n\r\n            // style tactic headers\r\n            worksheet.columns.forEach(column => {\r\n                if (this.viewModel.layout.showID && !this.viewModel.layout.showName) {\r\n                    column.width = column.header.length < 15 ? 15 : column.header.length;\r\n                } else if (!this.viewModel.layout.showID && !this.viewModel.layout.showName) {\r\n                    column.width = 10;\r\n                } else {\r\n                    column.width = column.header.length < 30 ? 30 : column.header.length;\r\n                }\r\n            });\r\n\r\n            worksheet.getRow(1).alignment = {horizontal: 'center'};\r\n            worksheet.getRow(1).border = {bottom: {style: 'thin'}};\r\n            worksheet.getRow(1).font = {bold: true};\r\n            if (this.viewModel.showTacticRowBackground) {\r\n                worksheet.getRow(1).fill = {type: 'pattern', pattern: 'solid', fgColor: {'argb': 'FF' + this.viewModel.tacticRowBackground.substring(1)}}\r\n                worksheet.getRow(1).font = {bold: true, color: {\"argb\": 'FF' + tinycolor.mostReadable(this.viewModel.tacticRowBackground, [\"white\", \"black\"]).toHex()}};\r\n            }\r\n        }\r\n\r\n        // save file\r\n        workbook.xlsx.writeBuffer().then(data => {\r\n            const blob = new Blob( [data], {type: \"application/octet-stream\"} );\r\n            const filename = this.viewModel.name.toLowerCase().replace(/ /g, \"_\") + \".xlsx\";\r\n            this.saveBlob(blob, filename);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Get the display name for technique/tactic as shown in layout\r\n     */\r\n    getDisplayName(technique) {\r\n        if (this.viewModel.layout.showID && this.viewModel.layout.showName) {\r\n            return technique.attackID + ': ' + technique.name;\r\n        } else if (this.viewModel.layout.showID) {\r\n            return technique.attackID;\r\n        } else if (this.viewModel.layout.showName) {\r\n            return technique.name;\r\n        } else {\r\n            return '';\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Helper function for exporting to excel to stylize cells\r\n     */\r\n    styleCells(cell, technique, tvm) {\r\n        cell.value = this.getDisplayName(technique);\r\n\r\n        // cell format\r\n        cell.alignment = {vertical: 'top', horizontal: 'left'};\r\n        if(tvm.enabled) {\r\n            if (tvm.color) { //manually assigned\r\n                cell.fill = {type: 'pattern', pattern: 'solid', fgColor: {argb: 'FF' + tvm.color.substring(1)}};\r\n                cell.font = {color: {'argb': 'FF' + tinycolor.mostReadable(tvm.color, [\"white\", \"black\"]).toHex()}};\r\n            }\r\n            else if (this.viewModel.layout._showAggregateScores && tvm.aggregateScoreColor) {\r\n                cell.fill = {type: 'pattern', pattern: 'solid', fgColor: {argb: 'FF' + tvm.aggregateScoreColor.toHex()}};\r\n                cell.font = {color: {'argb': 'FF' + tinycolor.mostReadable(tvm.aggregateScoreColor, [\"white\", \"black\"]).toHex()}};\r\n            }\r\n            else if (tvm.score) { //score assigned\r\n                cell.fill = {type: 'pattern', pattern: 'solid', fgColor: {argb: 'FF' + tvm.scoreColor.toHex()}};\r\n                cell.font = {color: {'argb': 'FF' + tinycolor.mostReadable(tvm.scoreColor, [\"white\", \"black\"]).toHex()}};\r\n            }\r\n            if (tvm.comment) { //comment present on technique\r\n                cell.note = tvm.comment;\r\n            }\r\n        } else { //disabled\r\n            cell.font = {color: {'argb': 'FFBCBCBC'}}\r\n        }\r\n\r\n        // subtechniques border\r\n        if (tvm.showSubtechniques) {\r\n            cell.border = {top: {style: 'thin'}, bottom:{style: 'thin'}, left: {style: 'thin'}}\r\n        } else if (technique.isSubtechnique) {\r\n            cell.border = {top: {style: 'thin'}, bottom:{style: 'thin'}, right: {style: 'thin'}}\r\n        }\r\n    }\r\n\r\n    private selectionChangeSubscription: Subscription;\r\n    constructor(public dataService: DataService,\r\n                private tabs: TabsComponent,\r\n                private sanitizer: DomSanitizer,\r\n                private viewModelsService: ViewModelsService,\r\n                public configService: ConfigService) {\r\n\r\n        this.selectionChangeSubscription = this.viewModelsService.onSelectionChange.subscribe(() => {\r\n            this.onTechniqueSelect();\r\n        })\r\n    }\r\n\r\n    /**\r\n     * Angular lifecycle hook\r\n     */\r\n    ngAfterViewInit(): void {\r\n        // setTimeout(() => this.exportRender(), 500);\r\n        this.headerHeight = document.querySelector<HTMLElement>('.header-wrapper')?.offsetHeight;\r\n        this.scrollRef.nativeElement.style.height = `calc(100vh - ${this.headerHeight + this.controlsHeight + this.footerHeight}px)`;\r\n        this.scrollRef.nativeElement.addEventListener('scroll', this.handleScroll);\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.selectionChangeSubscription.unsubscribe();\r\n        document.body.removeEventListener('scroll', this.handleScroll);\r\n    }\r\n\r\n    handleDescriptionDropdown() {\r\n        this.currentDropdown !== 'description' ? this.currentDropdown = 'description' : this.currentDropdown = '';\r\n        this.dropdownChange.emit(this.currentDropdown);\r\n    }\r\n\r\n    previousScrollTop = 0;\r\n    headerHeight = 0;\r\n    footerHeight = 32;\r\n    controlsHeight = 34;\r\n    isScrollUp = true;\r\n    handleScroll = (e) => {\r\n        const diff = this.scrollRef.nativeElement.scrollTop - this.previousScrollTop;\r\n        if (!this.isScrollUp && diff < 0) {\r\n            this.isScrollUp =  diff < 0;\r\n            this.calculateScrollHeight();\r\n            this.previousScrollTop = this.scrollRef.nativeElement.scrollTop;\r\n        } else if (this.isScrollUp && diff > 0) {\r\n            this.isScrollUp =  diff < 0;\r\n            this.calculateScrollHeight();\r\n            this.previousScrollTop = this.scrollRef.nativeElement.scrollTop;\r\n        } else if (!this.isScrollUp && this.scrollRef.nativeElement.scrollTop > 0 && diff === 0) {\r\n            this.calculateScrollHeight();\r\n        }\r\n    }\r\n\r\n    calculateScrollHeight = () => {\r\n        const tabOffset = this.isScrollUp ? 0 : this.headerHeight;\r\n        this.onScroll.emit(-1 * tabOffset);\r\n        const scrollWindowHeight = this.isScrollUp ? this.headerHeight + this.controlsHeight + this.footerHeight : this.controlsHeight;\r\n        this.scrollRef.nativeElement.style.height = `calc(100vh - ${scrollWindowHeight}px)`;\r\n    }\r\n\r\n    // open custom url in a new tab\r\n    openCustomURL(event, technique, url){\r\n        // var formattedTechniqueName = this.contextMenuSelectedTechnique.name.replace(/ /g, \"_\");\r\n\r\n        // var formattedURL = url.replace(/~Technique_ID~/g, this.contextMenuSelectedTechnique.technique_id);\r\n        // formattedURL = formattedURL.replace(/~Technique_Name~/g, formattedTechniqueName);\r\n        // formattedURL = formattedURL.replace(/~Tactic_Name~/g, this.contextMenuSelectedTactic);\r\n\r\n        // var win = window.open(formattedURL);\r\n        // if (win) {\r\n        //     win.focus();\r\n        // } else {\r\n        //     alert('Please allow popups for this website');\r\n        // }\r\n    }\r\n\r\n\r\n    // edit field bindings\r\n    commentEditField: string = \"\";\r\n    scoreEditField: string = \"\";\r\n\r\n    /**\r\n     * triggered on left click of technique\r\n     */\r\n    onTechniqueSelect(): void {\r\n        if (!this.viewModel.isCurrentlyEditing()) {\r\n            if ([\"comment\", \"score\", \"colorpicker\", \"link\", \"metadata\"].includes(this.currentDropdown)) this.currentDropdown = \"\"; //remove technique control dropdowns, because everything was deselected\r\n            return;\r\n        }\r\n        if (this.currentDropdown == \"link\" || this.currentDropdown == \"metadata\") {\r\n            this.currentDropdown = \"\";\r\n            return;\r\n        }\r\n        //else populate editing controls\r\n        this.populateEditFields();\r\n    }\r\n\r\n    /**\r\n     * Show all sub-techniques in layout view\r\n     */\r\n    expandSubtechniques(showAnnotatedOnly?: boolean): void {\r\n        if (this.viewModel.layout.layout == \"mini\") return; //control disabled in mini layout\r\n        for (let technique of this.dataService.getDomain(this.viewModel.domainVersionID).techniques) {\r\n            if (technique.subtechniques.length > 0) {\r\n                for (let id of technique.get_all_technique_tactic_ids()) {\r\n                    let tvm = this.viewModel.getTechniqueVM_id(id);\r\n                    if (!showAnnotatedOnly) {\r\n                        tvm.showSubtechniques = true;\r\n                    } else {\r\n                        for (let subtechnique of technique.subtechniques) {\r\n                            tvm.showSubtechniques = tvm.showSubtechniques || subtechnique.get_all_technique_tactic_ids().some((sid) => {\r\n                                let svm = this.viewModel.getTechniqueVM_id(sid);\r\n                                return svm.annotated();\r\n                            })\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Hide all sub-techniques in layout view\r\n     */\r\n    collapseSubtechniques(): void {\r\n        if (this.viewModel.layout.layout == \"mini\") return; //control disabled in mini layout\r\n        this.viewModel.techniqueVMs.forEach(function(tvm, key) {\r\n            tvm.showSubtechniques = false; });\r\n    }\r\n\r\n    /**\r\n     * populate edit fields. Gets common values if common values exist for all editing values\r\n     */\r\n    populateEditFields(): void {\r\n        this.commentEditField = this.viewModel.getEditingCommonValue(\"comment\");\r\n        this.scoreEditField = this.viewModel.getEditingCommonValue(\"score\");\r\n    }\r\n\r\n    /**\r\n     * Set the state (enabled/disabled) of the selected features\r\n     */\r\n    setSelectedState(): void {\r\n        let currentState = this.viewModel.getEditingCommonValue('enabled')\r\n        if (currentState === '') this.viewModel.editSelectedTechniques('enabled', false)\r\n        else                     this.viewModel.editSelectedTechniques('enabled', !currentState)\r\n    }\r\n\r\n    //sanitize the given css so that it can be displayed without error\r\n    sanitize(css) {\r\n        return this.sanitizer.bypassSecurityTrustStyle(css);\r\n    }\r\n\r\n    /**\r\n     * Is score input valid number\r\n     * @param  event keypress event just in case we need it\r\n     * @return       true if valid number\r\n     */\r\n    validateScoreInput(event) {\r\n        let result: boolean = isNaN(Number(this.scoreEditField))\r\n        return result\r\n    }\r\n\r\n    /**\r\n     * Return whether the given dropdown element would overflow the side of the page if aligned to the right of its anchor\r\n     * @param  dropdown the DOM node of the panel\r\n     * @return          true if it would overflow\r\n     */\r\n    checkalign(dropdown): boolean {\r\n        // console.log(anchor)\r\n        let anchor = dropdown.parentNode;\r\n        return anchor.getBoundingClientRect().left + dropdown.getBoundingClientRect().width > document.body.clientWidth;\r\n    }\r\n\r\n    /**\r\n     * open an export layer render tab for the current layer\r\n     */\r\n    exportRender(): void {\r\n        this.tabs.openSVGDialog(this.viewModel);\r\n    }\r\n\r\n    /**\r\n     * open search & multiselect sidebar\r\n     */\r\n    openSearch(): void {\r\n        if (this.viewModel.sidebarContentType !== 'layerUpgrade') {\r\n            this.viewModel.sidebarOpened = (this.viewModel.sidebarContentType !== 'search') ? true : !this.viewModel.sidebarOpened;\r\n            this.viewModel.sidebarContentType = 'search';\r\n        }\r\n    }\r\n}\r\n","<!--\r\n  oooooooo8   ooooooo  oooo   oooo ooooooooooo oooooooooo    ooooooo  ooooo        oooooooo8\r\no888     88 o888   888o 8888o  88  88  888  88  888    888 o888   888o 888        888\r\n888         888     888 88 888o88      888      888oooo88  888     888 888         888oooooo\r\n888o     oo 888o   o888 88   8888      888      888  88o   888o   o888 888      o         888\r\n 888oooo88    88ooo88  o88o    88     o888o    o888o  88o8   88ooo88  o888ooooo88 o88oooo888\r\n                                                                                              -->\r\n\r\n<div class=\"controlsContainer\">\r\n    <ul class=\"control-sections\">\r\n        <li *ngIf=\"configService.getFeatureGroup('selection_controls', 'any') && configService.getFeature('selecting_techniques')\">\r\n            <div *ngIf=\"configService.getFeatureGroupCount('selection_controls') >= 3\" class=\"section-label\">\r\n                selection controls\r\n            </div>\r\n\r\n\r\n            <!-- lock selection locks -->\r\n            <div *ngIf=\"configService.getFeature('selecting_techniques')\" class=\"control-row-item\">\r\n                <div class=\"control-row-button dropdown noselect\"\r\n                     (click)=\"currentDropdown = currentDropdown !== 'selection_behavior' ? 'selection_behavior' : null;\"\r\n                     matTooltipPosition=\"below\"\r\n                     matTooltip=\"selection behavior\">\r\n                    <span class=\"material-icons\">lock</span>\r\n                </div>\r\n                <div class=\"dropdown-container select_behavior\" *ngIf=\"currentDropdown === 'selection_behavior'\" #dropdown [class.left]=\"checkalign(dropdown)\">\r\n                    <!-- selectTechniquesAcrossTactics -->\r\n                    <div>\r\n                        <input id=\"select_behavior_tactic\" class=\"checkbox-custom\" type=\"checkbox\" [(ngModel)]=\"viewModel.selectTechniquesAcrossTactics\">\r\n                        <label for=\"select_behavior_tactic\" class=\"checkbox-custom-label noselect\">select techniques across tactics</label>\r\n                    </div>\r\n                    <!-- selectSubtechniquesWithParent -->\r\n                    <div *ngIf=\"configService.getFeature('subtechniques')\">\r\n                        <input id=\"select_behavior_subtechnique\" class=\"checkbox-custom\" type=\"checkbox\"  [(ngModel)]=\"viewModel.selectSubtechniquesWithParent\">\r\n                        <label for=\"select_behavior_subtechnique\" class=\"checkbox-custom-label noselect\">select sub-techniques with parent</label>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n\r\n            <!-- Search -->\r\n            <div *ngIf=\"configService.getFeature('search')\" class=\"control-row-item\">\r\n\r\n                <div class=\"control-row-button noselect\"\r\n                     [ngClass]=\"{'disabled': viewModel.sidebarContentType === 'layerUpgrade'}\"\r\n                     (click)=\"openSearch()\"\r\n                     matTooltipPosition=\"below\"\r\n                     matTooltip=\"search & multiselect\">\r\n                    <span class=\"material-icons\" alt=\"search\">search</span>\r\n                </div>\r\n            </div>\r\n\r\n            <!-- deselect all -->\r\n            <div *ngIf=\"configService.getFeature('deselect_all')\" class=\"control-row-item\">\r\n                <div class=\"control-row-button noselect\"\r\n                     (click)=\"viewModel.clearSelectedTechniques(); currentDropdown = null;\"\r\n                     matTooltipPosition=\"below\"\r\n                     matTooltip=\"deselect {{this.viewModel.getSelectedTechniqueCount()}} techniques\">\r\n                    <span class=\"material-icons\" alt=\"deselect all\">clear</span>\r\n                    <span class=\"deselectNumber\">{{this.viewModel.getSelectedTechniqueCount()}}</span>\r\n                </div>\r\n            </div>\r\n\r\n\r\n        </li>\r\n        <li *ngIf=\"configService.getFeatureGroup('layer_controls', 'any')\">\r\n            <div *ngIf=\"configService.getFeatureGroupCount('layer_controls') >= 2\" class=\"section-label\">\r\n                layer controls\r\n            </div>\r\n\r\n            <!-- layer name, description, metadata, and links -->\r\n            <div *ngIf=\"configService.getFeature('layer_info')\" class=\"control-row-item\">\r\n\r\n                <div class=\"control-row-button dropdown noselect\"\r\n                     (click)=\"handleDescriptionDropdown()\"\r\n                     matTooltipPosition=\"below\"\r\n                     matTooltip=\"layer information\">\r\n                    <span class=\"material-icons\" alt=\"layer information\">description</span>\r\n                </div>\r\n\r\n                <!-- description input (invisible, absolute) -->\r\n                <div class=\"dropdown-container inputfield layer_info\" #dropdown [class.left]=\"checkalign(dropdown)\"\r\n                     *ngIf=\"currentDropdown === 'description'\">\r\n\r\n                    <!-- layer name field -->\r\n                    <div class=\"name_desc\">\r\n                        <mat-form-field>\r\n                                <input matInput\r\n                                        type=\"text\"\r\n                                        placeholder=\"name\"\r\n                                        [(ngModel)]=\"viewModel.name\" />\r\n                            </mat-form-field>\r\n\r\n                            <!-- layer description field -->\r\n                            <mat-form-field>\r\n                                <textarea matInput\r\n                                            matTextareaAutosize\r\n                                            placeholder=\"description\"\r\n                                            [(ngModel)]=\"viewModel.description\">\r\n                                </textarea>\r\n                            </mat-form-field>\r\n\r\n                            <!-- layer domain (uneditable) -->\r\n                            <mat-form-field>\r\n                                <input matInput readonly disabled\r\n                                    type=\"text\"\r\n                                    placeholder=\"domain\"\r\n                                    [(ngModel)]=\"dataService.getDomain(viewModel.domainVersionID).name\" />\r\n                            </mat-form-field>\r\n\r\n                            <!-- layer version (uneditable) -->\r\n                            <mat-form-field>\r\n                                <input matInput readonly disabled\r\n                                    type=\"text\"\r\n                                    placeholder=\"version\"\r\n                                    [(ngModel)]=\"dataService.getDomain(viewModel.domainVersionID).version.number\" />\r\n                            </mat-form-field>\r\n\r\n                            <!-- bundle URL (uneditable) -->\r\n                            <mat-form-field *ngIf=\"viewModel.bundleURL\">\r\n                                <input matInput readonly disabled\r\n                                    type=\"text\"\r\n                                    placeholder=\"collection/bundle url\"\r\n                                    [(ngModel)]=\"viewModel.bundleURL\" />\r\n                            </mat-form-field>\r\n                    </div>\r\n                    <div class=\"layer-data\">\r\n                        <!-- layer metadata -->\r\n                        <b>Metadata</b>\r\n                        <div class=\"data-input\">\r\n                            <app-list-input [config]=\"{'viewModel': viewModel, 'list': viewModel.metadata, 'level': 'layer', 'type': 'metadata', 'nameField': 'name', valueField: 'value'}\"></app-list-input>\r\n                        </div>\r\n\r\n                        <mat-divider class=\"layer-div\"></mat-divider>\r\n                        \r\n                        <!-- layer links -->\r\n                        <b>Links</b>\r\n                        <div class=\"data-input\">\r\n                            <app-list-input [config]=\"{'viewModel': viewModel, 'list': viewModel.links, 'level': 'layer', 'type': 'links', 'nameField': 'label', valueField: 'url'}\"></app-list-input>\r\n                        </div>\r\n                    </div>\r\n                 </div>\r\n             </div>\r\n\r\n\r\n\r\n            <!-- save locally as JSON -->\r\n            <div *ngIf=\"configService.getFeature('download_layer')\" class=\"control-row-item\">\r\n                <div class=\"control-row-button noselect\"\r\n                     (click)=\"saveLayerLocally()\"\r\n                     matTooltipPosition=\"below\"\r\n                     matTooltip=\"download layer as json\">\r\n                    <span class=\"material-icons\" alt=\"save layer\">file_download</span>\r\n                </div>\r\n            </div>\r\n\r\n            <!-- export to excel -->\r\n            <div *ngIf=\"configService.getFeature('export_excel')\" class=\"control-row-item\">\r\n                <div class=\"control-row-button noselect\"\r\n                     (click)=\"saveLayerLocallyExcel()\"\r\n                     matTooltipPosition=\"below\"\r\n                     matTooltip=\"export to excel\">\r\n                    <span class=\"material-icons\" alt=\"save layer\">grid_on</span>\r\n                </div>\r\n            </div>\r\n\r\n\r\n            <!-- render layer to SVG -->\r\n            <div *ngIf=\"configService.getFeature('export_render')\" class=\"control-row-item\">\r\n                <div class=\"control-row-button noselect\"\r\n                     (click)=\"exportRender()\"\r\n                     matTooltipPosition=\"below\"\r\n                     matTooltip=\"render layer to SVG\">\r\n                    <span class=\"material-icons\" alt=\"export render\">camera_alt</span>\r\n                </div>\r\n            </div>\r\n\r\n            <!-- Filters -->\r\n            <div *ngIf=\"configService.getFeature('filters')\" class=\"control-row-item\">\r\n\r\n                <div class=\"control-row-button dropdown noselect\"\r\n                     (click)=\"currentDropdown = currentDropdown !== 'filters' ? 'filters' : null;\"\r\n                     matTooltipPosition=\"below\"\r\n                     matTooltip=\"filters\">\r\n                    <span class=\"material-icons\">filter_list</span>\r\n                </div>\r\n                <div class=\"dropdown-container filters\" *ngIf=\"currentDropdown === 'filters'\" #dropdown [class.left]=\"checkalign(dropdown)\">\r\n                    <div class=\"filter\" *ngFor=\"let filter of ['platforms']\">\r\n                        <b class=\"filter-label\">{{filter}}</b>\r\n                        <div *ngIf=\"viewModel.filters[filter].options.length !== 0\">\r\n                            <div class=\"filter-option\" *ngFor=\"let filterOption of viewModel.filters[filter].options\">\r\n                                <!-- <label class=\"noselect\"><input type=\"checkbox\" (click)=\"viewModel.filters.toggleInFilter(filter, filterOption); filterTechniques()\" [checked]=\"viewModel.filters.inFilter(filter, filterOption)\">{{filterOption}}</label> -->\r\n                                <input [id]=\"filterOption\" class=\"checkbox-custom\" type=\"checkbox\" (click)=\"viewModel.filters.toggleInFilter(filter, filterOption);\" [checked]=\"viewModel.filters.inFilter(filter, filterOption)\">\r\n                                <label [for]=\"filterOption\" class=\"checkbox-custom-label noselect\">{{filterOption}}</label>\r\n                            </div>\r\n                        </div>\r\n                        <div *ngIf=\"viewModel.filters[filter].options.length == 0\">\r\n                            Data does not include {{filter}}\r\n                        </div>\r\n                        <!-- <div class=\"filter-option\" *ngFor=\"let filterOption of viewModel.filters[filter].options\" (click)=\"viewModel.filters.toggleInFilter(filter, filterOption); filterTechniques()\">\r\n                            {{filterOption}}  {{viewModel.filters.inFilter(filter, filterOption)}}\r\n                        </div> -->\r\n                    </div>\r\n                    <!-- <mat-select placeholder=\"platforms\" [(ngModel)]=\"platformControl\"\r\n                        multiple disableRipple autofocus (change)=\"filterTechniques(); viewModel.filters.platforms.selection = platformsControl\">\r\n                        <mat-option *ngFor=\"let platformOption of viewModel.filters.platforms.options\" [value]=\"platformOption\">{{platformOption}}</mat-option>\r\n                    </mat-select> -->\r\n                    <!-- <filter-menu [dataTable]=\"this\"></filter-menu> -->\r\n                </div>\r\n            </div>\r\n\r\n            <!-- sorting -->\r\n            <div *ngIf=\"configService.getFeature('sorting')\" class=\"control-row-item\">\r\n                <div class=\"control-row-button noselect\"\r\n                     (click)=\"viewModel.sorting = (viewModel.sorting + 1) % 4;\"\r\n                     matTooltipPosition=\"below\"\r\n                     [matTooltip]=\"['sorting alphabetically ascending', 'sorting alphabetically descending', 'sorting by score ascending', 'sorting by score descending'][viewModel.sorting]\">\r\n                    <span [ngSwitch]=\"['alpha_asc', 'alpha_desc', 'numeric_asc', 'numeric_desc'][viewModel.sorting]\">\r\n                        <ng-container *ngSwitchCase=\"'alpha_asc'\"><mat-icon\r\n                                svgIcon=\"ic_sort_alphabetically_ascending\"></mat-icon></ng-container>\r\n                        <ng-container *ngSwitchCase=\"'alpha_desc'\"><mat-icon\r\n                                svgIcon=\"ic_sort_alphabetically_descending\"></mat-icon></ng-container>\r\n                        <ng-container *ngSwitchCase=\"'numeric_asc'\"><mat-icon\r\n                                svgIcon=\"ic_sort_numerically_ascending\"></mat-icon></ng-container>\r\n                        <ng-container *ngSwitchCase=\"'numeric_desc'\"><mat-icon\r\n                                svgIcon=\"ic_sort_numerically_descending\"></mat-icon></ng-container>\r\n                    </span>\r\n                </div>\r\n            </div>\r\n\r\n            <!-- color setup -->\r\n            <div *ngIf=\"configService.getFeature('color_setup')\" class=\"control-row-item\">\r\n                <div class=\"control-row-button dropdown noselect\"\r\n                     (click)=\"currentDropdown = currentDropdown !== 'colorSetup' ? 'colorSetup' : null; viewModel.updateGradient()\"\r\n                     matTooltipPosition=\"below\"\r\n                     matTooltip=\"color setup\">\r\n                    <span class=\"material-icons\">palette</span>\r\n                </div>\r\n                <div class=\"dropdown-container colorSetup\" *ngIf=\"currentDropdown === 'colorSetup'\" #dropdown [class.left]=\"checkalign(dropdown)\">\r\n\r\n                    <div class=\"tacticRowColor\">\r\n                        <div class=\"gradient-section-label\">\r\n                            Tactic Row Background\r\n                        </div>\r\n                        <div class=\"gradient-section-content\">\r\n                            <input id=\"showTacticRowBackground\" type=\"checkbox\" class=\"checkbox-custom\" [(ngModel)]=viewModel.showTacticRowBackground>\r\n                            <label for=\"showTacticRowBackground\" class=\"checkbox-custom-label noselect\">show</label>\r\n                            <input class=\"colorpicker\" [(colorPicker)]=\"viewModel.tacticRowBackground\" [(ngModel)]=\"viewModel.tacticRowBackground\" [style.background]=\"viewModel.tacticRowBackground\" cpPosition=\"bottom\" [cpPresetColors]=\"['#ddd', '#aaaaaa', '#205B8F', '#B9482D']\">\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"gradient\">\r\n                        <div class=\"gradient-section-label\">\r\n                            Scoring Gradient\r\n                        </div>\r\n                        <div class=\"gradient-controls gradient-section-content\">\r\n                            <table>\r\n                                <tr class=\"minmax top\">\r\n                                    <td>Low value:</td>\r\n                                    <td class=\"col2\"><input type=\"number\" (input)=\"viewModel.updateGradient()\" [(ngModel)]=\"viewModel.gradient.minValue\" [max]=viewModel.gradient.maxValue></td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td class=\"buttons\">\r\n                                        <div *ngFor=\"let gradientStep of viewModel.gradient.colors; let $i = index\">\r\n                                            <div class=\"left\">\r\n                                                <button (click)=\"viewModel.removeGradientColor($i)\" [disabled]=\"viewModel.gradient.colors.length == 2\">remove</button>\r\n                                            </div>\r\n                                            <div class=\"right\">\r\n                                                <input class=\"colorpicker\" (colorPickerChange)=\"viewModel.updateGradient()\" (cpPresetColorsChange)=\"viewModel.updateGradient()\" (cpSliderChange)=\"viewModel.updateGradient()\" (cpInputChange)=\"viewModel.updateGradient()\" [(colorPicker)]=\"gradientStep.color\" [(ngModel)]=\"gradientStep.color\" [style.background]=\"gradientStep.color\" cpPosition=\"bottom\" [cpPresetColors]=\"viewModel.gradient.options\">\r\n                                                <!-- <select [(ngModel)]=\"gradientStep.color\" (ngModelChange)=\"viewModel.updateGradient()\">\r\n                                                    <option *ngFor=\"let color of viewModel.gradient.options\" [ngValue]=\"color\">{{color}}</option>\r\n                                                    option shows up if a nonstandard option is selected, from uploading a custom layer\r\n                                                    <option *ngIf=\"!(viewModel.gradient.labelToColor.hasOwnProperty(gradientStep.color))\" [ngValue]=gradientStep.color>{{gradientStep.color}}</option>\r\n                                                </select> -->\r\n                                            </div>\r\n                                        </div>\r\n                                    </td>\r\n                                    <td class=\"col2\" [style.background-image]=\"sanitize(viewModel.gradient.gradient.css('linear', 'to bottom'))\"> </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td><button class=\"addcolor\" (click)=\"viewModel.addGradientColor();\">add another color</button></td>\r\n                                </tr>\r\n                                <tr class=\"minmax bottom\">\r\n                                    <td>High value: </td>\r\n                                    <td class=\"col2 \"><input type=\"number\" (input)=\"viewModel.updateGradient()\" [(ngModel)]=\"viewModel.gradient.maxValue\" [min]=viewModel.gradient.minValue></td>\r\n                                </tr>\r\n                            </table>\r\n                            <div class=\"display-buttons\">\r\n                                <div class=\"squarebutton dropdown noselect\" (click)=\"presetsMenuVisible = !presetsMenuVisible\">\r\n                                    presets <span style=\"font-size:5pt\">▼</span>\r\n                                </div >\r\n                                <div class=\"dropdown-container presetsmenu\" *ngIf=\"presetsMenuVisible\">\r\n                                    <div class=\"squarebutton noselect gradient\" (click)=\"viewModel.gradient.setGradientPreset('redgreen'); presetsMenuVisible = false; viewModel.updateGradient()\" [style.background-image]=\"sanitize(viewModel.gradient.presetToTinyColor('redgreen'))\">red to green</div>\r\n                                    <div class=\"squarebutton noselect gradient\" (click)=\"viewModel.gradient.setGradientPreset('greenred'); presetsMenuVisible = false; viewModel.updateGradient()\" [style.background-image]=\"sanitize(viewModel.gradient.presetToTinyColor('greenred'))\">green to red</div>\r\n                                    <div class=\"squarebutton noselect gradient\" (click)=\"viewModel.gradient.setGradientPreset('bluered'); presetsMenuVisible = false; viewModel.updateGradient()\" [style.background-image]=\"sanitize(viewModel.gradient.presetToTinyColor('bluered'))\">blue to red</div>\r\n                                    <div class=\"squarebutton noselect gradient\" (click)=\"viewModel.gradient.setGradientPreset('redblue'); presetsMenuVisible = false; viewModel.updateGradient()\" [style.background-image]=\"sanitize(viewModel.gradient.presetToTinyColor('redblue'))\">red to blue</div>\r\n                                    <div class=\"squarebutton noselect gradient\" (click)=\"viewModel.gradient.setGradientPreset('transparentblue'); presetsMenuVisible = false; viewModel.updateGradient()\" [style.background-image]=\"sanitize(viewModel.gradient.presetToTinyColor('transparentblue'))\">transparent to blue</div>\r\n                                    <div class=\"squarebutton noselect gradient\" (click)=\"viewModel.gradient.setGradientPreset('transparentred'); presetsMenuVisible = false; viewModel.updateGradient()\" [style.background-image]=\"sanitize(viewModel.gradient.presetToTinyColor('transparentred'))\">transparent to red</div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <!-- show or hide disabled techniques -->\r\n            <div *ngIf=\"configService.getFeature('toggle_hide_disabled')\" class=\"control-row-item\">\r\n                <div class=\"control-row-button noselect\"\r\n                     (click)=\"viewModel.hideDisabled = !viewModel.hideDisabled;\"\r\n                     matTooltipPosition=\"below\"\r\n                     matTooltip=\"show/hide disabled\">\r\n                    <span *ngIf=\"viewModel.hideDisabled\" class=\"material-icons\"\r\n                          alt=\"show disabled\">visibility_off</span>\r\n                    <span *ngIf=\"!viewModel.hideDisabled\" class=\"material-icons\" alt=\"hide disabled\">visibility</span>\r\n                </div>\r\n            </div>\r\n\r\n            <!-- expand all sub-techniques -->\r\n            <div *ngIf=\"configService.getFeature('subtechniques')\" class=\"control-row-item\">\r\n                <div class=\"control-row-button noselect\"\r\n                     [ngClass]=\"{'disabled': viewModel.layout.layout === 'mini'}\"\r\n                     (click)=\"expandSubtechniques()\"\r\n                     matTooltipPosition=\"below\"\r\n                     matTooltip=\"expand sub-techniques\">\r\n                    <span class=\"material-icons\"\r\n                          alt=\"expand sub-techniques\">unfold_more</span>\r\n                </div>\r\n            </div>\r\n\r\n            <!-- expand only annotated sub-techniques -->\r\n            <div *ngIf=\"configService.getFeature('subtechniques')\" class=\"control-row-item\">\r\n                <div class=\"control-row-button noselect\"\r\n                     [ngClass]=\"{'disabled': viewModel.layout.layout === 'mini'}\"\r\n                     (click)=\"expandSubtechniques(true)\"\r\n                     matTooltipPosition=\"below\"\r\n                     matTooltip=\"expand annotated sub-techniques\">\r\n                    <mat-icon svgIcon=\"ic_unfold_more_alt\"></mat-icon>\r\n                </div>\r\n            </div>\r\n\r\n            <!-- collapse all sub-techniques -->\r\n            <div *ngIf=\"configService.getFeature('subtechniques')\" class=\"control-row-item\">\r\n                <div class=\"control-row-button noselect\"\r\n                     [ngClass]=\"{'disabled': viewModel.layout.layout === 'mini'}\"\r\n                     (click)=\"collapseSubtechniques()\"\r\n                     matTooltipPosition=\"below\"\r\n                     matTooltip=\"collapse sub-techniques\">\r\n                    <span class=\"material-icons\"\r\n                          alt=\"collapse sub-techniques\">unfold_less</span>\r\n                </div>\r\n            </div>\r\n\r\n            <!-- layout -->\r\n            <div *ngIf=\"configService.getFeature('layout_controls')\" class=\"control-row-item\">\r\n                <div class=\"control-row-button dropdown noselect\"\r\n                     (click)=\"currentDropdown = currentDropdown !== 'layout' ? 'layout' : null;\"\r\n                     matTooltipPosition=\"below\"\r\n                     matTooltip=\"matrix configuration\">\r\n                    <span class=\"material-icons\">view_module</span>\r\n                </div>\r\n                <div class=\"dropdown-container layout\" *ngIf=\"currentDropdown === 'layout'\" #dropdown [class.left]=\"checkalign(dropdown)\">\r\n                    <div class=\"section\">\r\n                        <select [(ngModel)]=\"viewModel.layout.layout\" placeholder=\"layout\">\r\n                            <option *ngFor=\"let option of viewModel.layout.layoutOptions\" [value]=\"option\">{{option}} layout</option>\r\n                        </select>\r\n                    </div>\r\n                    <div class=\"section\">\r\n                        <b class=\"filter-label\">labels</b>\r\n                        <div>\r\n                             <input [disabled]=\"viewModel.layout.layout == 'mini'\" id=\"showID-option\" class=\"checkbox-custom\" type=\"checkbox\" [(ngModel)]=\"viewModel.layout.showID\">\r\n                             <label [class.disabled]=\"viewModel.layout.layout == 'mini'\" for=\"showID-option\" class=\"checkbox-custom-label noselect\">show IDs</label>\r\n\r\n                        </div>\r\n                        <div>\r\n                            <input [disabled]=\"viewModel.layout.layout == 'mini'\" id=\"showName-option\" class=\"checkbox-custom\" type=\"checkbox\"  [(ngModel)]=\"viewModel.layout.showName\">\r\n                            <label [class.disabled]=\"viewModel.layout.layout == 'mini'\" for=\"showName-option\" class=\"checkbox-custom-label noselect\">show names</label>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"section\">\r\n                        <b class=\"filter-label\">aggregate scores</b>\r\n                        <div>\r\n                            <input id=\"showAggregateScores-option\" class=\"checkbox-custom\" type=\"checkbox\"  [(ngModel)]=\"viewModel.layout.showAggregateScores\">\r\n                            <label for=\"showAggregateScores-option\" class=\"checkbox-custom-label noselect\">show aggregate scores</label>\r\n                        </div>\r\n                        <div>\r\n                            <input [disabled]=\"!viewModel.layout.showAggregateScores || viewModel.layout.aggregateFunction !== 'average'\"\r\n                                id=\"countUnscored-option\" class=\"checkbox-custom\" type=\"checkbox\"\r\n                                [(ngModel)]=\"viewModel.layout.countUnscored\">\r\n                            <label [class.disabled]=\"!viewModel.layout.showAggregateScores || viewModel.layout.aggregateFunction !== 'average'\"\r\n                                for=\"countUnscored-option\"\r\n                                class=\"checkbox-custom-label noselect\">count unscored techniques as 0</label>\r\n                        </div>\r\n                        <div class=\"subsection\">\r\n                            <label for=\"aggregateFunctionDropdown\">aggregate function: </label>\r\n                            <div class=\"inner-dropdown-container\">\r\n                                <select\r\n                                    [disabled]=\"!viewModel.layout.showAggregateScores\"\r\n                                    id=\"aggregateFunctionDropdown\"\r\n                                    [(ngModel)]=\"viewModel.layout.aggregateFunction\" placeholder=\"function\">\r\n                                    <option *ngFor=\"let option of viewModel.layout.aggregateFunctionOptions\"\r\n                                            [value]=\"option\">{{option}}</option>\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n\r\n        </li>\r\n        <li *ngIf=\"configService.getFeatureGroup('technique_controls', 'any') && configService.getFeature('selecting_techniques')\">\r\n            <div *ngIf=\"configService.getFeatureGroupCount('technique_controls') >= 3\" class=\"section-label\">\r\n                technique controls\r\n            </div>\r\n            <!-- TECHNIQUE CONTROLS -->\r\n            <!-- enable/disable technique -->\r\n            <div *ngIf=\"configService.getFeature('disable_techniques')\" class=\"control-row-item\">\r\n                <div class=\"control-row-button noselect\"\r\n                     [ngClass]=\"{'disabled': !viewModel.isCurrentlyEditing()}\"\r\n                     (click)=\"setSelectedState()\"\r\n                     matTooltipPosition=\"below\"\r\n                     matTooltip=\"toggle state\"\r\n                     [matTooltipDisabled]=\"!viewModel.isCurrentlyEditing()\">\r\n                    <span class=\"material-icons\" alt=\"toggle state\">texture</span>\r\n                </div>\r\n            </div>\r\n\r\n            <!-- background color -->\r\n            <div *ngIf=\"configService.getFeature('manual_color')\" class=\"control-row-item\">\r\n\r\n                <div class=\"control-row-button dropdown noselect\"\r\n                     [ngClass]=\"{'disabled': !viewModel.isCurrentlyEditing()}\"\r\n                     (click)=\"viewModel.isCurrentlyEditing() ? currentDropdown = currentDropdown !== 'colorpicker' ? 'colorpicker' : null : continue\"\r\n                     matTooltipPosition=\"below\"\r\n                     matTooltip=\"background color\"\r\n                     [matTooltipDisabled]=\"!viewModel.isCurrentlyEditing()\">\r\n                    <span class=\"material-icons\" alt=\"edit background color\">format_color_fill</span>\r\n                </div>\r\n                <!-- color picker (invisible, absolute)-->\r\n                <div class=\"colorpicker dropdown-container\" #dropdown [class.left]=\"checkalign(dropdown)\"\r\n                     *ngIf=\"currentDropdown === 'colorpicker'\">\r\n\r\n                    <div class=\"color-block wide noselect dropdown\"\r\n                         (click)=\"viewModel.editSelectedTechniques('color', '')\">\r\n                        no color\r\n                    </div>\r\n                    <div class=\"color-block square\"\r\n                         *ngFor=\"let color of viewModel.backgroundPresets\"\r\n                         [style.background]=\"color\"\r\n                         (click)=\"viewModel.editSelectedTechniques('color', color)\"></div>\r\n                </div>\r\n            </div>\r\n\r\n\r\n            <!-- score -->\r\n            <div *ngIf=\"configService.getFeature('scoring')\" class=\"control-row-item\">\r\n                <div class=\"control-row-button dropdown noselect\"\r\n                     [ngClass]=\"{'disabled': !viewModel.isCurrentlyEditing()}\"\r\n                     (click)=\"viewModel.isCurrentlyEditing() ? currentDropdown = currentDropdown !== 'score' ? 'score' : null : continue\"\r\n                     matTooltipPosition=\"below\"\r\n                     matTooltip=\"scoring\"\r\n                     [matTooltipDisabled]=\"!viewModel.isCurrentlyEditing()\">\r\n                    <span class=\"material-icons\" alt=\"score\">insert_chart</span>\r\n                </div>\r\n                <div class=\"dropdown-container inputfield\" #dropdown [class.left]=\"checkalign(dropdown)\"\r\n                     *ngIf=\"currentDropdown === 'score'\">\r\n                     <mat-form-field>\r\n                         <!-- update data whenever it is typed in -->\r\n                         <input matInput\r\n                                type=\"text\"\r\n                                onkeypress=\"return (event.charCode >= 48 && event.charCode <= 57) || event.charCode == 46 || event.charCode == 45\"\r\n                                [(ngModel)]=\"scoreEditField\"\r\n                                placeholder=\"score\"\r\n                                (input)=\"viewModel.editSelectedTechniques('score', $event.target.value); viewModel.editSelectedTechniques('scoreColor', viewModel.gradient.getColor($event.target.value));\">\r\n                         <mat-hint style=\"color: red\" align=\"start\" *ngIf=\"validateScoreInput()\">not a number</mat-hint>\r\n                     </mat-form-field>\r\n                </div>\r\n            </div>\r\n\r\n\r\n            <!-- comment -->\r\n            <div *ngIf=\"configService.getFeature('comments')\" class=\"control-row-item\">\r\n\r\n                <div class=\"control-row-button dropdown noselect\"\r\n                     [ngClass]=\"{'disabled': !viewModel.isCurrentlyEditing()}\"\r\n                     (click)=\"viewModel.isCurrentlyEditing() ? currentDropdown = currentDropdown !== 'comment' ? 'comment' : null : continue\"\r\n                     matTooltipPosition=\"below\"\r\n                     matTooltip=\"comment\"\r\n                     [matTooltipDisabled]=\"!viewModel.isCurrentlyEditing()\">\r\n                    <span class=\"material-icons\" alt=\"comment\">insert_comment</span>\r\n                </div>\r\n                <!-- comment input (invisible, absolute) -->\r\n                <div class=\"dropdown-container inputfield left\" #dropdown [class.left]=\"checkalign(dropdown)\"\r\n                     *ngIf=\"currentDropdown === 'comment'\">\r\n\r\n                    <mat-form-field>\r\n                        <textarea matInput\r\n                                  matTextareaAutosize\r\n                                  placeholder=\"comment\"\r\n                                  [(ngModel)]=\"commentEditField\"\r\n                                  (input)=\"viewModel.editSelectedTechniques('comment', $event.target.value)\">\r\n                        </textarea>\r\n                    </mat-form-field>\r\n                 </div>\r\n             </div>\r\n\r\n            <!-- links -->\r\n            <div *ngIf=\"configService.getFeature('links')\"  class=\"control-row-item\">\r\n                <div class=\"control-row-button dropdown noselect\"\r\n                     [ngClass]=\"{'disabled': !viewModel.isCurrentlyEditing() || !viewModel.linksMatch}\"\r\n                     (click)=\"viewModel.isCurrentlyEditing() && viewModel.linksMatch ? currentDropdown = currentDropdown !== 'link' ? 'link' : null : continue\"\r\n                     matTooltipPosition=\"below\"\r\n                     [matTooltip]=\"viewModel.linksMatch ? 'link' : 'cannot edit links on selected techniques with differing links'\"\r\n                     [matTooltipDisabled]=\"!viewModel.isCurrentlyEditing()\">\r\n                     <span class=\"material-icons\" alt=\"add a link\">link</span>\r\n                </div>\r\n                <!-- link input -->\r\n                <div class=\"dropdown-container inputfield left list-input\" #dropdown *ngIf=\"currentDropdown === 'link'\" [class.left]=\"checkalign(dropdown)\">\r\n                    <app-list-input [config]=\"{'viewModel': viewModel, 'list': viewModel.activeTvm.links, 'level': 'technique', 'type': 'links', 'nameField': 'label', valueField: 'url'}\"></app-list-input>\r\n                </div>\r\n             </div>\r\n\r\n\r\n            <!-- technique metadata -->\r\n            <div *ngIf=\"configService.getFeature('metadata')\"  class=\"control-row-item\">\r\n                <div class=\"control-row-button dropdown noselect\"\r\n                     [ngClass]=\"{'disabled': !viewModel.isCurrentlyEditing() || !viewModel.metadataMatch}\"\r\n                     (click)=\"viewModel.isCurrentlyEditing() && viewModel.metadataMatch ? currentDropdown = currentDropdown !== 'metadata' ? 'metadata' : null : continue\"\r\n                     matTooltipPosition=\"below\"\r\n                     [matTooltip]=\"viewModel.metadataMatch ? 'metadata' : 'cannot edit metadata on selected techniques with differing metadata'\"\r\n                     [matTooltipDisabled]=\"!viewModel.isCurrentlyEditing()\">\r\n                     <span class=\"material-icons\" alt=\"add metadata\">list</span>\r\n                 </div>\r\n                 <!-- metadata input -->\r\n                 <div class=\"dropdown-container inputfield left list-input\" #dropdown *ngIf=\"currentDropdown === 'metadata'\" [class.left]=\"checkalign(dropdown)\">\r\n                    <app-list-input [config]=\"{'viewModel': viewModel, 'list': viewModel.activeTvm.metadata, 'level': 'technique', 'type': 'metadata', 'nameField': 'name', valueField: 'value'}\"></app-list-input>\r\n                </div>\r\n             </div>\r\n\r\n            <!-- remove all annotations -->\r\n            <div *ngIf=\"configService.getFeature('clear_annotations')\" class=\"control-row-item\">\r\n                <div class=\"control-row-button noselect\"\r\n                     [ngClass]=\"{'disabled': !viewModel.isCurrentlyEditing()}\"\r\n                     (click)=\"viewModel.resetSelectedTechniques(); populateEditFields()\"\r\n                     matTooltipPosition=\"below\"\r\n                     matTooltip=\"clear annotations on selected\"\r\n                     [matTooltipDisabled]=\"!viewModel.isCurrentlyEditing()\">\r\n                    <span class=\"material-icons\" alt=\"remove all annotations\">layers_clear</span>\r\n                </div>\r\n            </div>\r\n        </li>\r\n    </ul>\r\n</div>\r\n\r\n<!--\r\noooo     oooo      o   ooooooooooo oooooooooo  ooooo ooooo  oooo\r\n 8888o   888      888  88  888  88  888    888  888    888  88\r\n 88 888o8 88     8  88     888      888oooo88   888      888\r\n 88  888  88    8oooo88    888      888  88o    888     88 888\r\no88o  8  o88o o88o  o888o o888o    o888o  88o8 o888o o88o  o888o\r\n                                                                 -->\r\n<mat-drawer-container class=\"matrices-content\" autosize>\r\n    <mat-drawer-content>\r\n        <div class=\"matrices\" #scrollRef>\r\n            <div oncontextmenu=\"return false\">\r\n                <div class=\"spinner\" *ngIf=\"!dataService.getDomain(viewModel.domainVersionID) || !dataService.getDomain(viewModel.domainVersionID).dataLoaded; else loadMatrices\">\r\n                    <mat-progress-spinner mode=\"indeterminate\"></mat-progress-spinner>\r\n                </div>\r\n                <ng-template #loadMatrices>\r\n                    <div class=\"matrices-columns\">\r\n                        <div class=\"matrix-column\" *ngFor=\"let matrix of dataService.getDomain(viewModel.domainVersionID).matrices\">\r\n                            <div *ngIf=\"dataService.getDomain(viewModel.domainVersionID).matrices.length > 1\" class=\"matrix-name\">{{matrix.name}}</div>\r\n                            <div *ngIf=\"viewModel.layout.layout == 'side'\">\r\n                                <matrix-side [matrix]=\"matrix\" [viewModel]=\"viewModel\"></matrix-side>\r\n                            </div>\r\n                            <div *ngIf=\"viewModel.layout.layout == 'flat'\">\r\n                                <matrix-flat [matrix]=\"matrix\" [viewModel]=\"viewModel\"></matrix-flat>\r\n                            </div>\r\n                            <div *ngIf=\"viewModel.layout.layout == 'mini'\">\r\n                                <matrix-mini [matrix]=\"matrix\" [viewModel]=\"viewModel\"></matrix-mini>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </ng-template>\r\n            </div>\r\n        </div>\r\n    </mat-drawer-content>\r\n    <mat-drawer [disableClose]=\"true\" mode=\"side\" position=\"end\" [opened]=\"viewModel.sidebarOpened\">\r\n        <sidebar [viewModel]=\"viewModel\"></sidebar>\r\n    </mat-drawer>\r\n</mat-drawer-container>\r\n\r\n\r\n<!--\r\nooooo       ooooooooooo  ooooooo8 ooooooooooo oooo   oooo ooooooooo\r\n 888         888    88 o888    88  888    88   8888o  88   888    88o\r\n 888         888ooo8   888    oooo 888ooo8     88 888o88   888    888\r\n 888      o  888    oo 888o    88  888    oo   88   8888   888    888\r\no888ooooo88 o888ooo8888 888ooo888 o888ooo8888 o88o    88  o888ooo88\r\n                                                                      -->\r\n\r\n<div class=\"legendBar\" (click)=\"showingLegend = !showingLegend\"\r\n     *ngIf=\"!showingLegend && configService.getFeature('legend')\">\r\n    <span class=\"material-icons\">keyboard_arrow_up</span>\r\n    <div class=\"noselect\" style=\"padding:4px; font-size:14px; position: absolute; width: 100%; text-align:center\">\r\n        legend\r\n    </div>\r\n</div>\r\n\r\n<div class=\"legend\" *ngIf=\"showingLegend && configService.getFeature('legend')\">\r\n    <div class=\"legendBar\" (click)=\"showingLegend = !showingLegend\" style=\"position: absolute; top:0px; left:0px;\">\r\n        <span class=\"material-icons\">keyboard_arrow_down</span>\r\n        <div class=\"noselect title\">\r\n            legend\r\n        </div>\r\n    </div>\r\n    <div class=\"itemArea\">\r\n        <div class=\"item\" *ngFor=\"let item of viewModel.legendItems; let Even=even; let i=index\" [class.even]=\"!Even\">\r\n            <input [(colorPicker)]=\"item.color\" [(ngModel)]=\"item.color\" [style.background]=\"item.color\" [cpPosition]=\"'top'\" [cpPresetColors]=\"viewModel.legendColorPresets\" style=\"width:75px;\"/>\r\n            <!-- <input class=\"label\" [(ngModel)]=\"item.label\"> -->\r\n            <mat-form-field class=\"label\">\r\n                    <input matInput\r\n\r\n                    [(ngModel)]=\"item.label\">\r\n\r\n            </mat-form-field>\r\n            <span class=\"material-icons\" (click)=\"viewModel.deleteLegendItem(i);\">clear</span>\r\n        </div>\r\n        <button style=\"margin-left:75px; margin-top:10px; margin-bottom:10px;\" class=\"button\" (click)=\"viewModel.addLegendItem();\">Add Item</button>\r\n        <button style=\"margin-top:10px; margin-bottom:10px;\" class=\"button\" (click)=\"viewModel.clearLegend();\">Clear</button>\r\n    </div>\r\n</div>\r\n","/* (ignored) */","/* (ignored) */","import { Component, OnInit, Input, Output, EventEmitter, ElementRef, ViewEncapsulation } from '@angular/core';\r\nimport { Technique, Tactic } from '../../../data.service';\r\nimport { ViewModel, ViewModelsService, TechniqueVM, Link } from '../../../viewmodels.service';\r\nimport { ConfigService, ContextMenuItem } from '../../../config.service';\r\nimport { CellPopover } from '../cell-popover';\r\n\r\n@Component({\r\n  selector: 'app-contextmenu',\r\n  templateUrl: './contextmenu.component.html',\r\n  styleUrls: ['./contextmenu.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class ContextmenuComponent extends CellPopover implements OnInit {\r\n    @Input() technique: Technique;\r\n    @Input() tactic: Tactic;\r\n    @Input() viewModel: ViewModel;\r\n    public placement: string;\r\n    @Output() close = new EventEmitter<any>();\r\n\r\n    private get techniqueVM(): TechniqueVM {\r\n        return this.viewModel.getTechniqueVM(this.technique, this.tactic);\r\n    }\r\n\r\n    public get links(): Link[] {\r\n        return this.techniqueVM.links;\r\n    }\r\n\r\n    constructor(private element: ElementRef, public configService: ConfigService, public viewModelsService: ViewModelsService) {\r\n        super(element);\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.placement = this.getPosition();\r\n    }\r\n\r\n    public closeContextmenu() {\r\n        this.close.emit();\r\n    }\r\n\r\n    public select() {\r\n        this.viewModel.clearSelectedTechniques();\r\n        this.viewModel.selectTechnique(this.technique, this.tactic);\r\n        this.closeContextmenu();\r\n    }\r\n\r\n    public addSelection() {\r\n        this.viewModel.selectTechnique(this.technique, this.tactic);\r\n        this.closeContextmenu();\r\n    }\r\n\r\n    public removeSelection() {\r\n        this.viewModel.unselectTechnique(this.technique, this.tactic);\r\n        this.closeContextmenu();\r\n    }\r\n\r\n    public selectAll() {\r\n        this.viewModel.selectAllTechniques();\r\n        this.closeContextmenu();\r\n    }\r\n\r\n    public deselectAll() {\r\n        this.viewModel.clearSelectedTechniques();\r\n        this.closeContextmenu();\r\n    }\r\n\r\n    public invertSelection() {\r\n        this.viewModel.invertSelection();\r\n        this.closeContextmenu();\r\n    }\r\n\r\n    public selectAnnotated() {\r\n        this.viewModel.selectAnnotated();\r\n        this.closeContextmenu();\r\n    }\r\n\r\n    public selectUnannotated() {\r\n        this.viewModel.selectUnannotated();\r\n        this.closeContextmenu();\r\n    }\r\n\r\n    public selectAllInTactic(){\r\n        this.viewModel.selectAllTechniquesInTactic(this.tactic);\r\n        this.closeContextmenu();\r\n    }\r\n\r\n    public deselectAllInTactic(){\r\n        this.viewModel.unselectAllTechniquesInTactic(this.tactic);\r\n        this.closeContextmenu();\r\n    }\r\n\r\n    public viewTechnique() {\r\n        window.open(this.technique.url, \"_blank\");\r\n        this.closeContextmenu();\r\n    }\r\n\r\n    public viewTactic() {\r\n        window.open(this.tactic.url, \"_blank\");\r\n        this.closeContextmenu();\r\n    }\r\n\r\n    public pinCell() {\r\n        this.viewModelsService.pinnedCell = (this.viewModelsService.pinnedCell === this.techniqueVM.technique_tactic_union_id) ? \"\" : this.techniqueVM.technique_tactic_union_id;\r\n        this.closeContextmenu();\r\n    }\r\n\r\n    public openCustomContextMenuItem(customItem: ContextMenuItem) {\r\n        window.open(customItem.getReplacedURL(this.technique, this.tactic), \"_blank\");\r\n        this.closeContextmenu();\r\n    }\r\n\r\n    public openLink(link: Link) {\r\n        window.open(link.url);\r\n        this.closeContextmenu();\r\n    }\r\n}\r\n","<div class=\"contextmenu\" (contextmenu)=\"closeContextmenu()\">\r\n    <!-- covers entire screen -->\r\n    <div class=\"cover\" (click)=\"closeContextmenu()\"></div>\r\n    <!-- the actual menu -->\r\n    <div [ngClass]=\"'menu ' + placement\">\r\n        <div class=\"contextMenu-section\">\r\n            <div class=\"contextMenu-header\">\r\n                {{technique.name}} ({{technique.attackID}})\r\n            </div>\r\n        </div>\r\n        <div class=\"contextMenu-section\">\r\n            <div class=\"contextMenu-button\" (click)=\"pinCell()\">\r\n                pin/unpin tooltip\r\n            </div>\r\n        </div>\r\n        <div *ngIf=\"configService.getFeature('selecting_techniques')\" class=\"contextMenu-section\">\r\n            <div class=\"contextMenu-button\" (click)=\"select()\">\r\n                select\r\n            </div>\r\n            <div class=\"contextMenu-button\" (click)=\"addSelection()\">\r\n                add to selection\r\n            </div>\r\n            <div class=\"contextMenu-button\" (click)=\"removeSelection()\">\r\n                remove from selection\r\n            </div>\r\n        </div>\r\n        <div *ngIf=\"configService.getFeature('selecting_techniques')\" class=\"contextMenu-section\">\r\n            <div class=\"contextMenu-button\" (click)=\"selectAll()\">\r\n                select all\r\n            </div>\r\n            <div class=\"contextMenu-button\" (click)=\"deselectAll()\">\r\n                deselect all\r\n            </div>\r\n            <div class=\"contextMenu-button\" (click)=\"invertSelection()\">\r\n                invert selection\r\n            </div>\r\n        </div>\r\n        <div *ngIf=\"configService.getFeature('selecting_techniques')\" class=\"contextMenu-section\">\r\n            <div class=\"contextMenu-button\" (click)=\"selectAnnotated()\">\r\n                select annotated\r\n            </div>\r\n            <div class=\"contextMenu-button\" (click)=\"selectUnannotated()\">\r\n                select unannotated\r\n            </div>\r\n        </div>\r\n        <div *ngIf=\"configService.getFeature('selecting_techniques')\" class=\"contextMenu-section\">\r\n            <div class=\"contextMenu-button\" (click)=\"selectAllInTactic()\">\r\n                select all techniques in tactic\r\n            </div>\r\n            <div class=\"contextMenu-button\" (click)=\"deselectAllInTactic()\">\r\n                deselect all techniques in tactic\r\n            </div>\r\n        </div>\r\n        <div class=\"contextMenu-section\">\r\n            <div class=\"contextMenu-button\" (click)=\"viewTechnique()\">\r\n                view technique\r\n            </div>\r\n            <div class=\"contextMenu-button\" (click)=\"viewTactic()\">\r\n                view tactic\r\n            </div>\r\n        </div>\r\n        <div class=\"contextMenu-section\" *ngIf=\"configService.contextMenuItems.length > 0\">\r\n            <div class=\"contextMenu-button\" *ngFor=\"let contextMenuItem of configService.contextMenuItems\" (click)=\"openCustomContextMenuItem(contextMenuItem)\">\r\n                {{contextMenuItem.label}}\r\n            </div>\r\n        </div>\r\n        <div *ngIf=\"links.length\" class=\"contextMenu-section\">\r\n            <div class=\"link-container\" *ngFor=\"let link of links\">\r\n                <div *ngIf=\"!link.divider else divider\" class=\"contextMenu-button\" (click)=\"openLink(link)\">\r\n                    {{link.label}}\r\n                </div>\r\n                <ng-template #divider>\r\n                    <div class=\"divider\"></div>\r\n                </ng-template>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `.angular-cli.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n","import { Component, ViewEncapsulation } from '@angular/core';\r\nimport * as globals from \"../globals\";\r\n\r\n@Component({\r\n  selector: 'app-layer-information',\r\n  templateUrl: './layer-information.component.html',\r\n  styleUrls: ['./layer-information.component.scss'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class LayerInformationComponent {\r\n  public get layerFormatLink(): string {\r\n    return `../layers/LAYERFORMATv${ globals.layer_version.replace(\".\", \"_\") }.md`\r\n  }\r\n}\r\n","<div class=\"layer-dialog\">\r\n    <div class=\"content markdown\">\r\n        <markdown #markdownElement [src]=\"layerFormatLink\"></markdown>\r\n    </div>\r\n    <div class=\"close-button\">\r\n        <button mat-button mat-dialog-close>close</button>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { MatrixCommon } from '../matrix-common';\r\nimport { ConfigService } from '../../config.service';\r\nimport { ViewModelsService } from '../../viewmodels.service';\r\n\r\n@Component({\r\n  selector: 'matrix-mini',\r\n  templateUrl: './matrix-mini.component.html',\r\n  styleUrls: ['./matrix-mini.component.scss']\r\n})\r\nexport class MatrixMiniComponent extends MatrixCommon implements OnInit  {\r\n\r\n    constructor(configService: ConfigService, viewModelsService: ViewModelsService) { \r\n        super(configService, viewModelsService);\r\n    }\r\n\r\n    ngOnInit() {}\r\n}\r\n","<table class=\"matrix mini\">\r\n    <thead>\r\n        <tr>\r\n            <td *ngFor=\"let tactic of filterTactics(matrix.tactics)\" class=\"tactic header\">\r\n                <tactic-cell [viewModel]=\"viewModel\" [tactic]=\"tactic\"></tactic-cell>\r\n            </td>\r\n        </tr>\r\n    </thead>\r\n    <tbody>\r\n        <tr>\r\n            <td *ngFor=\"let tactic of filterTactics(matrix.tactics)\" class=\"tactic body\">\r\n                <ng-container *ngFor=\"let technique of applyControls(tactic.techniques, tactic)\">\r\n                    <div class=\"cell-container supertechnique-group\" *ngIf=\"technique.subtechniques.length > 0 else elseblock\">\r\n                        <div class=\"cell-container supertechnique\">\r\n                            <technique-cell #elseblock\r\n                                        [tactic]=\"tactic\"\r\n                                        [technique]=\"technique\" \r\n                                        [viewModel]=\"viewModel\"\r\n                                        [matrix]=\"matrix\"\r\n                                        (leftclick)=\"onTechniqueLeftClick($event, technique, tactic)\"\r\n                                        (rightclick)=\"onTechniqueRightClick($event, technique)\"\r\n                                        (highlight)=\"onTechniqueHighlight($event, technique, tactic)\"\r\n                                        (unhighlight)=\"onTechniqueUnhighlight($event)\">\r\n                            </technique-cell>\r\n                        </div>\r\n                        <div class=\"cell-container subtechnique\" *ngFor=\"let subtechnique of applyControls(technique.subtechniques, tactic)\">\r\n                            <technique-cell\r\n                                        [tactic]=\"tactic\"\r\n                                        [technique]=\"subtechnique\" \r\n                                        [viewModel]=\"viewModel\"\r\n                                        [matrix]=\"matrix\"\r\n                                        (leftclick)=\"onTechniqueLeftClick($event, subtechnique, tactic)\"\r\n                                        (rightclick)=\"onTechniqueRightClick($event, subtechnique)\"\r\n                                        (highlight)=\"onTechniqueHighlight($event, subtechnique, tactic)\"\r\n                                        (unhighlight)=\"onTechniqueUnhighlight($event)\">\r\n                            </technique-cell>\r\n                        </div>\r\n                    </div>\r\n                    <ng-template #elseblock>\r\n                        <div class=\"cell-container\">\r\n                            <technique-cell \r\n                                            [tactic]=\"tactic\"\r\n                                            [technique]=\"technique\" \r\n                                            [viewModel]=\"viewModel\"\r\n                                            [matrix]=\"matrix\"\r\n                                            (leftclick)=\"onTechniqueLeftClick($event, technique, tactic)\"\r\n                                            (rightclick)=\"onTechniqueRightClick($event, technique)\"\r\n                                            (highlight)=\"onTechniqueHighlight($event, technique, tactic)\"\r\n                                            (unhighlight)=\"onTechniqueUnhighlight($event)\">\r\n                            </technique-cell>\r\n                        </div>\r\n                    </ng-template>\r\n                </ng-container>\r\n            </td>\r\n        </tr>\r\n    </tbody>\r\n</table>","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { ViewModel, TechniqueVM } from \"../viewmodels.service\";\r\nimport { ConfigService } from \"../config.service\";\r\nimport { Technique, DataService, Tactic, Matrix } from '../data.service';\r\nimport * as is from 'is_js';\r\nimport * as tinycolor from 'tinycolor2';\r\ndeclare var d3: any; //d3js\r\n\r\n@Component({\r\n    selector: 'exporter',\r\n    templateUrl: './exporter.component.html',\r\n    styleUrls: ['./exporter.component.scss']\r\n})\r\nexport class ExporterComponent implements OnInit {\r\n    \r\n    public currentDropdown: string = null;\r\n    viewModel: ViewModel;\r\n    public config: any = {}\r\n    \r\n    public isIE() {\r\n        return is.ie();\r\n    }\r\n\r\n    private svgDivName = \"svgInsert_tmp\"\r\n    unitEnum = 0; //counter for unit change ui element\r\n    constructor(private dialogRef: MatDialogRef<ExporterComponent>, \r\n                private configService: ConfigService, \r\n                private dataService: DataService,\r\n                @Inject(MAT_DIALOG_DATA) public data) {\r\n        this.config = { \r\n            \"width\": 11,\r\n            \"height\": 8.5,\r\n            \"headerHeight\": 1,\r\n\r\n            \"unit\": \"in\",\r\n\r\n            \"showSubtechniques\": \"expanded\",\r\n\r\n            \"font\": 'sans-serif',\r\n            \"tableBorderColor\": \"#6B7279\",\r\n\r\n            \"showHeader\": true,\r\n\r\n            \"legendDocked\": true,\r\n            \"legendX\": 0,\r\n            \"legendY\": 0,\r\n            \"legendWidth\": 2,\r\n            \"legendHeight\": 1,\r\n\r\n            \"showLegend\": true,\r\n            \"showGradient\": true,\r\n            \"showFilters\": true,\r\n            \"showAbout\": true,\r\n            \"showDomain\": true,\r\n            \"showAggregate\": false,\r\n        }\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.viewModel = this.data.vm;\r\n        this.svgDivName = \"svgInsert\" + this.viewModel.uid;\r\n        \r\n        let self = this;\r\n        //determine if the layer has any scores\r\n        for (let matrix of this.dataService.getDomain(this.viewModel.domainVersionID).matrices) {\r\n            for (let tactic of this.viewModel.filterTactics(matrix.tactics, matrix)) {\r\n                for (let technique of this.viewModel.filterTechniques(tactic.techniques, tactic, matrix)) {\r\n                    if (technique.subtechniques.length > 0) {\r\n                        for (let subtechnique of this.viewModel.filterTechniques(technique.subtechniques, tactic, matrix)) {\r\n                            if (self.viewModel.hasTechniqueVM(subtechnique, tactic)) {\r\n                                if (self.viewModel.getTechniqueVM(subtechnique, tactic).score != \"\") self.hasScores = true;\r\n                            }\r\n                        }\r\n                    }\r\n                    if (self.viewModel.hasTechniqueVM(technique, tactic)) {\r\n                        if (self.viewModel.getTechniqueVM(technique, tactic).score != \"\") self.hasScores = true;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        // dynamic legend height according to content;\r\n        let legendSectionCount = 0;\r\n        if (self.hasScores) legendSectionCount++;\r\n        if (self.hasLegendItems()) legendSectionCount++;\r\n        self.config.legendHeight = 0.5 * legendSectionCount; \r\n        //initial legend position for undocked legend\r\n        this.config.legendX = this.config.width - this.config.legendWidth - 0.1;\r\n        this.config.legendY = this.config.height - this.config.legendHeight - 0.1;\r\n        if (this.config.showHeader) this.config.legendY -= this.config.headerHeight; \r\n\r\n        //put at the end of the function queue so that the page can render before building the svg\r\n        window.setTimeout(function() {self.buildSVG(self)}, 0)\r\n    }\r\n\r\n    //visibility of SVG parts\r\n    //assess data in viewModel\r\n    hasName(): boolean {return this.viewModel.name.length > 0}\r\n    hasDomain(): boolean {return this.viewModel.domainVersionID.length > 0}\r\n    hasDescription(): boolean {return this.viewModel.description.length > 0}\r\n    hasScores: boolean; //does the viewmodel have scores? built in ngAfterViewInit\r\n    hasLegendItems(): boolean {return this.viewModel.legendItems.length > 0;}\r\n\r\n    //above && user preferences\r\n    showName(): boolean {return this.config.showAbout && this.hasName() && this.config.showHeader}\r\n    showDomain(): boolean {return this.config.showDomain && this.hasDomain() && this.config.showHeader}\r\n    showAggregate(): boolean {return this.viewModel.layout.showAggregateScores && this.config.showHeader}\r\n    showDescription(): boolean {return this.config.showAbout && this.hasDescription() && this.config.showHeader}\r\n    showLayerInfo(): boolean {return (this.showName() || this.showDescription()) && this.config.showHeader}\r\n    showFilters(): boolean {return this.config.showFilters && this.config.showHeader};\r\n    showGradient(): boolean {return this.config.showGradient && this.hasScores && this.config.showHeader}\r\n    showLegend(): boolean {return this.config.showLegend && this.hasLegendItems()}\r\n    showLegendContainer(): boolean{return this.showLegend() || this.showGradient()}\r\n    showLegendInHeader(): boolean {return this.config.legendDocked}\r\n    // showItemCount(): boolean {return this.config.showTechniqueCount}\r\n    buildSVGDebounce = false;\r\n    buildSVG(self?, bypassDebounce=false): void {\r\n        if (!self) self = this; //in case we were called from somewhere other than ngViewInit\r\n\r\n        console.log(\"settings changed\")\r\n        if (self.buildSVGDebounce && !bypassDebounce) {\r\n            // console.log(\"skipping debounce...\")\r\n            return;\r\n        }\r\n        if (!bypassDebounce) {\r\n            // console.log(\"debouncing...\");\r\n            self.buildSVGDebounce = true;\r\n            window.setTimeout(function() {self.buildSVG(self, true)}, 500)\r\n            return;\r\n        }\r\n        self.buildSVGDebounce = false;\r\n\r\n        console.log(\"building SVG\");\r\n\r\n        //check preconditions, make sure they're in the right range\r\n        let margin = {top: 5, right: 5, bottom: 5, left: 5};\r\n\r\n        let width = Math.max(self.convertToPx(self.config.width, self.config.unit)  - (margin.right + margin.left), 10); // console.log(\"width\", width);\r\n        let height = Math.max(self.convertToPx(self.config.height, self.config.unit) - (margin.top + margin.bottom), 10); // console.log(\"height\", height)\r\n        let headerHeight = Math.max(self.convertToPx(self.config.headerHeight, self.config.unit), 1); // console.log(\"headerHeight\", headerHeight);\r\n\r\n        let legendX = Math.max(self.convertToPx(self.config.legendX, self.config.unit), 0);\r\n        let legendY = Math.max(self.convertToPx(self.config.legendY, self.config.unit), 0);\r\n        let legendWidth = Math.max(self.convertToPx(self.config.legendWidth, self.config.unit), 10);\r\n        let legendHeight = Math.max(self.convertToPx(self.config.legendHeight, self.config.unit), 10);\r\n\r\n        //remove previous graphic\r\n        let element = <HTMLElement>document.getElementById(self.svgDivName);\r\n        element.innerHTML = \"\";\r\n\r\n        let svg = d3.select(\"#\" + self.svgDivName).append(\"svg\")\r\n            .attr(\"width\", width + margin.left + margin.right)\r\n            .attr(\"height\", height + margin.top + margin.bottom)\r\n            .attr(\"xmlns\", \"http://www.w3.org/2000/svg\")\r\n            .attr(\"id\", \"svg\" + self.viewModel.uid) //Tag for downloadSVG\r\n            .append(\"g\")\r\n            .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\")\r\n            .style(\"font-family\", self.config.font);\r\n        let stroke_width = 1;\r\n\r\n        // ooooo ooooo            o888                                                 \r\n        //  888   888  ooooooooo8  888 ooooooooo    ooooooooo8 oo oooooo    oooooooo8  \r\n        //  888ooo888 888oooooo8   888  888    888 888oooooo8   888    888 888ooooooo  \r\n        //  888   888 888          888  888    888 888          888                888 \r\n        // o888o o888o  88oooo888 o888o 888ooo88     88oooo888 o888o       88oooooo88  \r\n        //                             o888                                            \r\n\r\n        // Essentially, the following functions brute force the optimal text arrangement for each cell \r\n        // in the matrix to maximize text size. The algorithm tries different combinations of line breaks\r\n        // in the cell text.\r\n\r\n        /**\r\n         * Divide distance into divisions equidistant anchor points S.T they all have equal\r\n         * padding from each other and the beginning and end of the distance\r\n         * @param  distance  distance to divide\r\n         * @param  divisions number of divisions\r\n         * @return           number[] where each number corresponds to a division-center offset\r\n         */\r\n        function getSpacing(distance, divisions) {\r\n            distance = distance - 1; //1px padding for border\r\n            let spacing = distance/(divisions*2);\r\n            let res = []\r\n            for (let i = 1; i <= divisions*2; i+=2) {\r\n                res.push(1 + (spacing * i))\r\n            }\r\n            return res\r\n        };\r\n\r\n        /**\r\n         * Magic function to insert line breaks. \r\n        * @param  {string[]} words         array of words to space\r\n        * @param  {dom node} self          the dom element with the text\r\n        * @param  {number} xpos            x pos to place multiline text at\r\n        * @param  {number} ypos            same but with y\r\n        * @param  {number} totalDistance   total distance to contain broken text.\r\n        *                                  amt in excess of spacingDistance\r\n        *                                  becomes v padding.\r\n        * @param  {number} spacingDistance total distance to space text inside,\r\n        *                                  should be < totalDistance\r\n        * @param {boolean} center          if true, center the text in the node, else left-align\r\n        * @param {number} cellWidth        total width of the cell to put the text in\r\n        */\r\n        function insertLineBreaks(words, node, padding, xpos, ypos, totalDistance, spacingDistance, center, cellWidth) {\r\n            let el = d3.select(node)\r\n            // el.attr(\"y\", y + (totalDistance - spacingDistance) / 2);\r\n\r\n            //clear previous content\r\n            el.text('');\r\n            while(node.firstChild) node.removeChild(node.firstChild);\r\n\r\n            let spacing = getSpacing(spacingDistance, words.length)\r\n            for (var i = 0; i < words.length; i++) {\r\n                var tspan = el.append('tspan').text(words[i]);\r\n                if (center) tspan.attr(\"text-anchor\",\"middle\");\r\n                // if (i > 0)\r\n                let offsetY = ((totalDistance - spacingDistance) / 2) + ypos + spacing[i]\r\n                tspan\r\n                    .attr('x', center? xpos + (cellWidth/2) : xpos + padding)\r\n                    .attr('y', offsetY);\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Given an array of words, find the optimal font size for the array of words to be\r\n         * broken onto 1 line each.\r\n         * @param  {string[]} words     to be broken onto each line\r\n         * @param  {dom node} node      the dom node of the cell\r\n         * @param  {cellWidth} number   the width of the cell\r\n         * @param  {cellHeight} number  the height of the cell\r\n         * @param {boolean} center      center the text?\r\n         * @param {number} maxFontSize  max font size, default is 12\r\n         * @return {number}             the largest possible font size\r\n         *                              not larger than 12\r\n         */\r\n        function findSpace(words: string[], node, cellWidth: number, cellHeight: number, center: boolean, maxFontSize=12) {\r\n            let padding = 4; //the amount of padding on the left and right\r\n            //break into multiple lines\r\n            let breakDistance = Math.min(cellHeight, (maxFontSize + 3) * words.length)\r\n            insertLineBreaks(words, node, padding, 0, 0, cellHeight, breakDistance, center, cellWidth)\r\n\r\n            //find right size to fit the height of the cell\r\n            let breakTextHeight = breakDistance / words.length;\r\n            let fitTextHeight = Math.min(breakTextHeight, cellHeight) * 0.8; //0.8\r\n\r\n            //find right size to fit the width of the cell\r\n            // let longestWord = words.sort(function(a,b) {return b.length - a.length})[0]\r\n            let longestWordLength = -Infinity;\r\n            for (let w = 0; w < words.length; w++) {\r\n                let word = words[w];\r\n                longestWordLength = Math.max(longestWordLength, word.length)\r\n            }\r\n            let fitTextWidth = ((cellWidth - (2 * padding)) / longestWordLength) * 1.45;\r\n\r\n            //the min fitting text size not larger than MaxFontSize\r\n            let size = Math.min(maxFontSize, fitTextHeight, fitTextWidth);\r\n\r\n            // if (size < 5) return \"0px\"; //enable for min text size\r\n            return size;\r\n        }\r\n\r\n        /**\r\n         * Given text, a dom node, and sizing parameters, \r\n         * try all combinations of word breaks to maximize font size inside of the given space\r\n         * returns font size in pixels\r\n         * @param {string} text                   the text to render in the cell\r\n         * @param {dom node} node                 the node for the cell\r\n         * @param {number} cellWidth              width of the cell to get the font size for\r\n         * @param {number} cellHeight             height of the cell to get the font size for\r\n         * @param {boolean} center                center the text?\r\n         * @param {number} maxFontSize            max font size, default is 12\r\n         * @return {string}                       the size in pixels\r\n         */\r\n        function optimalFontSize(text: string, node, cellWidth: number, cellHeight: number, center: boolean, maxFontSize=12): number {\r\n            let words = text.split(\" \");\r\n            let bestSize = -Infinity; //beat this size\r\n            let bestWordArrangement = [];\r\n\r\n            /**\r\n             * determine placement of line breaks to try. Shorter lists of words can try more positions\r\n             * @param {number} num_spaces the number of spaces in the words, aka words.length - 1\r\n             * @param {number} [num_breaks=3]  the number of breaks to insert\r\n             * @returns str[] where each index is a combination of breaks represented as [01]+ where 1 is a break and 0 is a space\r\n             */\r\n            function find_breaks(num_spaces:number, num_breaks=3) {\r\n                let breaks = new Set<string>();\r\n                function recurse(breakset_inherit, depth, num_breaks) {\r\n                    for (let i = 0; i < breakset_inherit.length; i++) {\r\n                        let breakset = JSON.parse(JSON.stringify(breakset_inherit)); //deep copy\r\n                        breakset[i] = 1; // insert break at this location\r\n                        breaks.add(breakset.join(\"\")); //save this combination\r\n                        if (depth < num_breaks - 1) recurse(breakset, depth + 1, num_breaks);\r\n                    }\r\n                }\r\n                let initial_breaks = []\r\n                while (initial_breaks.length < num_spaces) initial_breaks.push(0); //fill with 0s\r\n                breaks.add(initial_breaks.join(\"\")); //save this combination\r\n                recurse(initial_breaks, 0, num_breaks)\r\n                return breaks\r\n            }\r\n\r\n            let num_spaces = words.length;\r\n            // longer strings can't try as many combinations without the page lagging\r\n            let num_breaks = 1;\r\n            if (num_spaces < 20) num_breaks = 3;\r\n            else if (num_spaces < 50) num_breaks = 2;\r\n            else num_breaks = 1;\r\n            let breaks = Array.from(find_breaks(num_spaces, num_breaks))\r\n            for (let binaryString of breaks) { // find the best option of the proposed placements generated by find_breaks\r\n                //binaryString: binary representation of newline locations, e.g 001011\r\n                //where 1 is newline and 0 is no newline\r\n                let wordSet = []; //build this array\r\n                \r\n                for (let k = 0; k < binaryString.length; k++) {\r\n                    if (binaryString[k] === \"0\") {//join with space\r\n                        if (wordSet.length == 0) wordSet.push(words[k]);\r\n                        else wordSet[wordSet.length - 1] = wordSet[wordSet.length - 1] + \" \" + words[k]; //append to previous word in array\r\n                    } else { //linebreak\r\n                        wordSet.push(words[k]) //new word in array\r\n                    }\r\n                }\r\n\r\n                let size = findSpace(wordSet, node, cellWidth, cellHeight, center, maxFontSize);\r\n                if (size > bestSize) { //found new optimum\r\n                    bestSize = size;\r\n                    bestWordArrangement = wordSet;\r\n                }\r\n                if (size == maxFontSize) break; //if largest text found, no need to search more\r\n            }\r\n\r\n            findSpace(bestWordArrangement, node, cellWidth, cellHeight, center, maxFontSize);\r\n            return bestSize;\r\n        }\r\n\r\n        // add properties to the node to set the vertical alignment to center without using\r\n        // dominant-baseline, which isn't widely supported\r\n        function centerValign(node, fontSize=null) {\r\n            if (node.children && node.children.length > 0) {\r\n                for (let child of node.children) centerValign(child, node.getAttribute(\"font-size\"));\r\n            } else {\r\n                // base case\r\n                // transform by half the font size - 1/2px for proper centering\r\n                fontSize = fontSize ? fontSize : node.getAttribute(\"font-size\");\r\n                if (fontSize.endsWith(\"px\")) fontSize = Number(fontSize.split(\"px\")[0])\r\n                let currY = node.hasAttribute(\"y\") ? Number(node.getAttribute(\"y\")) : 0;\r\n                let newY = currY + Math.floor((fontSize * 0.3))\r\n                d3.select(node).attr(\"y\", newY);\r\n            }\r\n        }\r\n\r\n        class HeaderSectionContent {\r\n            label: string;\r\n            // either string to display in box, or a callback to create complex content in the box\r\n            // callback function option takes params node, width, height, and appends data to node\r\n            data: string | Function;\r\n        }\r\n        class HeaderSection {\r\n            title: string;\r\n            contents: HeaderSectionContent[];\r\n        }\r\n\r\n        let legend = {\"title\": \"legend\", \"contents\": []};\r\n        if (self.hasScores && self.showGradient()) legend.contents.push({\r\n            \"label\": \"gradient\", \"data\": function(group, sectionWidth, sectionHeight) {\r\n                let domain = [];\r\n                for (let i = 0; i < self.viewModel.gradient.colors.length; i++) {\r\n                    let percent = i / (self.viewModel.gradient.colors.length - 1);\r\n                    domain.push(d3.interpolateNumber(self.viewModel.gradient.minValue, self.viewModel.gradient.maxValue)(percent))\r\n                }\r\n                let colorScale = d3.scaleLinear()\r\n                    .domain(domain)\r\n                    .range(self.viewModel.gradient.colors.map(function (color) { return color.color; }))\r\n                let nCells = domain.length * 2;\r\n                let valuesRange = self.viewModel.gradient.maxValue - self.viewModel.gradient.minValue;\r\n                group.append(\"g\")\r\n                    .attr(\"transform\", \"translate(0, 5)\")\r\n                    .call(d3.legendColor()\r\n                    .shapeWidth((sectionWidth / nCells))\r\n                    .shapePadding(0)\r\n                    .cells(nCells)\r\n                    .shape(\"rect\")\r\n                    .orient(\"horizontal\")\r\n                    .scale(colorScale)\r\n                    .labelOffset(2)\r\n                    .labelFormat(d3.format(\"0.02r\"))\r\n                    \r\n                    // .labelFormat( valuesRange < nCells ? d3.format(\"0.01f\") : d3.format(\".2\"))\r\n                )\r\n            }\r\n        });\r\n        if (self.showLegend()) legend.contents.push({\r\n            \"label\": \"legend\", \"data\": function(group, sectionWidth, sectionHeight) {\r\n                let colorScale = d3.scaleOrdinal()\r\n                    .domain(self.viewModel.legendItems.map(function(item) { return item.label; }))\r\n                    .range(self.viewModel.legendItems.map(function(item) { return item.color; }))\r\n                group.append(\"g\")\r\n                    .attr(\"transform\", \"translate(0, 5)\")\r\n                    .call(d3.legendColor()\r\n                    .shapeWidth((sectionWidth / self.viewModel.legendItems.length))\r\n                    .shapePadding(0)\r\n                    .shape(\"rect\")\r\n                    .orient(\"horizontal\")\r\n                    .scale(colorScale)\r\n                    .labelOffset(2)\r\n                )\r\n            }\r\n        })\r\n\r\n        function descriptiveBox(group, sectionData: HeaderSection, boxWidth: number, boxHeight: number) {\r\n            let boxPadding = 5;\r\n            let boxGroup = group.append(\"g\")\r\n                .attr(\"transform\", `translate(0,${boxPadding})`);\r\n            // adjust height for padding\r\n            boxHeight -= 2 * boxPadding;\r\n            let outerbox = boxGroup.append(\"rect\")\r\n                .attr(\"class\", \"header-box\")\r\n                .attr(\"width\", boxWidth)\r\n                .attr(\"height\", boxHeight)\r\n                .attr(\"stroke\", \"black\")\r\n                .attr(\"fill\", \"white\")\r\n                .attr(\"rx\", boxPadding); //rounded corner\r\n            let titleEl = boxGroup.append(\"text\")\r\n                .attr(\"class\", \"header-box-label\")\r\n                .text(sectionData.title)\r\n                .attr(\"x\", 2 * boxPadding)\r\n                .attr(\"font-size\", 12)\r\n                .each(function() { centerValign(this); })\r\n                // .attr(\"dominant-baseline\", \"middle\")\r\n            // add cover mask so that the box lines crop around the text\r\n            let bbox = titleEl.node().getBBox();\r\n            let coverPadding = 2;\r\n            let cover = boxGroup.append(\"rect\")\r\n                .attr(\"class\", \"label-cover\")\r\n                .attr(\"x\", bbox.x - coverPadding)\r\n                .attr(\"y\", bbox.y - coverPadding)\r\n                .attr(\"width\", bbox.width + 2*coverPadding)\r\n                .attr(\"height\", bbox.height + 2*coverPadding)\r\n                .attr(\"fill\", \"white\")\r\n                .attr(\"rx\", boxPadding); //rounded corner just in case it's being shown on a transparent background\r\n            titleEl.raise(); //push title to front;\r\n\r\n            // add content to box\r\n            let boxContentGroup = boxGroup.append(\"g\")\r\n                .attr(\"class\", \"header-box-content\")\r\n                .attr(\"transform\", `translate(${boxPadding}, 0)`)\r\n            let boxContentHeight = boxHeight;// - 2*boxPadding;\r\n            let boxContentWidth = boxWidth - 2*boxPadding;\r\n\r\n            let boxGroupY = d3.scaleBand()\r\n                .padding(0.05)\r\n                .align(0.5)\r\n                .domain(sectionData.contents.map(function(content) { return content.label }))\r\n                .range([0, boxContentHeight]);\r\n            for (let i = 0; i < sectionData.contents.length; i++) {\r\n                let subsectionContent = sectionData.contents[i];\r\n                let contentGroup = boxContentGroup.append(\"g\")\r\n                    .attr(\"transform\", `translate(0, ${boxGroupY( subsectionContent.label )})`);\r\n                if (typeof(subsectionContent.data) == \"string\") {\r\n                    // add text to contentGroup\r\n                    contentGroup.append(\"text\")\r\n                        .text(subsectionContent)\r\n                        .attr(\"font-size\", function() {\r\n                            return optimalFontSize(subsectionContent.data as string, this, boxContentWidth, boxGroupY.bandwidth(), false, 12)\r\n                        })\r\n                        .each(function() { centerValign(this); })\r\n                        // .attr(\"dominant-baseline\", \"middle\")\r\n                } else {\r\n                    //call callback to add complex data to contentGroup\r\n                    (subsectionContent.data as Function)(contentGroup, boxContentWidth, boxGroupY.bandwidth());\r\n                }\r\n                if (i != sectionData.contents.length - 1) contentGroup.append(\"line\") //dividing line\r\n                    .attr(\"x1\", 0)\r\n                    .attr(\"x2\", boxContentWidth)\r\n                    .attr(\"y1\", boxGroupY.bandwidth())\r\n                    .attr(\"y2\", boxGroupY.bandwidth())\r\n                    .attr(\"stroke\", \"#dddddd\");\r\n            }\r\n        }\r\n\r\n        // ooooo ooooo                             oooo                        \r\n        //  888   888  ooooooooo8  ooooooo    ooooo888  ooooooooo8 oo oooooo   \r\n        //  888ooo888 888oooooo8   ooooo888 888    888 888oooooo8   888    888 \r\n        //  888   888 888        888    888 888    888 888          888        \r\n        // o888o o888o  88oooo888 88ooo88 8o  88ooo888o  88oooo888 o888o       \r\n                                                                            \r\n\r\n        if (self.config.showHeader) {\r\n            let headerSections: HeaderSection[] = []\r\n\r\n            if (self.showName() || self.showDescription()) {\r\n                let about = {\"title\": \"about\", \"contents\": []};\r\n                if (self.showName()) about.contents.push({\"label\": \"name\", \"data\": this.viewModel.name});\r\n                if (self.showDescription()) about.contents.push({\"label\": \"description\", \"data\": this.viewModel.description});\r\n                headerSections.push(about)\r\n            }\r\n\r\n            const config = {\"title\": \"domain\", \"contents\": []};\r\n            let filterConfig = {\"title\": \"platforms\", \"contents\": []};\r\n            if (self.showDomain()) {\r\n                let domain = this.dataService.getDomain(this.viewModel.domainVersionID);\r\n                config.contents.push({\"label\": \"domain\", \"data\": domain.name + \" \" + domain.version.name});\r\n            }\r\n            if (self.showFilters()) {\r\n              const filterData = {\"label\": \"platforms\", \"data\": this.viewModel.filters.platforms.selection.join(\", \")};\r\n              if (self.showAggregate()) {\r\n                config.title = \"domain & platforms\";\r\n                config.contents.push(filterData);\r\n              } else filterConfig.contents.push(filterData);\r\n            }\r\n            if (config.contents.length > 0) headerSections.push(config);\r\n            if (filterConfig.contents.length > 0) headerSections.push(filterConfig);\r\n\r\n            if (self.showAggregate()) {\r\n              const aggregateConfig = { \"title\": \"aggregate\", \"contents\": []};\r\n              aggregateConfig.contents.push({\"label\": \"function\", \"data\": \"showing aggregate scores using the \" + this.viewModel.layout.aggregateFunction + \" aggregate function\"});\r\n              if (this.viewModel.layout.countUnscored) aggregateConfig.contents.push({\"label\": \"unscored\", \"data\": \"includes unscored techniques as having a score of 0\"});\r\n              headerSections.push(aggregateConfig);\r\n            }\r\n\r\n            if (self.showLegendContainer() && self.showLegendInHeader()) headerSections.push(legend);\r\n\r\n            let headerGroup = svg.append(\"g\");\r\n\r\n            let headerX = d3.scaleBand()\r\n                .paddingInner(0.05)\r\n                // .align(0.5)\r\n                .domain(headerSections.map(function(section: HeaderSection) { return section.title }))\r\n                .range([0, width]);\r\n            \r\n            for (let section of headerSections) {\r\n                let sectionGroup = headerGroup.append(\"g\");\r\n                if (headerSections.length > 1) sectionGroup.attr(\"transform\", `translate(${headerX(section.title)}, 0)`);\r\n                descriptiveBox(sectionGroup, section, headerSections.length == 1? width : headerX.bandwidth(), headerHeight);\r\n            }\r\n\r\n            if (headerSections.length == 0) headerHeight = 0; //no header sections to show\r\n        } else { //no header\r\n            headerHeight = 0\r\n        }\r\n\r\n\r\n\r\n        // oooo     oooo            o8              o88               \r\n        //  8888o   888   ooooooo o888oo oo oooooo  oooo  oooo   oooo \r\n        //  88 888o8 88   ooooo888 888    888    888 888    888o888   \r\n        //  88  888  88 888    888 888    888        888    o88 88o   \r\n        // o88o  8  o88o 88ooo88 8o 888o o888o      o888o o88o   o88o \r\n                                                                   \r\n\r\n        let tablebody = svg.append(\"g\")\r\n            .attr(\"transform\", \"translate(0,\" + (headerHeight + 1) + \")\")\r\n\r\n        // build data model\r\n        let matrices: RenderableMatrix[] = this.dataService.getDomain(this.viewModel.domainVersionID).matrices.map(function(matrix: Matrix) {\r\n            return new RenderableMatrix(matrix, self.viewModel, self.config);\r\n        });\r\n\r\n        let tactics: RenderableTactic[] = [];\r\n        //flattened list of tactics\r\n        for (let matrix of matrices) { tactics = tactics.concat(matrix.tactics); }\r\n        \r\n\r\n        let x = d3.scaleBand()\r\n            .paddingInner(0.1)\r\n            .align(0.01)\r\n            .domain(tactics.map(function(tactic: RenderableTactic) { return tactic.tactic.id; }))\r\n            .range([0, width])\r\n\r\n        let y = d3.scaleLinear()\r\n            .domain([d3.max(tactics, function(tactic: RenderableTactic) { return tactic.height}), 0])\r\n            .range([height - (headerHeight), 0])\r\n            \r\n        // let subtechniqueIndent = (1/3) * x.bandwidth(); //2/3 of full techinque width\r\n        // let subtechniqueIndent = 2 * y(1); //2*the height of a cell, to make room for y(1) width sidebar\r\n        let subtechniqueIndent = Math.min(2 * y(1), 15);     \r\n        \r\n        //add tactic row backgroun\r\n        if (self.viewModel.showTacticRowBackground) {\r\n            tablebody.append(\"rect\")\r\n                .attr(\"class\", \"tactic-header-background\")\r\n                .attr(\"width\", width)\r\n                .attr(\"height\", y(1))\r\n                .attr(\"fill\", self.viewModel.tacticRowBackground)\r\n                .attr(\"stroke\", self.config.tableBorderColor)\r\n        }\r\n\r\n        let tacticGroups = tablebody.append(\"g\").selectAll(\"g\")\r\n            .data(tactics)\r\n            .enter().append(\"g\")\r\n            .attr(\"class\", function(tactic: RenderableTactic) { return \"tactic \" + tactic.tactic.shortname; })\r\n            .attr(\"transform\", function(tactic: RenderableTactic) {\r\n                return `translate(${x(tactic.tactic.id)}, 0)`;\r\n            })\r\n        // add technique and subtechnique groups\r\n        let techniqueGroups = tacticGroups.append(\"g\")\r\n            .attr(\"class\", \"techniques\").selectAll(\"g\")\r\n            .data(function(tactic: RenderableTactic) { return tactic.techniques})\r\n            .enter().append(\"g\")\r\n            .attr(\"class\", function(technique: RenderableTechnique) { return \"technique \" + technique.technique.attackID; })\r\n            .attr(\"transform\", function(technique: RenderableTechnique) {\r\n                return `translate(0, ${y(technique.yPosition)})`\r\n            });\r\n        let subtechniqueGroups = tacticGroups.append(\"g\")\r\n            .attr(\"class\", \"subtechniques\").selectAll(\"g\")\r\n            .data(function(tactic: RenderableTactic) { return tactic.subtechniques})\r\n            .enter().append(\"g\")\r\n            .attr(\"class\", function(subtechnique: RenderableTechnique) { return \"subtechnique \" + subtechnique.technique.attackID; })\r\n            .attr(\"transform\", function(subtechnique: RenderableTechnique) {\r\n                return `translate(${subtechniqueIndent}, ${y(subtechnique.yPosition)})`\r\n            });\r\n        // add cells to techniques and subtechniques\r\n        let techniqueRects = techniqueGroups.append(\"rect\")\r\n            .attr(\"class\", \"cell\")\r\n            .attr(\"height\", y(1))\r\n            .attr(\"width\", x.bandwidth())\r\n            .attr(\"fill\", function(technique: RenderableTechnique) { return technique.fill })\r\n            .attr(\"stroke\", self.config.tableBorderColor);\r\n        let subtechniqueRects = subtechniqueGroups.append(\"rect\")\r\n            .attr(\"class\", \"cell\")\r\n            .attr(\"height\", y(1))\r\n            .attr(\"width\", x.bandwidth() - subtechniqueIndent)\r\n            .attr(\"fill\", function(subtechnique: RenderableTechnique) { return subtechnique.fill })\r\n            .attr(\"stroke\", self.config.tableBorderColor);\r\n        // add sidebar\r\n        // let sidebarWidth = y(1);\r\n        let sidebarWidth = 3;\r\n\r\n        let sidebar = subtechniqueGroups.append(\"rect\")\r\n            .attr(\"class\", \"cell\")\r\n            .attr(\"height\", y(1))\r\n            .attr(\"width\", sidebarWidth)\r\n            .attr(\"transform\",  `translate(${-sidebarWidth}, 0)`)\r\n            .attr(\"fill\", self.config.tableBorderColor)\r\n            .attr(\"stroke\", self.config.tableBorderColor);\r\n        let sidebarAngle = techniqueGroups.append(\"polygon\")\r\n            .attr(\"class\", \"sidebar\")\r\n            .attr(\"transform\", `translate(0, ${y(1)})`)\r\n            .attr(\"points\", function(technique: RenderableTechnique) {\r\n                return [\r\n                    \"0,0\",\r\n                    `${subtechniqueIndent - sidebarWidth},0`,\r\n                    `${subtechniqueIndent - sidebarWidth},${Math.min(subtechniqueIndent - sidebarWidth, y(self.viewModel.filterTechniques(technique.technique.subtechniques, technique.tactic, technique.matrix).length))}`\r\n                ].join(\" \");\r\n            })\r\n            .attr(\"fill\", self.config.tableBorderColor)\r\n            .attr(\"visibility\", function(technique: RenderableTechnique) { return technique.technique.subtechniques.length > 0 && technique.showSubtechniques ? \"visible\" : \"hidden\"});\r\n\r\n        //   oooooooo8             o888  o888       ooooooooooo                          o8   \r\n        // o888     88  ooooooooo8  888   888       88  888  88 ooooooooo8 oooo   oooo o888oo \r\n        // 888         888oooooo8   888   888           888    888oooooo8    888o888    888   \r\n        // 888o     oo 888          888   888           888    888           o88 88o    888   \r\n        //  888oooo88    88oooo888 o888o o888o         o888o     88oooo888 o88o   o88o   888o \r\n                                                                                           \r\n        // Track the smallest optimal technique/subtechnique font size\r\n        let minCellTextSize = Infinity;\r\n\r\n        techniqueGroups.append(\"text\")\r\n            .text(function(technique: RenderableTechnique) { \r\n                return technique.text;\r\n            })\r\n            .attr(\"font-size\", function(technique: RenderableTechnique) {\r\n                const fontSize = optimalFontSize(technique.text, this, x.bandwidth(), y(1), false);\r\n                // Track the smallest font size found\r\n                if (fontSize < minCellTextSize) {\r\n                    minCellTextSize = fontSize;\r\n                }\r\n                return fontSize\r\n            })\r\n            // .attr(\"dominant-baseline\", \"middle\")\r\n            .each(function() { centerValign(this); })\r\n            .attr(\"fill\", function(technique: RenderableTechnique) { return technique.textColor; })\r\n\r\n        subtechniqueGroups.append(\"text\")\r\n            .text(function(subtechnique: RenderableTechnique) { \r\n                return subtechnique.text;\r\n            })\r\n            .attr(\"font-size\", function(subtechnique: RenderableTechnique) {\r\n                const fontSize = optimalFontSize(subtechnique.text, this, x.bandwidth() - subtechniqueIndent, y(1), false);\r\n                // Track the smallest font size found\r\n                if (fontSize < minCellTextSize) {\r\n                    minCellTextSize = fontSize;\r\n                }\r\n                return fontSize\r\n            })\r\n            // .attr(\"dominant-baseline\", \"middle\")\r\n            .attr(\"fill\", function(subtechnique: RenderableTechnique) { return subtechnique.textColor; })\r\n            .each(function() { centerValign(this); })\r\n    \r\n        // Set technique and subtechnique groups to the same font size\r\n        techniqueGroups.select(\"text\").attr(\"font-size\", minCellTextSize)\r\n        subtechniqueGroups.select(\"text\").attr(\"font-size\", minCellTextSize)\r\n\r\n        // Track the smallest optimal tactic label font size\r\n        let minTacticLabelTextSize = Infinity;\r\n\r\n        let tacticLabels = tacticGroups.append(\"g\")\r\n            .attr(\"class\", \"tactic-label\");\r\n        tacticLabels.append(\"text\")\r\n            .text(function(tactic: RenderableTactic) {\r\n                return tactic.tactic.name;\r\n            })\r\n            .attr(\"font-size\", function(tactic: RenderableTactic) {\r\n                const fontSize = optimalFontSize(tactic.tactic.name, this, x.bandwidth(), y(1), true);\r\n                // Track the smallest font size found\r\n                if (fontSize < minTacticLabelTextSize) {\r\n                    minTacticLabelTextSize = fontSize;\r\n                }\r\n                return fontSize\r\n            })\r\n            // .attr(\"dominant-baseline\", \"middle\")\r\n            .attr(\"fill\", function(tactic: RenderableTactic) {\r\n                if (self.viewModel.showTacticRowBackground) return tinycolor.mostReadable(self.viewModel.tacticRowBackground, [\"white\", \"black\"]); \r\n                else return \"black\";\r\n            })\r\n            .attr(\"font-weight\", \"bold\")\r\n            .each(function() { centerValign(this); })\r\n\r\n        // Set tactic labels to same font size\r\n        tacticLabels.select(\"text\").attr(\"font-size\", minTacticLabelTextSize)\r\n\r\n        //ooooo  oooo                  oooo                       oooo                         oooo      ooooo                                                            oooo \r\n        // 888    88 oo oooooo    ooooo888   ooooooo     ooooooo   888  ooooo ooooooooo8  ooooo888        888         ooooooooo8   oooooooo8 ooooooooo8 oo oooooo    ooooo888  \r\n        // 888    88  888   888 888    888 888     888 888     888 888o888   888oooooo8 888    888        888        888oooooo8  888    88o 888oooooo8   888   888 888    888  \r\n        // 888    88  888   888 888    888 888     888 888         8888 88o  888        888    888        888      o 888          888oo888o 888          888   888 888    888  \r\n        // 888oo88  o888o o888o  88ooo888o  88ooo88     88ooo888 o888o o888o  88oooo888  88ooo888o      o888ooooo88   88oooo888 888     888  88oooo888 o888o o888o  88ooo888o \r\n        //                                                                                                                         888ooo888                                    \r\n\r\n\r\n        if (self.showLegendContainer() && !self.showLegendInHeader()) {\r\n            let legendGroup = tablebody.append(\"g\")\r\n                .attr(\"transform\", `translate(${legendX}, ${legendY})`)\r\n            descriptiveBox(legendGroup, legend, legendWidth, legendHeight);\r\n        }\r\n    }\r\n\r\n    downloadSVG() {\r\n        let svgEl = document.getElementById(\"svg\" + this.viewModel.uid);\r\n        svgEl.setAttribute(\"xmlns\", \"http://www.w3.org/2000/svg\");\r\n        let svgData = new XMLSerializer().serializeToString(svgEl);\r\n        // // var svgData = svgEl.outerHTML;\r\n        // console.log(svgData)\r\n        // let svgData2 = new XMLSerializer().serializeToString(svgEl);\r\n        // console.log(svgData2)\r\n        let filename = this.viewModel.name.split(' ').join('_');\r\n        filename = filename.replace(/\\W/g, \"\")  + \".svg\"; // remove all non alphanumeric characters\r\n        var preface = '<?xml version=\"1.0\" standalone=\"no\"?>\\r\\n';\r\n        var svgBlob = new Blob([preface, svgData], {type:\"image/svg+xml;charset=utf-8\"});\r\n        if (is.ie()) { //internet explorer\r\n            window.navigator.msSaveOrOpenBlob(svgBlob, filename)\r\n        } else {\r\n            var svgUrl = URL.createObjectURL(svgBlob);\r\n            var downloadLink = document.createElement(\"a\");\r\n            downloadLink.href = svgUrl;\r\n            downloadLink.download = filename\r\n            document.body.appendChild(downloadLink);\r\n            downloadLink.click();\r\n            document.body.removeChild(downloadLink);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Convert any length in various units to pixels\r\n     * @param  quantity what length\r\n     * @param  unit     which unit system (in, cm, px?)\r\n     * @return          that length in pixels\r\n     */\r\n    convertToPx(quantity: number, unit: string): number {\r\n        let factor;\r\n\r\n        switch(unit) {\r\n            case \"in\": {\r\n                factor = 96\r\n                break\r\n            }\r\n            case \"cm\": {\r\n                factor = 3.779375 * 10;\r\n                break;\r\n            }\r\n            case \"px\": {\r\n                factor = 1;\r\n                break;\r\n            }\r\n            case \"em\": {\r\n                factor = 16;\r\n                break;\r\n            }\r\n            case \"pt\": {\r\n                factor = 1.33;\r\n            }\r\n            default: {\r\n                console.error(\"unknown unit\", unit)\r\n                factor = 0;\r\n            }\r\n        }\r\n\r\n        return quantity * factor;\r\n    }\r\n\r\n    // wrap(text, width, padding) {\r\n    //     var self = d3.select(this),\r\n    //     textLength = self.node().getComputedTextLength(),\r\n    //     text = self.text();\r\n    //     while (textLength > (width - 2 * padding) && text.length > 0) {\r\n    //         text = text.slice(0, -1);\r\n    //         self.text(text + '...');\r\n    //         textLength = self.node().getComputedTextLength();\r\n    //     }\r\n    // }\r\n\r\n    /**\r\n     * wrap the given text svg element\r\n     * @param  text       element to wrap\r\n     * @param  width      width to wrap to\r\n     * @param  cellheight stop appending wraps after this height\r\n     * @param  self       reference to self this component because of call context\r\n     */\r\n    wrap(text, width, cellheight, self): void {\r\n        text.each(function() {\r\n            var text = d3.select(this),\r\n            words = text.text().split(/\\s+/).reverse(),\r\n            word,\r\n            line = [],\r\n            lineHeight = 1.1, // ems\r\n            y = text.attr(\"y\"),\r\n            dy = parseFloat(text.attr(\"dy\")),\r\n            tspan = text.text(null).append(\"tspan\").attr(\"x\", 0).attr(\"y\", y).attr(\"dy\", dy + \"em\");\r\n            while (word = words.pop()) {\r\n                line.push(word);\r\n                tspan.text(line.join(\" \"));\r\n                if (tspan.node().getComputedTextLength() > width) {\r\n                    line.pop();\r\n                    tspan.text(line.join(\" \"));\r\n                    line = [word];\r\n                    let thisdy = lineHeight + dy\r\n                    // if (self.convertToPx(thisdy, \"em\") > cellheight) return;\r\n                    tspan = text.append(\"tspan\").attr(\"x\", 0).attr(\"y\", y).attr(\"dy\", thisdy + \"em\").text(word);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Recenter the selected element's tspan elements\r\n     * @param  height [description]\r\n     * @param  self   [description]\r\n     */\r\n    recenter(text, height, self): void {\r\n        text.each(function() {\r\n            text.selectAll('tspan').each(function(d, i, els) {\r\n                let numTSpan = els.length;\r\n                let location = self.getSpacing(height, numTSpan)[i]\r\n\r\n                let tspan = d3.select(this)\r\n                    .attr(\"y\", ( location))\r\n                    .attr(\"dy\", \"0\")\r\n            })\r\n        })\r\n    }\r\n\r\n    // Capitalizes the first letter of each word in a string\r\n    toCamelCase(str){\r\n        return str.replace(/\\w\\S*/g, function(txt){return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();});\r\n    }\r\n\r\n    //following two functions are only used for iterating over tableconfig options: remove when tableconfig options are hardcoded in html\r\n    getKeys(obj) { return Object.keys(obj) }\r\n    type(obj) { return typeof(obj) }\r\n\r\n    /**\r\n     * Return whether the given dropdown element would overflow the side of the page if aligned to the right of its anchor\r\n     * @param  dropdown the DOM node of the panel\r\n     * @return          true if it would overflow\r\n     */\r\n    checkalign(dropdown): boolean {\r\n        // console.log(anchor)\r\n        let anchor = dropdown.parentNode;\r\n        return anchor.getBoundingClientRect().left + dropdown.getBoundingClientRect().width > document.body.clientWidth;\r\n    }\r\n\r\n    /**\r\n     * Divide distance into divisions equidestant anchor points S.T they all have equal\r\n     * padding from each other and the beginning and end of the distance\r\n     * @param  distance  distance to divide\r\n     * @param  divisions number of divisions\r\n     * @return           number[] where each number corresponds to a division-center offset\r\n     */\r\n    getSpacing(distance: number, divisions: number): number[] {\r\n        distance = distance - 1; //1px padding for border\r\n        let spacing = distance/(divisions*2);\r\n        let res = []\r\n        for (let i = 1; i <= divisions*2; i+=2) {\r\n            res.push(1 + (spacing * i))\r\n        }\r\n        return res\r\n    }\r\n}\r\n\r\n\r\n\r\nclass RenderableMatrix {\r\n    public readonly matrix: Matrix;\r\n    public readonly tactics: RenderableTactic[] = [];\r\n    public get height() {\r\n        let heights = this.tactics.map(function(tactic: RenderableTactic) { return tactic.height; })\r\n        return Math.max(...heights);\r\n    }\r\n    constructor(matrix: Matrix, viewModel: ViewModel, renderConfig: any) {\r\n        this.matrix = matrix;\r\n        let filteredTactics = viewModel.filterTactics(matrix.tactics, matrix);\r\n        for (let tactic of filteredTactics) {\r\n            this.tactics.push(new RenderableTactic(tactic, matrix, viewModel, renderConfig));\r\n        }\r\n    }\r\n}\r\n\r\nclass RenderableTactic {\r\n    public readonly tactic: Tactic;\r\n    public readonly techniques: RenderableTechnique[] = [];\r\n    public readonly subtechniques: RenderableTechnique[] = [];\r\n    public readonly height: number;\r\n    constructor(tactic: Tactic, matrix: Matrix, viewModel: ViewModel, renderConfig: any) {\r\n        this.tactic = tactic;\r\n        let filteredTechniques = viewModel.sortTechniques(viewModel.filterTechniques(tactic.techniques, tactic, matrix), tactic);\r\n        let yPosition = 1; //start at 1 to make space for tactic label\r\n        for (let technique of filteredTechniques) {\r\n            let techniqueVM = viewModel.getTechniqueVM(technique, tactic);\r\n            let filteredSubtechniques = viewModel.filterTechniques(technique.subtechniques, tactic, matrix);\r\n            \r\n            let showSubtechniques = renderConfig.showSubtechniques == \"all\" || (renderConfig.showSubtechniques == \"expanded\" && techniqueVM.showSubtechniques)\r\n\r\n            this.techniques.push(new RenderableTechnique(yPosition++, technique, tactic, matrix, viewModel, showSubtechniques));\r\n\r\n            if (filteredSubtechniques.length > 0 && showSubtechniques) {\r\n                for (let subtechnique of filteredSubtechniques) {\r\n                    this.subtechniques.push(new RenderableTechnique(yPosition++, subtechnique, tactic, matrix, viewModel, renderConfig));\r\n                }\r\n            }\r\n        }\r\n        this.height = yPosition;\r\n    }\r\n}\r\n\r\nclass RenderableTechnique {\r\n    public readonly yPosition: number;\r\n    public readonly technique: Technique;\r\n    public readonly tactic: Tactic;\r\n    public readonly matrix: Matrix;\r\n    public readonly showSubtechniques;\r\n    private readonly viewModel: ViewModel;\r\n    constructor(yPosition, technique: Technique, tactic: Tactic, matrix: Matrix, viewModel: ViewModel, showSubtechniques=false) {\r\n        this.yPosition = yPosition;\r\n        this.technique = technique;\r\n        this.tactic = tactic;\r\n        this.matrix = matrix;\r\n        this.viewModel = viewModel;\r\n        this.showSubtechniques = showSubtechniques;\r\n    }\r\n\r\n    public get fill() {\r\n        if (this.viewModel.hasTechniqueVM(this.technique, this.tactic)) {\r\n            let techniqueVM: TechniqueVM = this.viewModel.getTechniqueVM(this.technique, this.tactic);\r\n            if (!techniqueVM.enabled) return \"white\";\r\n            if (techniqueVM.color) return techniqueVM.color;\r\n            if (this.viewModel.layout.showAggregateScores && techniqueVM.aggregateScoreColor) return techniqueVM.aggregateScoreColor;\r\n            if (techniqueVM.score) return techniqueVM.scoreColor;\r\n        } \r\n        return \"white\"; //default\r\n    }\r\n\r\n    public get textColor() {\r\n        if (this.viewModel.hasTechniqueVM(this.technique, this.tactic)) {\r\n            let techniqueVM: TechniqueVM = this.viewModel.getTechniqueVM(this.technique, this.tactic);\r\n            if (!techniqueVM.enabled) return \"#aaaaaa\";\r\n        }\r\n        return tinycolor.mostReadable(this.fill, [\"white\", \"black\"]); //default;\r\n    }\r\n\r\n    public get text() {\r\n        let text = [];\r\n        if (this.viewModel.layout.showID) text.push(this.technique.attackID);\r\n        if (this.viewModel.layout.showName) text.push(this.technique.name);\r\n        return text.join(\": \")\r\n    }\r\n}\r\n\r\n","<div class=\"controlsContainer\">\r\n    <ul class=\"control-sections\">\r\n        <li class=\"iewarning\" *ngIf=\"isIE()\">\r\n            Warning: this interface is not fully compatible with your browser. For best results please switch to Edge, Chrome, or Firefox.\r\n        </li>\r\n        <li>\r\n            <div class=\"control-row-item noselect\">\r\n                <!-- {{config.unit}} -->\r\n                <div class=\"control-row-button\"\r\n                     (click)=\"unitEnum = (unitEnum + 1) % 3; config.unit = ['in', 'cm', 'px'][unitEnum]; buildSVG()\"\r\n                     matTooltipPosition=\"below\"\r\n                     matTooltip=\"toggle measurement unit\">\r\n                    <svg fill=\"currentColor\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <text x=\"4px\" y=\"50%\" dominant-baseline=\"middle\" style=\"font-size: 14px; font-weight: bold; font-family:monospace\">{{config.unit}}</text>\r\n                    </svg>\r\n                </div>\r\n            </div>\r\n\r\n        </li>\r\n        <li>\r\n            <div class=\"control-row-item\">\r\n                <div class=\"control-row-button dropdown noselect\"\r\n                     (click)=\"currentDropdown = currentDropdown !== 'imgsize' ? 'imgsize' : null;\"\r\n                     matTooltipPosition=\"below\"\r\n                     matTooltip=\"image size\">\r\n                    <span class=\"material-icons\">photo_size_select_large</span>\r\n                </div>\r\n                <div class=\"dropdown-container size left\" *ngIf=\"currentDropdown === 'imgsize'\">\r\n                    <ul>\r\n                        <li>\r\n                            <mat-form-field>\r\n                                <input matInput\r\n                                       class=\"has-suffix\"\r\n                                       type=\"number\"\r\n                                       placeholder=\"width\"\r\n                                       step=\"0.01\"\r\n                                       [(ngModel)]=\"config.width\"\r\n                                       (input)=\"buildSVG()\" />\r\n                                <span matSuffix>{{config.unit}}</span>\r\n                            </mat-form-field>\r\n                        </li>\r\n                        <li>\r\n                            <mat-form-field>\r\n                                <input matInput\r\n                                       class=\"has-suffix\"\r\n                                       type=\"number\"\r\n                                       placeholder=\"height\"\r\n                                       step=\"0.01\"\r\n                                       [(ngModel)]=\"config.height\"\r\n                                       (input)=\"buildSVG()\" />\r\n                                <span matSuffix>{{config.unit}}</span>\r\n                            </mat-form-field>\r\n                        </li>\r\n                        <li>\r\n                            <mat-form-field>\r\n                                <input matInput\r\n                                       class=\"has-suffix\"\r\n                                       type=\"number\"\r\n                                       placeholder=\"header height\"\r\n                                       step=\"0.01\"\r\n                                       [disabled]=\"!config.showHeader\"\r\n                                       [(ngModel)]=\"config.headerHeight\"\r\n                                       (input)=\"buildSVG()\" />\r\n                                <span matSuffix [style.color]=\"!config.showHeader ? 'rgba(0,0,0,0.42)' : 'black'\">{{config.unit}}</span>\r\n                            </mat-form-field>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"control-row-item\">\r\n                <div class=\"control-row-button dropdown noselect\"\r\n                     (click)=\"currentDropdown = currentDropdown !== 'font' ? 'font' : null;\"\r\n                     matTooltipPosition=\"below\"\r\n                     matTooltip=\"text\">\r\n                    <span class=\"material-icons\">format_size</span>\r\n                </div>\r\n                <div class=\"dropdown-container font left\" *ngIf=\"currentDropdown === 'font'\">\r\n                    <ul>\r\n                        <li>\r\n                            <mat-form-field>\r\n                                <mat-select placeholder=\"font\" [(ngModel)]=\"config.font\" (selectionChange)=\"buildSVG()\">\r\n                                    <mat-option value=\"serif\">serif</mat-option>\r\n                                    <mat-option value=\"sans-serif\">sans-serif</mat-option>\r\n                                    <mat-option value=\"monospace\">monospace</mat-option>\r\n                                </mat-select>\r\n                            </mat-form-field>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n            <div class=\"control-row-item\">\r\n                <div class=\"control-row-button dropdown noselect\"\r\n                     (click)=\"showLegendContainer()? currentDropdown = currentDropdown !== 'legend' ? 'legend' : null : null;\"\r\n                     matTooltipPosition=\"below\"\r\n                     matTooltip=\"legend\"\r\n                     [style.color]=\"showLegendContainer() ? 'inherit' : '#aaaaaa'\">\r\n                    <span class=\"material-icons\">view_list</span>\r\n                </div>\r\n                <div class=\"dropdown-container legend left\" *ngIf=\"currentDropdown === 'legend'\">\r\n                    <ul>\r\n                        <li>\r\n                            <input [id]=\"uid + 'legendDockedCheckbox'\"type=\"checkbox\" class=\"checkbox-custom\" [(ngModel)]=\"config.legendDocked\" (change)=\"buildSVG()\">\r\n                            <label [for]=\"uid + 'legendDockedCheckbox'\" class=\"checkbox-custom-label noselect\">\r\n                                dock legend in header\r\n                            </label>\r\n                        </li>\r\n                        <li>\r\n                            <mat-form-field>\r\n                                <input matInput\r\n                                       class=\"has-suffix\"\r\n                                       type=\"number\"\r\n                                       placeholder=\"legend X position\"\r\n                                       [disabled]=\"config.legendDocked\"\r\n                                       step=\"1\"\r\n                                       [(ngModel)]=\"config.legendX\"\r\n                                       (input)=\"buildSVG()\" />\r\n                                <span [style.color]=\"config.legendDocked ? 'rgba(0,0,0,0.42)' : 'black'\" matSuffix>{{config.unit}}</span>\r\n                            </mat-form-field>\r\n                        </li>\r\n                        <li>\r\n                            <mat-form-field>\r\n                                <input matInput\r\n                                       class=\"has-suffix\"\r\n                                       type=\"number\"\r\n                                       placeholder=\"legend Y position\"\r\n                                       [disabled]=\"config.legendDocked\"\r\n                                       step=\"1\"\r\n                                       [(ngModel)]=\"config.legendY\"\r\n                                       (input)=\"buildSVG()\" />\r\n                                <span [style.color]=\"config.legendDocked ? 'rgba(0,0,0,0.42)' : 'black'\" matSuffix>{{config.unit}}</span>\r\n                            </mat-form-field>\r\n                        </li>\r\n                        <li>\r\n                            <mat-form-field>\r\n                                <input matInput\r\n                                       class=\"has-suffix\"\r\n                                       type=\"number\"\r\n                                       placeholder=\"legend width\"\r\n                                       [disabled]=\"config.legendDocked\"\r\n                                       step=\"1\"\r\n                                       [(ngModel)]=\"config.legendWidth\"\r\n                                       (input)=\"buildSVG()\" />\r\n                                <span [style.color]=\"config.legendDocked ? 'rgba(0,0,0,0.42)' : 'black'\" matSuffix>{{config.unit}}</span>\r\n                            </mat-form-field>\r\n                        </li>\r\n                        <li>\r\n                            <mat-form-field>\r\n                                <input matInput\r\n                                       class=\"has-suffix\"\r\n                                       type=\"number\"\r\n                                       placeholder=\"legend height\"\r\n                                       [disabled]=\"config.legendDocked\"\r\n                                       step=\"1\"\r\n                                       [(ngModel)]=\"config.legendHeight\"\r\n                                       (input)=\"buildSVG()\" />\r\n                                <span [style.color]=\"config.legendDocked ? 'rgba(0,0,0,0.42)' : 'black'\" matSuffix>{{config.unit}}</span>\r\n                            </mat-form-field>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n            <div class=\"control-row-item\">\r\n                <div class=\"control-row-button dropdown noselect\"\r\n                     (click)=\"currentDropdown = currentDropdown !== 'visibility' ? 'visibility' : null;\"\r\n                     matTooltipPosition=\"below\"\r\n                     matTooltip=\"display settings\">\r\n                    <span class=\"material-icons\">visibility</span>\r\n                </div>\r\n                <div class=\"dropdown-container visibility left\" *ngIf=\"currentDropdown === 'visibility'\">\r\n                    <ul>\r\n                        <li>\r\n                            <input [id]=\"uid+'checkboxheader'\" type=\"checkbox\" class=\"checkbox-custom\" [(ngModel)]=\"config.showHeader\" (change)=\"buildSVG()\">\r\n                            <label [for]=\"uid+'checkboxheader'\" class=\"checkbox-custom-label noselect\">show header</label>\r\n                        </li>\r\n                        <li>\r\n                            <input [id]=\"uid+'checkboxAbout'\" type=\"checkbox\" [disabled]=\"(!hasName() && !hasDescription()) || !config.showHeader\" class=\"checkbox-custom\" [(ngModel)]=\"config.showAbout\" (change)=\"buildSVG()\">\r\n                            <label [for]=\"uid+'checkboxAbout'\" class=\"checkbox-custom-label noselect\" [class.disabled]=\"(!hasName() && !hasDescription()) || !config.showHeader\">show about</label>\r\n                        </li>\r\n                        <li>\r\n                            <input [id]=\"uid+'checkboxDomain'\" type=\"checkbox\" [disabled]=\"(!hasDomain()) || !config.showHeader\" class=\"checkbox-custom\" [(ngModel)]=\"config.showDomain\" (change)=\"buildSVG()\">\r\n                            <label [for]=\"uid+'checkboxDomain'\" class=\"checkbox-custom-label noselect\" [class.disabled]=\"(!hasDomain()) || !config.showHeader\">show domain</label>\r\n                        </li>\r\n                        <li>\r\n                            <input [id]=\"uid+'checkboxfilters'\" type=\"checkbox\" class=\"checkbox-custom\" [disabled]=\"!config.showHeader\"[(ngModel)]=\"config.showFilters\" (change)=\"buildSVG()\">\r\n                            <label [for]=\"uid+'checkboxfilters'\" class=\"checkbox-custom-label noselect\" [class.disabled]=\"!config.showHeader\">show filters</label>\r\n                        </li>\r\n                        <li>\r\n                            <input [id]=\"uid+'checkboxlegend'\" type=\"checkbox\" [disabled]=\"!hasLegendItems()\" class=\"checkbox-custom\" [(ngModel)]=\"config.showLegend\" (change)=\"buildSVG()\">\r\n                            <label [for]=\"uid+'checkboxlegend'\" class=\"checkbox-custom-label noselect\" [class.disabled]=\"!hasLegendItems()\">show legend</label>\r\n                        </li>\r\n                        <li>\r\n                            <input [id]=\"uid+'checkboxGradient'\" type=\"checkbox\" [disabled]=\"!hasScores\" class=\"checkbox-custom\" [(ngModel)]=\"config.showGradient\" (change)=\"buildSVG()\">\r\n                            <label [for]=\"uid+'checkboxGradient'\" class=\"checkbox-custom-label noselect\" [class.disabled]=\"!hasScores\">show gradient score</label>\r\n                        </li>\r\n                        <li *ngIf=\"configService.getFeature('subtechniques')\" style=\"padding: 0 5px\">\r\n                            <mat-form-field>\r\n                                <mat-select placeholder=\"sub-techniques\" [(ngModel)]=\"config.showSubtechniques\" (selectionChange)=\"buildSVG()\">\r\n                                    <mat-option value=\"all\">show all</mat-option>\r\n                                    <mat-option value=\"expanded\">show expanded</mat-option>\r\n                                    <mat-option value=\"none\">show none</mat-option>\r\n                                </mat-select>\r\n                            </mat-form-field>\r\n                        </li>\r\n                        <!-- <li>\r\n                            <input [id]=\"uid+'checkboxtcount'\" type=\"checkbox\" class=\"checkbox-custom\" [(ngModel)]=\"config.showTechniqueCount\" (change)=\"buildSVG()\">\r\n                            <label [for]=\"uid+'checkboxtcount'\" class=\"checkbox-custom-label noselect\">show technique count</label>\r\n                        </li> -->\r\n                        <li>\r\n                            <input [id]=\"uid+'tableBorderInput'\" class=\"colorpicker\" [(colorPicker)]=\"config.tableBorderColor\" [style.background]=\"config.tableBorderColor\" cpPosition=\"bottom\" [cpPresetColors]=\"['#6B7279', '#aaaaaa', '#205B8F', '#B9482D', '#ffffff', '#000000']\"\r\n                             (colorPickerSelect)=\"buildSVG()\" [cpOKButton]=\"true\" [cpOKButtonText]=\"'apply'\" [cpCancelButton]=\"true\" style=\"width: 14px; margin: 5px 0 0 5px;\">\r\n                             <label [for]=\"uid+'tableBorderInput'\" class=\"noselect\">cell border</label>\r\n\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </li>\r\n        <li>\r\n            <div class=\"control-row-item\">\r\n                <div class=\"control-row-button noselect\"\r\n                [id]=\"'download-button' + viewModel.uid\"\r\n                    (click)=\"downloadSVG()\"\r\n                    matTooltipPosition=\"below\"\r\n                    matTooltip=\"download SVG\">\r\n                    <span class=\"material-icons\" alt=\"save layer\">file_download</span>\r\n                </div>\r\n            </div>\r\n\r\n        </li>\r\n    </ul>\r\n</div>\r\n\r\n<div class=\"svgcontainer\" [id]=\"'svgInsert' + viewModel.uid\">\r\n    loading...\r\n</div>\r\n\r\n<div class=\"close-button\">\r\n    <button mat-button mat-dialog-close>close</button>\r\n</div>\r\n","import { Component, OnInit, Input, ViewEncapsulation } from '@angular/core';\r\nimport { ViewModel, ViewModelsService } from '../viewmodels.service';\r\nimport { BaseStix, DataService, Group, Mitigation, Software, Technique, Campaign } from '../data.service';\r\n\r\n@Component({\r\n  selector: 'app-search-and-multiselect',\r\n  templateUrl: './search-and-multiselect.component.html',\r\n  styleUrls: ['./search-and-multiselect.component.scss'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\n\r\nexport class SearchAndMultiselectComponent implements OnInit {\r\n    @Input() viewModel: ViewModel;\r\n    public stixTypes: any[];\r\n    // Data Components is a map mainly because it is a collection of labels that map to\r\n    // an array of techniques, where we want to filter/sort by label name\r\n    public stixDataComponents = new Map<string, any>();\r\n    public stixDataComponentLabels: string[];\r\n    userClickedExpand = false;\r\n    expandedPanels = {\r\n        0: true, // techniques panel\r\n        1: false, // groups panel\r\n        2: false, // software panel\r\n        3: false, // campaign panel\r\n        4: false, // mitigations panel\r\n        5: false // data components panel\r\n    };\r\n\r\n    public fields = [\r\n        {\r\n            \"label\": \"name\",\r\n            \"field\": \"name\",\r\n            \"enabled\": true\r\n        },\r\n        {\r\n            \"label\": \"ATT&CK ID\",\r\n            \"field\": \"attackID\",\r\n            \"enabled\": true\r\n        },\r\n        {\r\n            \"label\": \"description\",\r\n            \"field\": \"description\",\r\n            \"enabled\": true\r\n        },\r\n        {\r\n            \"label\": \"data sources\",\r\n            \"field\": \"datasources\",\r\n            \"enabled\": true\r\n        }\r\n    ]\r\n\r\n    private debounceFunction;\r\n    private previousQuery: string = \"\";\r\n    private _query: string = \"\";\r\n    public set query(newQuery: string) {\r\n        this._query = newQuery;\r\n        if (!this.debounceFunction) {\r\n            this.debounceFunction = setTimeout(() => {\r\n                this.getResults(this._query);\r\n                this.debounceFunction = null;\r\n                this.previousQuery = this._query;\r\n                }, 300);\r\n        }\r\n    }\r\n\r\n    public get queryLength(): number {\r\n        return this._query.length;\r\n    }\r\n\r\n    public get stixDataComponentsResults(): Technique[] {\r\n      let results = [];\r\n      this.stixDataComponentLabels.forEach((label) => {\r\n        results = results.concat(this.stixDataComponents.get(label).objects);\r\n      });\r\n      return results;\r\n    }\r\n\r\n    public techniqueResults: Technique[] = [];\r\n\r\n    constructor(private dataService: DataService, private viewModelsService: ViewModelsService) {\r\n        this.stixTypes = [];\r\n        this.stixDataComponentLabels = [];\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.getResults();\r\n    }\r\n\r\n    /**\r\n     * filterAndSort() takes an array of items and does the following:\r\n     *       1) if the query is empty, then it sorts the array\r\n     *       2) if the query is not empty, then it filters the already sorted array until nothing is left, or until\r\n     *          the query is cleared out and empty again\r\n     * @param items BaseStix[] or Technique[] objects to be filtered and sorted\r\n     * @param query user-input query in search bar\r\n     * @param sortTechniquesAndSubtechniques will be true if called from getTechniqueResults(),\r\n     *                                       to sort techniques and all its subtechniques,\r\n     *                                       otherwise just sort BaseStix items by name\r\n     */\r\n    filterAndSort(items: BaseStix[], query = \"\", sortTechniquesAndSubtechniques = false): any[] {\r\n        let self = this;\r\n        let results = items.filter(t => !t.deprecated && !t.revoked);\r\n        if (query.trim() === \"\") {\r\n            if (sortTechniquesAndSubtechniques) {\r\n                results.sort((tA: Technique, tB: Technique) => {\r\n                    let c1 = tA.isSubtechnique ? tA.parent.name : tA.name;\r\n                    let c2 = tB.isSubtechnique ? tB.parent.name : tB.name;\r\n                    return c1.localeCompare(c2)\r\n                });\r\n            } else {\r\n                results.sort((a, b) => a.name.toLowerCase().localeCompare(b.name.toLowerCase()));\r\n            }\r\n        } else {\r\n            // deconflict IDs for cross-tactic techniques\r\n            let seenIDs = new Set();\r\n            results = results.filter(function (technique: Technique) {\r\n                if (seenIDs.has(technique.id)) return false;\r\n                for (let field of self.fields) {\r\n                    if (field.enabled) {\r\n                        // query in this field\r\n                        if (technique[field.field]?.toLowerCase().includes(query.trim().toLowerCase())) {\r\n                            seenIDs.add(technique.id);\r\n                            return true;\r\n                        }\r\n                    }\r\n                }\r\n                return false;\r\n            });\r\n        }\r\n        return results;\r\n    }\r\n\r\n    filterAndSortLabels(labels, query) {\r\n      let results = labels;\r\n      if (query.trim() === \"\") {\r\n        return results.sort();\r\n      } else {\r\n        return results.filter((r) => r.toLowerCase().includes(query.trim().toLowerCase()));\r\n      }\r\n    }\r\n\r\n\r\n    /**\r\n     * getResults() checks if this._query is:\r\n     *       1) valid, and\r\n     *       2) part of last query, otherwise call getTechniques() and getStixData() to search all objects again\r\n    **/\r\n\r\n    getResults(query = \"\", fieldToggled = false) {\r\n        if (query.trim() != \"\" && query.includes(this.previousQuery) && !fieldToggled) {\r\n            this.techniqueResults = this.filterAndSort(this.techniqueResults, query, true);\r\n            this.stixTypes.forEach(item => item['objects'] = this.filterAndSort(item['objects'], query));\r\n        } else {\r\n            this.getTechniques();\r\n            this.getStixData();\r\n        }\r\n        this.stixDataComponentLabels = this.filterAndSortLabels(this.stixDataComponentLabels, query);\r\n        this.expandPanels();\r\n    }\r\n\r\n    expandPanels() {\r\n        if (!this.userClickedExpand) {\r\n            this.expandedPanels[0] = this.techniqueResults.length > 0;\r\n            let isPrevExpanded = this.expandedPanels[0];\r\n            if (!isPrevExpanded) {\r\n                this.stixTypes.forEach((s, i) => {\r\n                  this.expandedPanels[i+1] = !isPrevExpanded && s.objects.length > 0;\r\n                  isPrevExpanded = s.isExpanded;\r\n                });\r\n            }\r\n            this.expandedPanels[4] = (!isPrevExpanded && this.stixDataComponentLabels.length > 0);\r\n        } else {\r\n            let isAllCollapsed = false;\r\n            for (const isPanelExpanded in this.expandedPanels) {\r\n                if (isPanelExpanded) {\r\n                  isAllCollapsed = true;\r\n                  break;\r\n                }\r\n            }\r\n            this.userClickedExpand = isAllCollapsed;\r\n        }\r\n    }\r\n\r\n    getTechniques() {\r\n        //get master list of techniques and sub-techniques\r\n        let allTechniques = this.dataService.getDomain(this.viewModel.domainVersionID).techniques;\r\n        for (let technique of allTechniques) {\r\n            allTechniques = allTechniques.concat(technique.subtechniques);\r\n        }\r\n        this.techniqueResults = this.filterAndSort(allTechniques, this._query, true);\r\n    }\r\n\r\n    getStixData() {\r\n        let domain = this.dataService.getDomain(this.viewModel.domainVersionID);\r\n\r\n        this.stixTypes = [{\r\n            \"label\": \"threat groups\",\r\n            \"objects\": this.filterAndSort(domain.groups, this._query)\r\n        }, {\r\n            \"label\": \"software\",\r\n            \"objects\": this.filterAndSort(domain.software, this._query)\r\n        }, {\r\n            \"label\": \"mitigations\",\r\n            \"objects\": this.filterAndSort(domain.mitigations, this._query)\r\n        }, {\r\n            \"label\": \"campaigns\",\r\n            \"objects\": this.filterAndSort(domain.campaigns, this._query)\r\n        }];\r\n\r\n        domain.dataComponents.forEach((c) => {\r\n          const source = c.source(this.viewModel.domainVersionID);\r\n          const label = `${source.name}: ${c.name}`;\r\n          const obj = {\r\n            \"objects\": c.techniques(this.viewModel.domainVersionID),\r\n            \"url\": source.url\r\n          }\r\n          this.stixDataComponents.set(label, obj);\r\n        });\r\n        this.stixDataComponentLabels = this.filterAndSortLabels(Array.from(this.stixDataComponents.keys()), this._query);\r\n    }\r\n\r\n    public toggleFieldEnabled(field: string) {\r\n        for (let thefield of this.fields) {\r\n            if (thefield.field == field) {\r\n                thefield.enabled = !thefield.enabled;\r\n                // set query to empty string to trigger getResults() in the case that:\r\n                // 1) a field was toggled, and\r\n                // 2) the query did not change\r\n                this.getResults(\"\", true);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    public mouseEnterAll(techniques: Technique[]) {\r\n      techniques.forEach((t) => this.mouseEnter(t));\r\n    }\r\n\r\n    public mouseEnter(technique: Technique, isTechnique = true): void {\r\n        if (!isTechnique) {\r\n            for (let t of this.getRelated(technique)) {\r\n                this.viewModel.selectTechniqueAcrossTactics(t, true, true);\r\n            }\r\n        } else {\r\n            this.viewModel.highlightTechnique(technique);\r\n        }\r\n    }\r\n\r\n    public mouseLeave(): void {\r\n        this.viewModel.clearHighlight();\r\n    }\r\n\r\n    public select(stixObject: any, isTechnique= true): void {\r\n        if (isTechnique) {\r\n            this.viewModel.selectTechniqueAcrossTactics(stixObject);\r\n        }\r\n        else if (!isTechnique) {\r\n            for (let technique of this.getRelated(stixObject)) {\r\n                this.viewModel.selectTechniqueAcrossTactics(technique);\r\n            }\r\n        }\r\n        this.viewModelsService.onSelectionChange.emit(); // emit selection change\r\n    }\r\n\r\n    public deselect(stixObject: any, isTechnique = true): void {\r\n        if (isTechnique) {\r\n            this.viewModel.unselectTechniqueAcrossTactics(stixObject);\r\n        }\r\n        else if (!isTechnique) {\r\n            for (let technique of this.getRelated(stixObject)) {\r\n                this.viewModel.unselectTechniqueAcrossTactics(technique);\r\n            }\r\n        }\r\n        this.viewModelsService.onSelectionChange.emit(); // emit selection change\r\n    }\r\n\r\n    public selectAll(items: any[], isTechniqueArray = true): void {\r\n        if (isTechniqueArray) {\r\n            for (let result of items) this.select(result, isTechniqueArray);\r\n        }\r\n        else if (!isTechniqueArray) {\r\n            for (let stixObject of items) this.select(stixObject, isTechniqueArray);\r\n        }\r\n        this.viewModelsService.onSelectionChange.emit(); // emit selection change\r\n    }\r\n\r\n    public deselectAll(items: any[], isTechniqueArray = true): void {\r\n        if (isTechniqueArray) {\r\n            for (let result of items) this.deselect(result, isTechniqueArray);\r\n        }\r\n        else if (!isTechniqueArray) {\r\n            for (let stixObject of items) this.deselect(stixObject, isTechniqueArray);\r\n        }\r\n        this.viewModelsService.onSelectionChange.emit(); // emit selection change\r\n    }\r\n\r\n    public getRelated(stixObject: BaseStix): Technique[] {\r\n        // master list of all techniques and sub-techniques\r\n        let techniques = this.dataService.getDomain(this.viewModel.domainVersionID).techniques;\r\n        let allTechniques = techniques.concat(this.dataService.getDomain(this.viewModel.domainVersionID).subtechniques);\r\n        let domainVersionID = this.viewModel.domainVersionID;\r\n\r\n        if (stixObject instanceof Group) {\r\n            return allTechniques.filter((technique: Technique) => (stixObject as Group).relatedTechniques(domainVersionID).includes(technique.id));\r\n        } else if (stixObject instanceof Software) {\r\n            return allTechniques.filter((technique: Technique) => (stixObject as Software).relatedTechniques(domainVersionID).includes(technique.id));\r\n        } else if (stixObject instanceof Mitigation) {\r\n            return allTechniques.filter((technique: Technique) => (stixObject as Mitigation).relatedTechniques(domainVersionID).includes(technique.id));\r\n        } else if (stixObject instanceof Campaign) {\r\n            return allTechniques.filter((technique: Technique) => (stixObject as Campaign).relatedTechniques(domainVersionID).includes(technique.id));\r\n        }\r\n    }\r\n}\r\n","<div class=\"search-and-multiselect\">\r\n    <mat-form-field appearance=\"outline\">\r\n        <mat-label>Search</mat-label>\r\n        <span matPrefix class=\"material-icons\" alt=\"search\">search</span>\r\n        <input matInput [(ngModel)]=\"query\" placeholder=\"Search\">\r\n    </mat-form-field>\r\n\r\n    <mat-divider></mat-divider>\r\n\r\n    <div class=\"sidebar-content\">\r\n        <mat-card>\r\n            <div class=\"settings\">\r\n                <mat-card-title><h4 class=\"title\">Search Settings</h4></mat-card-title>\r\n                <mat-card-content>\r\n                    <div class=\"fields\">\r\n                        <div class=\"field\" *ngFor=\"let field of fields\">\r\n                            <input [id]=\"field.field\" class=\"checkbox-custom\" type=\"checkbox\"\r\n                                   (click)=\"toggleFieldEnabled(field.field)\" [checked]=\"field.enabled\">\r\n                            <label [for]=\"field.field\" class=\"checkbox-custom-label noselect\">{{field.label}}</label>\r\n                        </div>\r\n                    </div>\r\n                </mat-card-content>\r\n            </div>\r\n        </mat-card>\r\n    </div>\r\n\r\n    <mat-divider></mat-divider>\r\n\r\n    <div class=\"sidebar-content\">\r\n        <mat-accordion multi>\r\n            <mat-expansion-panel [expanded]=\"expandedPanels[0]\" (click)=\"userClickedExpand = true\">\r\n                <mat-expansion-panel-header>\r\n                    <mat-panel-title>\r\n                        <h4>Techniques ({{techniqueResults.length}})</h4>\r\n                    </mat-panel-title>\r\n                    <mat-panel-description>\r\n                    </mat-panel-description>\r\n                </mat-expansion-panel-header>\r\n\r\n                <ng-template matExpansionPanelContent>\r\n                    <div>\r\n                        <div class=\"allresults-buttons\">\r\n                            <button class=\"button\" (click)=\"selectAll(techniqueResults)\">select all</button>\r\n                            <button class=\"button\" (click)=\"deselectAll(techniqueResults)\">deselect all</button>\r\n                        </div>\r\n                        <div class=\"results\">\r\n                            <table class=\"results\" *ngIf=\"techniqueResults.length > 0; else noTechniquesResults\">\r\n                                <tr *ngFor=\"let result of techniqueResults\">\r\n                                    <td (mouseenter)=\"mouseEnter(result)\" (mouseleave)=\"mouseLeave()\">\r\n                                        <span *ngIf=\"result.isSubtechnique\">{{result.parent.name}}\r\n                                            : </span>{{result.name}}\r\n                                    </td>\r\n                                    <td><a href=\"{{result.url}}\" target=\"_blank\">view</a></td>\r\n                                    <td>\r\n                                        <button class=\"button\" (click)=\"select(result)\">select</button>\r\n                                    </td>\r\n                                    <td>\r\n                                        <button class=\"button\" (click)=\"deselect(result)\">deselect</button>\r\n                                    </td>\r\n                                </tr>\r\n                            </table>\r\n                            <ng-template #noTechniquesResults>\r\n                                <div class=\"no-results\">no results for techniques</div>\r\n                            </ng-template>\r\n                        </div>\r\n                    </div>\r\n                </ng-template>\r\n            </mat-expansion-panel>\r\n\r\n            <mat-expansion-panel *ngFor=\"let stixType of stixTypes; let i = index\" class=\"stixType\" [expanded]=\"expandedPanels[i+1]\" (click)=\"userClickedExpand = true\">\r\n                <mat-expansion-panel-header>\r\n                    <mat-panel-title>\r\n                        <h4>\r\n                            {{stixType.label | titlecase }} ({{stixType.objects.length}})\r\n                        </h4>\r\n                    </mat-panel-title>\r\n                    <mat-panel-description>\r\n                    </mat-panel-description>\r\n                </mat-expansion-panel-header>\r\n\r\n                <ng-template matExpansionPanelContent>\r\n                    <div class=\"allresults-buttons\">\r\n                        <button class=\"button\" (click)=\"selectAll(stixType.objects, false)\">select all</button>\r\n                        <button class=\"button\" (click)=\"deselectAll(stixType.objects, false)\">deselect all</button>\r\n                    </div>\r\n                    <div class=\"results objects\">\r\n                        <table *ngIf=\"stixType.objects.length > 0; else noResults\">\r\n                            <tr *ngFor=\"let stixObject of stixType.objects\">\r\n                                <td (mouseenter)=\"mouseEnter(stixObject, false)\"\r\n                                    (mouseleave)=\"mouseLeave()\">\r\n                                    {{stixObject.name}}\r\n                                </td>\r\n                                <td><a href=\"{{stixObject.url}}\" target=\"_blank\">view</a></td>\r\n                                <td>\r\n                                    <button class=\"button\" (click)=\"select(stixObject, false)\">select</button>\r\n                                </td>\r\n                                <td>\r\n                                    <button class=\"button\" (click)=\"deselect(stixObject, false)\">deselect</button>\r\n                                </td>\r\n                            </tr>\r\n                        </table>\r\n                        <ng-template #noResults>\r\n                            <div class=\"no-results\">no results for {{stixType.label}}</div>\r\n                        </ng-template>\r\n                    </div>\r\n                </ng-template>\r\n            </mat-expansion-panel>\r\n\r\n            <mat-expansion-panel [expanded]=\"expandedPanels[4]\" (click)=\"userClickedExpand = true\">\r\n                <mat-expansion-panel-header>\r\n                    <mat-panel-title>\r\n                        <h4>\r\n                            Data Sources ({{stixDataComponentLabels.length}})\r\n                        </h4>\r\n                    </mat-panel-title>\r\n                    <mat-panel-description>\r\n                    </mat-panel-description>\r\n                </mat-expansion-panel-header>\r\n\r\n                <ng-template matExpansionPanelContent>\r\n                    <div class=\"allresults-buttons\">\r\n                        <button class=\"button\" (click)=\"selectAll(stixDataComponentsResults, true)\">select all</button>\r\n                        <button class=\"button\" (click)=\"deselectAll(stixDataComponentsResults, true)\">deselect all</button>\r\n                    </div>\r\n                    <div class=\"results objects\">\r\n                        <table *ngIf=\"stixDataComponentLabels.length > 0; else noResults\">\r\n                            <tr  *ngFor=\"let label of stixDataComponentLabels\">\r\n                                <td (mouseenter)=\"mouseEnterAll(stixDataComponents.get(label).objects)\"\r\n                                    (mouseleave)=\"mouseLeave()\">\r\n                                    {{ label }}\r\n                                </td>\r\n                                <td><a href=\"{{stixDataComponents.get(label).url}}\" target=\"_blank\">view</a></td>\r\n                                <td>\r\n                                    <button class=\"button\" (click)=\"selectAll(stixDataComponents.get(label).objects, true)\">select</button>\r\n                                </td>\r\n                                <td>\r\n                                    <button class=\"button\" (click)=\"deselectAll(stixDataComponents.get(label).objects, true)\">deselect</button>\r\n                                </td>\r\n                            </tr>\r\n                        </table>\r\n                        <ng-template #noResults>\r\n                            <div class=\"no-results\">no results for data sources</div>\r\n                        </ng-template>\r\n                    </div>\r\n                </ng-template>\r\n            </mat-expansion-panel>\r\n        </mat-accordion>\r\n    </div>\r\n\r\n    <mat-divider></mat-divider>\r\n\r\n    <div class=\"button-container sidebar-content\">\r\n        <button (click)=\"viewModel.sidebarOpened = !viewModel.sidebarOpened\" mat-raised-button>Close</button>\r\n    </div>\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Buffer } from 'buffer';\r\nimport { Observable } from \"rxjs/Rx\";\r\nimport { fromPromise } from 'rxjs/observable/fromPromise';\r\nimport { TaxiiConnect, Collection } from './taxii2lib';\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class DataService {\r\n\r\n    constructor(private http: HttpClient) {\r\n        console.log(\"initializing data service\")\r\n        let subscription = this.getConfig().subscribe({\r\n            next: (config) => {\r\n                this.setUpURLs(config[\"versions\"]);\r\n            },\r\n            complete: () => { if (subscription) subscription.unsubscribe(); } //prevent memory leaks\r\n        })\r\n    }\r\n\r\n    public domain_backwards_compatibility = {\r\n        \"mitre-enterprise\": \"enterprise-attack\",\r\n        \"mitre-mobile\": \"mobile-attack\"\r\n    }\r\n    public domains: Domain[] = [];\r\n    public versions: Version[] = [];\r\n\r\n    public subtechniquesEnabled: boolean = true;\r\n\r\n    /**\r\n     * Callback functions passed to this function will be called after data is loaded\r\n     * @param {string} domainVersionID the ID of the domain and version to load\r\n     * @param {*} callback callback function to call when data is done loading\r\n     */\r\n    public onDataLoad(domainVersionID, callback) {\r\n        this.getDomain(domainVersionID).dataLoadedCallbacks.push(callback);\r\n    }\r\n\r\n    /**\r\n     * Parse the given stix bundle into the relevant data holders\r\n     * @param domain\r\n     * @param stixBundles\r\n     */\r\n    parseBundle(domain: Domain, stixBundles: any[]): void {\r\n        let platforms = new Set<String>();\r\n        let seenIDs = new Set<String>();\r\n        for (let bundle of stixBundles) {\r\n            let techniqueSDOs = [];\r\n            let matrixSDOs = [];\r\n            let idToTechniqueSDO = new Map<string, any>();\r\n            let idToTacticSDO = new Map<string, any>();\r\n            for (let sdo of bundle.objects) { //iterate through stix domain objects in the bundle\r\n                // Filter out object not included in this domain if domains field is available\r\n                if (!domain.isCustom) {\r\n                    if (\"x_mitre_domains\" in sdo && sdo.x_mitre_domains.length > 0 && !sdo.x_mitre_domains.includes(domain.domain_identifier)) continue;\r\n                }\r\n\r\n                // filter out duplicates\r\n                if (!seenIDs.has(sdo.id)) seenIDs.add(sdo.id)\r\n                else continue;\r\n\r\n                // parse according to type\r\n                switch (sdo.type) {\r\n                    case \"x-mitre-data-component\":\r\n                        domain.dataComponents.push(new DataComponent(sdo, this));\r\n                        break;\r\n                    case \"x-mitre-data-source\":\r\n                        domain.dataSources.set(sdo.id, { name: sdo.name, external_references: sdo.external_references });\r\n                        break;\r\n                    case \"intrusion-set\":\r\n                        domain.groups.push(new Group(sdo, this));\r\n                        break;\r\n                    case \"malware\":\r\n                    case \"tool\":\r\n                        domain.software.push(new Software(sdo, this));\r\n                        break;\r\n                    case \"campaign\":\r\n                        domain.campaigns.push(new Campaign(sdo, this));\r\n                        break;\r\n                    case \"course-of-action\":\r\n                        domain.mitigations.push(new Mitigation(sdo, this));\r\n                        break;\r\n                    case \"relationship\":\r\n                        if (sdo.relationship_type == \"subtechnique-of\" && this.subtechniquesEnabled) {\r\n                            // record subtechnique:technique relationship\r\n                            if (domain.relationships[\"subtechniques_of\"].has(sdo.target_ref)) {\r\n                                let ids = domain.relationships[\"subtechniques_of\"].get(sdo.target_ref);\r\n                                ids.push(sdo.source_ref);\r\n                            } else {\r\n                                domain.relationships[\"subtechniques_of\"].set(sdo.target_ref, [sdo.source_ref])\r\n                            }\r\n                        } else if (sdo.relationship_type == \"uses\") {\r\n                            if (sdo.source_ref.startsWith(\"intrusion-set\") && sdo.target_ref.startsWith(\"attack-pattern\")) {\r\n                                // record group:technique relationship\r\n                                if (domain.relationships[\"group_uses\"].has(sdo.source_ref)) {\r\n                                    let ids = domain.relationships[\"group_uses\"].get(sdo.source_ref);\r\n                                    ids.push(sdo.target_ref);\r\n                                } else {\r\n                                    domain.relationships[\"group_uses\"].set(sdo.source_ref, [sdo.target_ref])\r\n                                }\r\n                            } else if ((sdo.source_ref.startsWith(\"malware\") || sdo.source_ref.startsWith(\"tool\")) && sdo.target_ref.startsWith(\"attack-pattern\")) {\r\n                                // record software:technique relationship\r\n                                if (domain.relationships[\"software_uses\"].has(sdo.source_ref)) {\r\n                                    let ids = domain.relationships[\"software_uses\"].get(sdo.source_ref);\r\n                                    ids.push(sdo.target_ref);\r\n                                } else {\r\n                                    domain.relationships[\"software_uses\"].set(sdo.source_ref, [sdo.target_ref])\r\n                                }\r\n                            } else if (sdo.source_ref.startsWith(\"campaign\") && sdo.target_ref.startsWith(\"attack-pattern\")) {\r\n                                // record campaign:technique relationship\r\n                                if (domain.relationships[\"campaign_uses\"].has(sdo.source_ref)) {\r\n                                    let ids = domain.relationships[\"campaign_uses\"].get(sdo.source_ref);\r\n                                    ids.push(sdo.target_ref);\r\n                                } else {\r\n                                    domain.relationships[\"campaign_uses\"].set(sdo.source_ref, [sdo.target_ref])\r\n                                }\r\n                            }\r\n                        } else if (sdo.relationship_type == \"mitigates\") {\r\n                            if (domain.relationships[\"mitigates\"].has(sdo.source_ref)) {\r\n                                let ids = domain.relationships[\"mitigates\"].get(sdo.source_ref);\r\n                                ids.push(sdo.target_ref);\r\n                            } else {\r\n                                domain.relationships[\"mitigates\"].set(sdo.source_ref, [sdo.target_ref])\r\n                            }\r\n                        } else if (sdo.relationship_type == 'revoked-by') {\r\n                            // record stix object: stix object relationship\r\n                            domain.relationships[\"revoked_by\"].set(sdo.source_ref, sdo.target_ref)\r\n                        } else if (sdo.relationship_type === 'detects') {\r\n                            if (domain.relationships[\"component_rel\"].has(sdo.source_ref)) {\r\n                                let ids = domain.relationships[\"component_rel\"].get(sdo.source_ref);\r\n                                ids.push(sdo.target_ref);\r\n                            } else {\r\n                                domain.relationships[\"component_rel\"].set(sdo.source_ref, [sdo.target_ref])\r\n                            }\r\n                        } else if (sdo.relationship_type == \"attributed-to\") {\r\n                            if (domain.relationships[\"campaigns_attributed_to\"].has(sdo.target_ref)) {\r\n                                let ids = domain.relationships[\"campaigns_attributed_to\"].get(sdo.target_ref);\r\n                                ids.push(sdo.source_ref);\r\n                            } else {\r\n                                domain.relationships[\"campaigns_attributed_to\"].set(sdo.target_ref, [sdo.source_ref]); // group -> [campaigns]\r\n                            }\r\n                        }\r\n                        break;\r\n                    case \"attack-pattern\":\r\n                        idToTechniqueSDO.set(sdo.id, sdo);\r\n                        if (!sdo.x_mitre_is_subtechnique) {\r\n                            techniqueSDOs.push(sdo);\r\n                        }\r\n                        break;\r\n                    case \"x-mitre-tactic\":\r\n                        idToTacticSDO.set(sdo.id, sdo);\r\n                        break;\r\n                    case \"x-mitre-matrix\":\r\n                        matrixSDOs.push(sdo);\r\n                        break;\r\n                    case \"note\":\r\n                        domain.notes.push(new Note(sdo));\r\n                        break;\r\n                }\r\n            }\r\n\r\n            //create techniques\r\n            for (let techniqueSDO of techniqueSDOs) {\r\n                let subtechniques: Technique[] = [];\r\n                if (this.subtechniquesEnabled) {\r\n                    if (domain.relationships.subtechniques_of.has(techniqueSDO.id)) {\r\n                        domain.relationships.subtechniques_of.get(techniqueSDO.id).forEach((sub_id) => {\r\n                            if (idToTechniqueSDO.has(sub_id)) {\r\n                                let subtechnique = new Technique(idToTechniqueSDO.get(sub_id), [], this);\r\n                                subtechniques.push(subtechnique);\r\n                                domain.subtechniques.push(subtechnique);\r\n                            }\r\n                            // else the target was revoked or deprecated and we can skip honoring the relationship\r\n                        })\r\n                    }\r\n                }\r\n                domain.techniques.push(new Technique(techniqueSDO, subtechniques, this));\r\n            }\r\n\r\n            //create matrices, which also creates tactics and filters techniques\r\n            for (let matrixSDO of matrixSDOs) {\r\n                if (matrixSDO.x_mitre_deprecated) continue;\r\n                domain.matrices.push(new Matrix(matrixSDO, idToTacticSDO, domain.techniques, this));\r\n            }\r\n\r\n            // parse platforms\r\n            for (let technique of domain.techniques) {\r\n                if (technique.platforms) {\r\n                    for (let platform of technique.platforms) {\r\n                        platforms.add(platform)\r\n                    }\r\n                }\r\n            }\r\n            for (let subtechnique of domain.subtechniques) {\r\n                for (let platform of subtechnique.platforms) {\r\n                    platforms.add(platform)\r\n                }\r\n            }\r\n        }\r\n        domain.platforms = Array.from(platforms); // convert to array\r\n\r\n        // data loading complete; update watchers\r\n        domain.dataLoaded = true;\r\n        for (let callback of domain.dataLoadedCallbacks) {\r\n            callback();\r\n        }\r\n    }\r\n\r\n    // Observable for data in config.json\r\n    private configData$: Observable<Object>;\r\n\r\n    // Observable for data\r\n    private domainData$: Observable<Object>;\r\n\r\n    // URLs in case config file doesn't load properly\r\n    private latestVersion: Version = { name: \"ATT&CK v12\", number: \"12\" };\r\n    private lowestSupportedVersion: Version;\r\n    private enterpriseAttackURL: string = \"https://raw.githubusercontent.com/mitre/cti/master/enterprise-attack/enterprise-attack.json\";\r\n    private mobileAttackURL: string = \"https://raw.githubusercontent.com/mitre/cti/master/mobile-attack/mobile-attack.json\";\r\n    private icsAttackURL: string = \"https://raw.githubusercontent.com/mitre/cti/master/ics-attack/ics-attack.json\";\r\n\r\n    /**\r\n     * Set up the URLs for data\r\n     * @param {versions} list of versions and domains defined in the configuration file\r\n     * @memberof DataService\r\n     */\r\n    setUpURLs(versions: []) {\r\n        versions.forEach((version: any) => {\r\n            let v: Version = new Version(version[\"name\"], version[\"version\"].match(/[0-9]+/g)[0]);\r\n            this.versions.push(v);\r\n            version[\"domains\"].forEach((domain: any) => {\r\n                let identifier = domain[\"identifier\"];\r\n                let domainObject = new Domain(identifier, domain[\"name\"], v);\r\n                if (version[\"authentication\"]) domainObject.authentication = version[\"authentication\"];\r\n                if (domain[\"taxii_url\"] && domain[\"taxii_collection\"]) {\r\n                    domainObject.taxii_url = domain[\"taxii_url\"];\r\n                    domainObject.taxii_collection = domain[\"taxii_collection\"];\r\n                } else {\r\n                    domainObject.urls = domain[\"data\"];\r\n                }\r\n                this.domains.push(domainObject);\r\n            });\r\n        });\r\n\r\n        if (this.domains.length == 0) { // issue loading config\r\n            this.versions.push(this.latestVersion);\r\n            let enterpriseDomain = new Domain(\"enterprise-attack\", \"Enterprise\", this.latestVersion, [this.enterpriseAttackURL]);\r\n            let mobileDomain = new Domain(\"mobile-attack\", \"Mobile\", this.latestVersion, [this.mobileAttackURL]);\r\n            let icsDomain = new Domain(\"ics-attack\", \"ICS\", this.latestVersion, [this.icsAttackURL]);\r\n            this.domains.push(...[enterpriseDomain, mobileDomain, icsDomain]);\r\n        }\r\n\r\n        this.lowestSupportedVersion = this.versions[this.versions.length-1];\r\n    }\r\n\r\n    /**\r\n     * get the current config\r\n     * @param {boolean} refresh: if true fetches the config from file. Otherwise, only fetches if it's never been fetched before\r\n     */\r\n    getConfig(refresh: boolean = false) {\r\n        if (refresh || !this.configData$) {\r\n            this.configData$ = this.http.get(\"./assets/config.json\");\r\n        }\r\n        return this.configData$;\r\n    }\r\n\r\n    /**\r\n     * Fetch the domain data from the endpoint\r\n     */\r\n    getDomainData(domain: Domain, refresh: boolean = false): Observable<Object> {\r\n        if (domain.taxii_collection && domain.taxii_url) {\r\n            console.log(\"fetching data from TAXII server\");\r\n            let conn = new TaxiiConnect(domain.taxii_url, '', '', 5000);\r\n            let collectionInfo: any = {\r\n                'id': domain.taxii_collection,\r\n                'title': domain.name,\r\n                'description': '',\r\n                'can_read': true,\r\n                'can_write': false,\r\n                'media_types': ['application/vnd.oasis.stix+json']\r\n            }\r\n            const collection = new Collection(collectionInfo, domain.taxii_url + 'stix', conn);\r\n            this.domainData$ = Observable.forkJoin(fromPromise(collection.getObjects('', undefined)));\r\n        } else if (refresh || !this.domainData$) {\r\n            console.log(\"retrieving data\", domain.urls)\r\n            let bundleData = [];\r\n            const httpOptions = {\r\n                headers: undefined\r\n            }\r\n            if (domain.authentication && domain.authentication.enabled) { // include authorization header, if configured (integrations)\r\n                let token = `${domain.authentication.serviceName}:${domain.authentication.apiKey}`;\r\n                httpOptions.headers = new HttpHeaders({ 'Authorization': 'Basic ' + Buffer.from(token).toString('base64')})\r\n            }\r\n            domain.urls.forEach((url) => {\r\n                bundleData.push(this.http.get(url, httpOptions));\r\n            });\r\n            this.domainData$ = Observable.forkJoin(bundleData);\r\n        }\r\n        return this.domainData$;\r\n    }\r\n\r\n    /**\r\n     * Load and parse domain data\r\n     */\r\n    loadDomainData(domainVersionID: string, refresh: boolean = false): Promise<any> {\r\n        let dataPromise: Promise<any> = new Promise((resolve, reject) => {\r\n            let domain = this.getDomain(domainVersionID);\r\n            if (domain.dataLoaded && !refresh) resolve(null);\r\n            if (domain) {\r\n                let subscription = this.getDomainData(domain, refresh).subscribe({\r\n                    next: (data: Object[]) => {\r\n                        this.parseBundle(domain, data);\r\n                        resolve(null);\r\n                    },\r\n                    complete: () => { if (subscription) subscription.unsubscribe(); } //prevent memory leaks\r\n                });\r\n            } else if (!domain) { // domain not defined in config\r\n                reject(\"'\" + domainVersionID + \"' is not a valid domain & version.\")\r\n            }\r\n        });\r\n        return dataPromise;\r\n    }\r\n\r\n    /**\r\n     * Get domain object by domain ID\r\n     */\r\n    getDomain(domainVersionID: string): Domain {\r\n        return this.domains.find((d) => d.id === domainVersionID);\r\n    }\r\n\r\n    /**\r\n     * Get the ID from domain name & version\r\n     */\r\n    getDomainVersionID(domain: string, versionNumber: string): string {\r\n        if (!versionNumber) { // layer with no specified version defaults to current version\r\n            versionNumber = this.versions[0].number;\r\n        }\r\n        return domain + '-' + versionNumber;\r\n    }\r\n\r\n    /**\r\n     * Retrieve the technique object with the given attackID in the given domain/version\r\n     */\r\n    getTechnique(attackID: string, domainVersionID: string) {\r\n        let domain = this.getDomain(domainVersionID);\r\n        let all_techniques = domain.techniques.concat(domain.subtechniques);\r\n        return all_techniques.find(t => t.attackID == attackID);\r\n    }\r\n\r\n    /**\r\n     * Retrieves the first version defined in the config file\r\n     */\r\n    getCurrentVersion() {\r\n        return this.domains[0].version;\r\n    }\r\n\r\n    /**\r\n     * Is the given version supported?\r\n     */\r\n    isSupported(version: string) {\r\n        let supported = this.versions.map(v => v.number);\r\n        let match = version.match(/[0-9]+/g)[0];\r\n        return supported.includes(match);\r\n    }\r\n\r\n    /**\r\n     * Compares techniques between two ATT&CK versions and returns a set of object changes\r\n     * @param oldDomainVersionID imported layer domain & version to upgrade from\r\n     * @param newDomainVersionID latest ATT&CK domain & version to upgrade to\r\n     */\r\n    public compareVersions(oldDomainVersionID: string, newDomainVersionID: string): VersionChangelog {\r\n        let changelog = new VersionChangelog(oldDomainVersionID, newDomainVersionID);\r\n        let oldDomain = this.getDomain(oldDomainVersionID);\r\n        let newDomain = this.getDomain(newDomainVersionID);\r\n\r\n        let previousTechniques = oldDomain.techniques.concat(oldDomain.subtechniques);\r\n        let latestTechniques = newDomain.techniques.concat(newDomain.subtechniques);\r\n\r\n        // object lookup to increase efficiency\r\n        let objectLookup = new Map<string, Technique>(\r\n            latestTechniques.map(technique => [technique.id, previousTechniques.find(p => p.id == technique.id)])\r\n        );\r\n\r\n        for (let latestTechnique of latestTechniques) {\r\n            if (!latestTechnique) continue;\r\n\r\n            let prevTechnique = objectLookup.get(latestTechnique.id);\r\n            if (!prevTechnique) {\r\n                // object doesn't exist in previous version, added to latest version\r\n                changelog.additions.push(latestTechnique.attackID);\r\n            }\r\n            else if (latestTechnique.modified == prevTechnique.modified) {\r\n                if (prevTechnique.revoked || prevTechnique.deprecated) {\r\n                    // object is revoked or deprecated, ignore\r\n                    continue;\r\n                } else {\r\n                    // no changes made to the object\r\n                    changelog.unchanged.push(latestTechnique.attackID);\r\n                }\r\n            } else {\r\n                // changes were made to the object\r\n                if (latestTechnique.revoked && !prevTechnique.revoked) {\r\n                    // object was revoked since the previous version\r\n                    changelog.revocations.push(latestTechnique.attackID);\r\n                } else if (latestTechnique.revoked && prevTechnique.revoked) {\r\n                    // both objects are revoked, ignore\r\n                    continue;\r\n                } else if (latestTechnique.deprecated && !prevTechnique.deprecated) {\r\n                    // object was deprecated since the previous version\r\n                    changelog.deprecations.push(latestTechnique.attackID);\r\n                } else if (latestTechnique.deprecated && prevTechnique.deprecated) {\r\n                    // both objects are deprecated, ignore\r\n                    continue;\r\n                } else if (latestTechnique.compareVersion(prevTechnique) != 0) {\r\n                    // version number changed\r\n                    changelog.changes.push(latestTechnique.attackID);\r\n                } else { // minor change\r\n                    changelog.minor_changes.push(latestTechnique.attackID);\r\n                }\r\n            }\r\n        }\r\n        return changelog;\r\n    }\r\n}\r\n\r\n/**\r\n * Common attributes for STIX objects\r\n */\r\nexport abstract class BaseStix {\r\n    public readonly id: string;          // STIX ID\r\n    public readonly attackID: string;    // ATT&CK ID\r\n    public readonly name: string;        // name of object\r\n    public readonly description: string; // description of object\r\n    public readonly url: string;         // URL of object on the ATT&CK website\r\n    public readonly created: string;     // date object was created\r\n    public readonly modified: string;    // date object was last modified\r\n    public readonly revoked: boolean;    // is the object revoked?\r\n    public readonly deprecated: boolean; // is the object deprecated?\r\n    public readonly version: string;     // object version\r\n    protected readonly dataService: DataService;\r\n    constructor(stixSDO: any, dataService: DataService, supportsAttackID = true) {\r\n        this.id = stixSDO.id;\r\n        if (supportsAttackID) {\r\n            if (stixSDO.external_references && stixSDO.external_references[0] && stixSDO.external_references[0].external_id) this.attackID = stixSDO.external_references[0].external_id; else {\r\n                alert('Error: external_references has invalid format in imported BaseStix object (ID: ' + stixSDO.id + ')');\r\n                throw new Error('Error: external_references has invalid format in imported BaseStix object. Read more here: https://docs.oasis-open.org/cti/stix/v2.1/os/stix-v2.1-os.html#_72bcfr3t79jx');\r\n            }\r\n        }\r\n        this.name = stixSDO.name;\r\n        this.description = stixSDO.description;\r\n        if (stixSDO.id.includes(\"x-mitre-data-component\")) {\r\n            this.attackID = '';\r\n        } else if (stixSDO.external_references && stixSDO.external_references[0] && stixSDO.external_references[0].external_id) {\r\n            this.attackID = stixSDO.external_references[0].external_id;\r\n        } else {\r\n            alert('Error: external_references has invalid format in imported BaseStix object (ID: ' + stixSDO.id + ')');\r\n            throw new Error('Error: external_references has invalid format in imported BaseStix object. Read more here: https://docs.oasis-open.org/cti/stix/v2.1/os/stix-v2.1-os.html#_72bcfr3t79jx');\r\n        }\r\n        if (\"external_references\" in stixSDO && stixSDO.external_references.length > 0) {\r\n            this.url = stixSDO.external_references[0].url;\r\n        } else {\r\n            this.url = \"\";\r\n        }\r\n        this.created = stixSDO.created;\r\n        this.modified = stixSDO.modified;\r\n        this.revoked = stixSDO.revoked ? stixSDO.revoked : false;\r\n        this.deprecated = stixSDO.x_mitre_deprecated ? stixSDO.x_mitre_deprecated : false;\r\n        this.version = stixSDO.x_mitre_version ? stixSDO.x_mitre_version : '';\r\n        this.dataService = dataService;\r\n    }\r\n\r\n    /**\r\n     * Compare this object's version number to another object's version number\r\n     * @param that the object to compare to\r\n     * @returns 0 if the objects have the same version,\r\n     *          > 0 if this object's version is greater,\r\n     *          < 0 if that object's version is greater\r\n     */\r\n    public compareVersion(that: BaseStix): number {\r\n        if (!this.version || !that.version) return 0; // one or both of the objects have no version\r\n\r\n        let thisVersion = this.version.split('.');\r\n        let thatVersion = that.version.split('.');\r\n\r\n        for (let i = 0; i < Math.max(thisVersion.length, thatVersion.length); i++) {\r\n            if (thisVersion.length == thatVersion.length && thisVersion.length < i) return 0;\r\n            if (thisVersion.length < i) return -1;\r\n            if (thatVersion.length < i) return 1;\r\n            if (+thisVersion[i] == +thatVersion[i]) continue;\r\n            return +thisVersion[i] - +thatVersion[i];\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    /**\r\n     * get the stix object that this object is revoked by\r\n     * @param {string} domainVersionID the ID of the domain & version this object is found in\r\n     * @returns {string} object ID this object is revoked by\r\n     */\r\n    public revoked_by(domainVersionID): string {\r\n        let rels = this.dataService.getDomain(domainVersionID).relationships.revoked_by;\r\n        if (rels.has(this.id)) return rels.get(this.id);\r\n        else return undefined;\r\n    }\r\n}\r\n\r\n/**\r\n * Object representing an ATT&CK matrix (x-mitre-matrix)\r\n */\r\nexport class Matrix extends BaseStix {\r\n    public readonly tactics: Tactic[]; //tactics found under this Matrix\r\n    /**\r\n     * Creates an instance of Matrix.\r\n     * @param {*} stixSDO for the matrix\r\n     * @param {Map<string, any>} idToTacticSDO map of tactic ID to tactic SDO\r\n     * @param {Technique[]} techniques all techniques defined in the domain\r\n     */\r\n    constructor(stixSDO: any, idToTacticSDO: Map<string, any>, techniques: Technique[], dataService: DataService) {\r\n        super(stixSDO, dataService);\r\n        this.tactics = stixSDO.tactic_refs\r\n          .map(tacticID => idToTacticSDO.get(tacticID))  // Get tacticSDOs\r\n          .filter(tacticSDO => tacticSDO)                // Filter out nulls (tacticSDO not found)\r\n          .map(tacticSDO => new Tactic(tacticSDO, techniques, this.dataService));  // Create Tactic objects\r\n    }\r\n}\r\n\r\n/**\r\n * Object representing a Tactic (x-mitre-tactic) in the ATT&CK matrix\r\n */\r\nexport class Tactic extends BaseStix {\r\n    public readonly techniques: Technique[];  // techniques found under this tactic\r\n    public readonly shortname: string;        // shortname property, AKA phase-name for techniques' kill-chain phases\r\n    /**\r\n     * Creates an instance of Tactic.\r\n     * @param {*} stixSDO for the tactic\r\n     * @param {Technique[]} techniques all techniques in the domain\r\n     */\r\n    constructor(stixSDO: any, techniques: Technique[], dataService: DataService) {\r\n        super(stixSDO, dataService);\r\n        this.shortname = stixSDO.x_mitre_shortname;\r\n        this.techniques = techniques.filter((technique: Technique) => {\r\n            if (!technique.revoked && !technique.deprecated)\r\n                return technique.tactics.includes(this.shortname)\r\n        });\r\n    }\r\n}\r\n/**\r\n * Object representing a Technique (attack-pattern) in the ATT&CK matrix\r\n */\r\nexport class Technique extends BaseStix {\r\n    public readonly platforms: string[];        // platforms for this technique.\r\n    public readonly tactics: string[];          // tactics this technique is found under in phase-name format\r\n    public readonly subtechniques: Technique[]; // subtechniques under this technique\r\n    public readonly datasources: string;        // data sources of the technique\r\n    public parent: Technique = null;            // parent technique. Only present if it's a sub-technique\r\n    public get isSubtechnique() { return this.parent != null; }\r\n    /**\r\n     * Creates an instance of Technique.\r\n     * @param {*} stixSDO for the technique\r\n     * @param {Technique[]} subtechniques occuring under the technique\r\n     */\r\n    constructor(stixSDO: any, subtechniques: Technique[], dataService: DataService) {\r\n        super(stixSDO, dataService);\r\n        this.platforms = stixSDO.x_mitre_platforms ? stixSDO.x_mitre_platforms.map(platform => platform.trim()) : undefined;\r\n        this.datasources = stixSDO.x_mitre_data_sources ? stixSDO.x_mitre_data_sources.toString() : \"\";\r\n\r\n        if (!this.revoked && !this.deprecated) {\r\n            this.tactics = stixSDO.kill_chain_phases.map((phase) => phase.phase_name);\r\n        }\r\n\r\n        this.subtechniques = subtechniques.filter(sub => !(sub.deprecated || sub.revoked));\r\n        for (let subtechnique of this.subtechniques) {\r\n            subtechnique.parent = this;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Get an ID identifying this technique under a specific tactic\r\n     * @param {string|Tactic} tactic tactic name in phase-name/shortname format, or a Tactic object itself\r\n     * @returns {string} ID for this technique under that tactic\r\n     */\r\n    public get_technique_tactic_id(tactic: string | Tactic): string {\r\n        let tactic_shortname = tactic instanceof Tactic ? tactic.shortname : tactic;\r\n        if (!this.tactics.includes(tactic_shortname)) {\r\n            throw new Error(tactic_shortname + \" is not a tactic of \" + this.attackID);\r\n        }\r\n        return this.attackID + \"^\" + tactic_shortname;\r\n    }\r\n\r\n    /**\r\n     * Get all possible IDs identifying this technique under tactics\r\n     * Basically the same as calling get_technique_tactic_id with all valid tactic values\r\n     */\r\n    public get_all_technique_tactic_ids(): string[] {\r\n        if (this.revoked || this.deprecated) return [];\r\n        return this.tactics.map((shortname: string) => this.get_technique_tactic_id(shortname));\r\n    }\r\n}\r\n\r\nexport class VersionChangelog {\r\n    public oldDomainVersionID: string;\r\n    public newDomainVersionID: string;\r\n    public additions: string[] = []; // new objects added to newest version\r\n    public changes: string[] = []; // object changes between versions\r\n    public minor_changes: string[] = []; // changes to objects without version increments\r\n    public deprecations: string[] = []; // objects deprecated since older version\r\n    public revocations: string[] = []; // objects revoked since older version\r\n    public unchanged: string[] = []; // objects which have not changed between versions\r\n\r\n    public reviewed = new Set<string>();\r\n    public copied = new Set<string>();\r\n\r\n    constructor(oldDomainVersionID: string, newDomainVersionID: string) {\r\n        this.oldDomainVersionID = oldDomainVersionID;\r\n        this.newDomainVersionID = newDomainVersionID;\r\n    }\r\n\r\n    public length(): number {\r\n        return this.additions.length\r\n            + this.changes.length\r\n            + this.minor_changes.length\r\n            + this.deprecations.length\r\n            + this.revocations.length\r\n            + this.unchanged.length;\r\n    }\r\n}\r\n\r\n/**\r\n * Object representing a Data Component in the ATT&CK catalogue\r\n */\r\nexport class DataComponent extends BaseStix {\r\n    public readonly url: string;\r\n    public readonly dataSource: string;\r\n    /**\r\n     * get techniques related to this data component\r\n     * @returns {string[]} technique IDs used by this data component\r\n     */\r\n    public techniques(domainVersionID): string[] {\r\n        const techniques = [];\r\n        const domain = this.dataService.getDomain(domainVersionID);\r\n        let rels = domain.relationships.component_rel;\r\n        if (rels.has(this.id)) {\r\n            rels.get(this.id).forEach((targetID) => {\r\n                const t = domain.techniques.find((t) => t.id === targetID);\r\n                if (t) techniques.push(t);\r\n            })\r\n        }\r\n        return techniques;\r\n    }\r\n    /**\r\n     * get data source related to this data component\r\n     * @returns {name: string, url: string} name, and first url of data source referenced by this data component\r\n     */\r\n    public source(domainVersionID) {\r\n        const dataSources = this.dataService.getDomain(domainVersionID).dataSources;\r\n        if (dataSources.has(this.dataSource)) {\r\n            const source = dataSources.get(this.dataSource);\r\n            let url = \"\";\r\n            if (source.external_references && source.external_references[0] && source.external_references[0].url)\r\n                url = source.external_references[0].url;\r\n            return { name: source.name, url: url };\r\n        }\r\n        else return { name: '', url: '' };\r\n    }\r\n\r\n    constructor(stixSDO: any, dataService: DataService) {\r\n        super(stixSDO, dataService, false);\r\n        this.dataSource = stixSDO.x_mitre_data_source_ref;\r\n    }\r\n}\r\n\r\n/**\r\n * Object representing a Software (tool, malware) in the ATT&CK catalogue\r\n */\r\nexport class Software extends BaseStix {\r\n    public readonly platforms: string[] = []; //platforms for this software\r\n\r\n    /**\r\n     * Creates an instance of Software.\r\n     * @param {*} stixSDO for the software\r\n     * @param {DataService} DataService the software occurs within\r\n    */\r\n    constructor(stixSDO: any, dataService: DataService) {\r\n        super(stixSDO, dataService);\r\n        this.platforms = stixSDO.x_mitre_platforms ? stixSDO.x_mitre_platforms.map(platform => platform.trim()) : undefined;\r\n    }\r\n\r\n    /**\r\n     * get techniques used by this software\r\n     * @returns {string[]} technique IDs used by this software\r\n     */\r\n    public used(domainVersionID): string[] {\r\n        let rels = this.dataService.getDomain(domainVersionID).relationships.software_uses;\r\n        if (rels.has(this.id)) return rels.get(this.id);\r\n        else return [];\r\n    }\r\n    /**\r\n     * Return all related techniques\r\n     */\r\n    public relatedTechniques(domainVersionID): string[] {\r\n        return this.used(domainVersionID);\r\n    }\r\n}\r\n\r\n/**\r\n * Object representing a Group (intrusion-set) in the ATT&CK catalogue\r\n */\r\nexport class Group extends BaseStix {\r\n    /**\r\n     * get techniques used by this group\r\n     * @returns {string[]} technique IDs used by this group\r\n     */\r\n    public used(domainVersionID): string[] {\r\n        let rels = this.dataService.getDomain(domainVersionID).relationships.group_uses;\r\n        if (rels.has(this.id)) return rels.get(this.id);\r\n        else return [];\r\n    }\r\n    /**\r\n     * get techniques used by campaigns attributed to this group\r\n     * @returns {string[]} technique IDs used by campaigns attributed to this group\r\n     */\r\n    public campaignsUsed(domainVersionID): string[] {\r\n        // get campaigns attributed to groups\r\n        let attributedCampaigns = this.dataService.getDomain(domainVersionID).relationships.campaigns_attributed_to;\r\n        // get techniques used by campaigns\r\n        let rels = this.dataService.getDomain(domainVersionID).relationships.campaign_uses;\r\n        if (attributedCampaigns.has(this.id)) {\r\n            // get set of techniques used by attributed campaigns\r\n            let techniques = [];\r\n            attributedCampaigns.get(this.id).forEach(campaign_id => {\r\n                if (rels.has(campaign_id)) techniques = techniques.concat(rels.get(campaign_id))\r\n            });\r\n            return techniques;\r\n        } else return []; // no attributed campaigns\r\n\r\n    }\r\n    /**\r\n     * Return all related techniques\r\n     */\r\n    public relatedTechniques(domainVersionID): string[] {\r\n        let usedSet = new Set(this.used(domainVersionID).concat(this.campaignsUsed(domainVersionID)));\r\n        return Array.from(usedSet);\r\n    }\r\n}\r\n\r\n/**\r\n * Object representing a Mitigation (course-of-action) in the ATT&CK catalogue\r\n */\r\nexport class Mitigation extends BaseStix {\r\n    /**\r\n     * get techniques mitigated by this mitigation\r\n     * @returns {string[]} list of technique IDs\r\n     */\r\n    public mitigated(domainVersionID): string[] {\r\n        let rels = this.dataService.getDomain(domainVersionID).relationships.mitigates;\r\n        if (rels.has(this.id)) {\r\n            return rels.get(this.id);\r\n        }\r\n        else return [];\r\n    }\r\n    /**\r\n     * Return all related techniques\r\n     */\r\n    public relatedTechniques(domainVersionID): string[] {\r\n        return this.mitigated(domainVersionID);\r\n    }\r\n}\r\n\r\nexport class Campaign extends BaseStix {\r\n    /**\r\n     * get techniques used by this campaign\r\n     * @returns {string[]} technique IDs used by this campaign\r\n     */\r\n     public used(domainVersionID): string[] {\r\n        let rels = this.dataService.getDomain(domainVersionID).relationships.campaign_uses;\r\n        if (rels.has(this.id)) return rels.get(this.id);\r\n        else return [];\r\n    }\r\n\r\n    /**\r\n     * Return all related techniques\r\n     */\r\n     public relatedTechniques(domainVersionID): string[] {\r\n        return this.used(domainVersionID);\r\n    }\r\n}\r\n\r\nexport class Note {\r\n    public readonly abstract?: string; // brief summary of note content\r\n    public readonly content: string; // content of the note\r\n    public readonly object_refs: string[]; // list of STIX objects the note is applied to\r\n\r\n    /**\r\n     * Creates an instance of Note.\r\n     * @param {*} stixSDO for the note\r\n    */\r\n    constructor(stixSDO: any) {\r\n        if (stixSDO.abstract) this.abstract = stixSDO.abstract;\r\n        this.content = stixSDO.content;\r\n        this.object_refs = stixSDO.object_refs;\r\n    }\r\n}\r\n\r\nexport class Domain {\r\n    public readonly id: string; // domain ID\r\n    public readonly domain_identifier: string //domain ID without the version suffix\r\n    public readonly name: string; // domain display name\r\n    public readonly version: Version; // ATT&CK version\r\n\r\n    public urls: string[] = [];\r\n    public taxii_url: string = \"\";\r\n    public taxii_collection: string = \"\";\r\n    public authentication: ServiceAuth;\r\n    public dataLoaded: boolean = false;\r\n    public dataLoadedCallbacks: any[] = [];\r\n    // this should only be enabled if the user loads custom data via URL\r\n    public isCustom: boolean = false;\r\n\r\n    public matrices: Matrix[] = [];\r\n\r\n    public get tactics(): Tactic[] {\r\n        let tactics = [];\r\n        for (let matrix of this.matrices) {\r\n            tactics = tactics.concat(matrix.tactics);\r\n        }\r\n        return tactics;\r\n    }\r\n    public techniques: Technique[] = [];\r\n    public platforms: String[] = []; // platforms defined on techniques and software of the domain\r\n    public subtechniques: Technique[] = [];\r\n    public software: Software[] = [];\r\n    public campaigns: Campaign[] = [];\r\n    public dataComponents: DataComponent[] = [];\r\n    public dataSources = new Map<string, { name: string, external_references: any[] }>(); // Map data source ID to name and urls to be used by data components\r\n    public groups: Group[] = [];\r\n    public mitigations: Mitigation[] = [];\r\n    public notes: Note[] = [];\r\n    public relationships: any = {\r\n        // subtechnique subtechnique-of technique\r\n        // ID of technique to [] of subtechnique IDs\r\n        subtechniques_of: new Map<string, string[]>(),\r\n        // data component related to technique\r\n        // ID of data component to [] of technique IDs\r\n        component_rel: new Map<string, string[]>(),\r\n        // group uses technique\r\n        // ID of group to [] of technique IDs\r\n        group_uses: new Map<string, string[]>(),\r\n        // software uses technique\r\n        // ID of software to [] of technique IDs\r\n        software_uses: new Map<string, string[]>(),\r\n        // campaign uses technique\r\n        // ID of campaign to [] of technique IDs\r\n        campaign_uses: new Map<string, string[]>(),\r\n        // campaigns attributed to group\r\n        // ID of group to [] of campaign IDs\r\n        campaigns_attributed_to: new Map<string, string[]>(),\r\n        // mitigation mitigates technique\r\n        // ID of mitigation to [] of technique IDs\r\n        mitigates: new Map<string, string[]>(),\r\n        // object is revoked-by object\r\n        // ID of object to ID of revoking object\r\n        revoked_by: new Map<string, string>()\r\n    }\r\n\r\n    constructor(domain_identifier: string, name: string, version: Version, urls?: string[]) {\r\n        this.id = `${domain_identifier}-${version.number}`;\r\n        this.domain_identifier = domain_identifier;\r\n        this.name = name;\r\n        this.version = version;\r\n        if (urls) this.urls = urls;\r\n    }\r\n\r\n    /**\r\n     * Get the version number for this domain\r\n     */\r\n    getVersion(): string {\r\n        return this.version.number;\r\n    }\r\n}\r\nexport class Version {\r\n    public readonly name: string;\r\n    public readonly number: string;\r\n\r\n    /**\r\n     * Creates an instance of Version\r\n     * @param name version name\r\n     * @param number version number\r\n     */\r\n    constructor(name: string, number: string) {\r\n        this.name = name;\r\n        this.number = number;\r\n    }\r\n}\r\n\r\nexport interface ServiceAuth {\r\n    enabled: boolean;\r\n    serviceName: string;\r\n    apiKey: string;\r\n}\r\n","import { Component, ViewChild, HostListener, OnInit } from '@angular/core';\r\nimport { Title } from '@angular/platform-browser';\r\nimport { TabsComponent } from './tabs/tabs.component';\r\nimport { ConfigService } from './config.service';\r\nimport * as globals from \"./globals\";\r\nimport { IconsService } from \"./icons.service\";\r\nimport { deleteCookie, getCookie, hasCookie, setCookie } from \"./cookies\";\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss'],\r\n})\r\nexport class AppComponent implements OnInit {\r\n  @ViewChild(TabsComponent) tabsComponent;\r\n\r\n  nav_version: string = globals.nav_version;\r\n  public user_theme: string;\r\n  title = 'ATT&CK® Navigator';\r\n\r\n  @HostListener('window:beforeunload', ['$event'])\r\n  promptNavAway($event) {\r\n    if (!this.configService.getFeature('leave_site_dialog')) return;\r\n    //this text only shows in the data, not visible to user as far as I can tell\r\n    //however, if it's not included the window doesn't open.\r\n    $event.returnValue = 'Are you sure you want to navigate away? Your data may be lost!';\r\n  }\r\n\r\n  constructor(public configService: ConfigService, private iconsService: IconsService, private titleService:Title) {\r\n    Array.prototype.includes = function (value): boolean {\r\n      for (let i = 0; i < this.length; i++) {\r\n        if (this[i] === value) return true\r\n      }\r\n      return false;\r\n    }\r\n    if (hasCookie(\"is_user_theme_dark\") && getCookie(\"is_user_theme_dark\") === \"true\") {\r\n      this.user_theme = 'theme-override-dark';\r\n    } else if (getCookie(\"is_user_theme_dark\") === 'false') {\r\n      this.user_theme = 'theme-override-light';\r\n    }  else {\r\n      this.user_theme = 'theme-use-system';\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.iconsService.registerIcons();\r\n    this.titleService.setTitle(this.title);\r\n  }\r\n\r\n  themeChangeHandler(theme: string) {\r\n    if (theme === 'system') {\r\n      if (hasCookie(\"is_user_theme_dark\")) deleteCookie(\"is_user_theme_dark\");\r\n      this.user_theme = 'theme-use-system';\r\n    }\r\n    else {\r\n      this.user_theme = (theme === 'dark') ? 'theme-override-dark' : 'theme-override-light';\r\n      setCookie(\"is_user_theme_dark\", (theme === 'dark') ? \"true\" : \"false\", 180);\r\n    }\r\n  }\r\n}\r\n","<div [ngClass]=\"user_theme\">\r\n    <div class=\"app-container\">\r\n        <div class=\"nav-app\">\r\n            <tabs (onUserThemeChange)=\"themeChangeHandler($event)\" [userTheme]=\"user_theme\"></tabs>\r\n            <button class=\"version-footer\" (click)=\"tabsComponent.openDialog('changelog')\">MITRE ATT&CK&reg; Navigator\r\n                v{{nav_version}}</button>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { ViewModelsService } from '../viewmodels.service';\r\nimport { DataService } from '../data.service';\r\nimport * as globals from './../globals';\r\n\r\n@Component({\r\n    selector: 'app-version-upgrade',\r\n    templateUrl: './version-upgrade.component.html',\r\n    styleUrls: ['./version-upgrade.component.scss'],\r\n    providers: [ViewModelsService]\r\n})\r\nexport class VersionUpgradeComponent implements OnInit {\r\n\r\n    nav_version = globals.nav_version;\r\n    currVersion: string;\r\n    vmVersion: string;\r\n    layerName: string;\r\n\r\n    constructor(private dialogRef: MatDialogRef<VersionUpgradeComponent>, \r\n                public dataService: DataService,\r\n                private viewModelsService: ViewModelsService,\r\n                @Inject(MAT_DIALOG_DATA) public data) { }\r\n\r\n    ngOnInit() { \r\n        this.currVersion = this.data.currVersion;\r\n        this.vmVersion = this.data.vmVersion;\r\n        this.layerName = this.data.layerName;\r\n    }\r\n\r\n    upgradeVersion(upgrade: boolean) {\r\n        this.dialogRef.close({upgrade: upgrade});\r\n    }\r\n}\r\n","<div class=\"mat-dialog\">\r\n    <div>\r\n        <h3 mat-dialog-title>Upgrade layer version?</h3>\r\n        <mat-dialog-content>\r\n            <p>\r\n                The layer \"{{layerName}}\" uses an outdated version of ATT&CK (v{{vmVersion}}).\r\n                Do you want to open the workflow to upgrade this layer to ATT&CK v{{currVersion}}?\r\n                <em *ngIf=\"!this.dataService.isSupported(vmVersion)\">\r\n                    This version is not supported by Navigator v{{nav_version}} and must be upgraded for use.\r\n                </em>\r\n            </p>\r\n        </mat-dialog-content>\r\n    </div>\r\n\r\n    <div>\r\n        <mat-dialog-actions>\r\n            <button mat-button (click)=\"upgradeVersion(true)\">Yes</button>\r\n            <button mat-button (click)=\"upgradeVersion(false)\">No</button>\r\n        </mat-dialog-actions>\r\n    </div>\r\n</div>\r\n","import { Component, Inject, OnInit, Renderer2, ViewChild } from '@angular/core';\r\nimport { MAT_DIALOG_DATA, MatDialog } from \"@angular/material/dialog\";\r\nimport { MarkdownComponent, MarkdownService } from \"ngx-markdown\";\r\n\r\n@Component({\r\n  selector: 'app-changelog',\r\n  templateUrl: './changelog.component.html',\r\n  styleUrls: ['./changelog.component.scss']\r\n})\r\nexport class ChangelogComponent implements OnInit {\r\n  @ViewChild('markdownElement', {static: false}) private markdownElement: MarkdownComponent;\r\n\r\n  constructor(private dialog: MatDialog,\r\n              private markdownService: MarkdownService,\r\n              @Inject(MAT_DIALOG_DATA) public data) {}\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"changelog-dialog\">\r\n    <div class=\"content markdown\">\r\n        <markdown #markdownElement [src]=\"'./CHANGELOG.md'\"></markdown>\r\n    </div>\r\n    <div class=\"close-button\">\r\n        <button mat-button mat-dialog-close>close</button>\r\n    </div>\r\n</div>\r\n","import { Component, Input, OnInit, QueryList, ViewChild, ViewChildren, ViewEncapsulation } from '@angular/core';\r\nimport { ViewModel } from '../viewmodels.service';\r\nimport { DataService, Tactic, Technique, VersionChangelog } from '../data.service';\r\nimport { DndDropEvent } from 'ngx-drag-drop';\r\nimport { MatExpansionPanel } from '@angular/material/expansion';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatStepper } from '@angular/material/stepper';\r\n\r\n@Component({\r\n    selector: 'layer-upgrade',\r\n    templateUrl: './layer-upgrade.component.html',\r\n    styleUrls: ['./layer-upgrade.component.scss'],\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\nexport class LayerUpgradeComponent implements OnInit {\r\n    @Input() viewModel: ViewModel; // view model of new version\r\n    @ViewChildren(MatPaginator) paginators = new QueryList<MatPaginator>();\r\n    public paginator_map: Map<string, number> = new Map(); // section name mapped to index of paginator\r\n    public filteredIDs: string[] = [];\r\n\r\n    @ViewChild('stepper') stepper: MatStepper;\r\n\r\n    public changelog: VersionChangelog;\r\n    public compareTo: ViewModel; // view model of old version\r\n    public sections: string[] = [\r\n        \"additions\", \"changes\", \"minor_changes\",\r\n        \"revocations\", \"deprecations\", \"unchanged\"\r\n    ];\r\n    public filter: any = {\r\n        \"changes\": false,\r\n        \"minor_changes\": false,\r\n        \"revocations\": false,\r\n        \"deprecations\": false,\r\n        \"unchanged\": false\r\n    }\r\n    public loading: boolean = false;\r\n    \r\n    constructor(public dataService: DataService) { }\r\n\r\n    ngOnInit(): void {\r\n        this.changelog = this.viewModel.versionChangelog;\r\n        this.compareTo = this.viewModel.compareTo;\r\n        // map sections with techniques to paginator index\r\n        let i = 0;\r\n        for (let s of this.sections) {\r\n            if (this.changelog[s].length) this.paginator_map.set(s, i++);\r\n        }\r\n        this.applyFilters(this.sections[0]);\r\n        this.wait();\r\n    }\r\n\r\n    wait(): void {\r\n        this.loading = true;\r\n        setTimeout(() => this.loading = false, 1000);\r\n    }\r\n\r\n    /**\r\n     * Get a readable version for the name of the changelog section\r\n     * @param section name of the changelog section\r\n     * @returns {string} readable section header text\r\n     */\r\n    public getHeader(section: string): string {\r\n        return section.split(/[_-]+/).map((s) => s.charAt(0).toUpperCase() + s.substring(1)).join(' ');\r\n    }\r\n\r\n    /**\r\n     * Retrieve the URL for a given technique in the previous ATT&CK version\r\n     * @param attackID the ATT&CK ID of the technique\r\n     * @returns {string} the URL\r\n     */\r\n    public getPreservedURL(attackID: string): string {\r\n        let url = this.getTechnique(attackID, this.compareTo).url;\r\n        let i = url.search('/techniques');\r\n        return url.substring(0, i) + '/versions/v' + this.compareTo.version + url.substring(i);\r\n    }\r\n\r\n    /**\r\n     * Disable the annotated techniques filter?\r\n     * @param section the name of the changelog section\r\n     * @returns true if there are no annotated techniques in the given section, false otherwise\r\n     */\r\n    public disableFilter(section: string): boolean {\r\n        return !this.changelog[section].filter(id => this.anyAnnotated(id)).length\r\n    }\r\n\r\n    /**\r\n     * Apply filters to the changelog section\r\n     * @returns the list of filtered ATT&CK IDs in the changelog section\r\n     */\r\n    public applyFilters(section: string): void {\r\n        let sectionIDs = this.changelog[section];\r\n        if (this.filter[section]) sectionIDs = sectionIDs.filter(id => this.anyAnnotated(id));\r\n\r\n        let i = this.paginator_map.get(section);\r\n        let paginator = this.paginators.toArray()[i];\r\n        if (paginator && (paginator.pageIndex * paginator.pageSize > sectionIDs.length)) {\r\n            paginator.pageIndex = 0;\r\n        }\r\n        let start = paginator? paginator.pageIndex * paginator.pageSize : 0;\r\n        let end = paginator? start + paginator.pageSize : 10;\r\n        this.filteredIDs = sectionIDs.slice(start, end);\r\n    }\r\n\r\n    /**\r\n     * Update the list of IDs to render on step change\r\n     * @param section the name of the changelog section\r\n     * @param offset -1 if moving to the previous step, 1 if moving to the next step\r\n     */\r\n    public onStepChange(section: string, offset: number): void {\r\n        let i = this.sections.findIndex(s => s === section);\r\n        if (i + offset < this.sections.length) {\r\n            let nextSection = this.sections[i + offset];\r\n            this.applyFilters(nextSection);\r\n            if (this.changelog[nextSection].length > 0) this.wait();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Get the technique object in the domain of the given view model\r\n     * @param attackID the ATT&CK ID of the technique\r\n     * @param vm the view model\r\n     * @param section name of the changelog section\r\n     * @returns {Technique} the technique object\r\n     */\r\n    public getTechnique(attackID: string, vm: ViewModel, section?: string): Technique {\r\n        let domain = this.dataService.getDomain(vm.domainVersionID);\r\n        let all_techniques = domain.techniques.concat(domain.subtechniques);\r\n        let technique = all_techniques.find(t => t.attackID == attackID);\r\n\r\n        if (section == 'revocations' && this.viewModel.version == vm.version) {\r\n            // get revoking object\r\n            let revokedByID = technique.revoked_by(vm.domainVersionID);\r\n            let revokingObject = all_techniques.find(t => t.id == revokedByID);\r\n            return revokingObject;\r\n        } else return technique;\r\n    }\r\n\r\n    /**\r\n     * Get the list of tactic objects the given technique is found under \r\n     * @param attackID the ATT&CK ID of the object\r\n     * @param vm the view model used to identify the domain\r\n     * @param section name of the changelog section\r\n     * @returns {Tactic[]} list of tactic objects the object is found under\r\n     */\r\n    public getTactics(attackID: string, vm: ViewModel, section?: string): Tactic[] {\r\n        if (section == 'additions') vm = this.viewModel;\r\n        let technique = this.getTechnique(attackID, vm, section);\r\n        let domain = this.dataService.getDomain(vm.domainVersionID);\r\n        return technique.tactics.map(shortname => domain.tactics.find(t => t.shortname == shortname));\r\n    }\r\n\r\n    /**\r\n     * Determine if the lists of tactics between the technique in the new version and\r\n     * old version are the same\r\n     * @param attackID the ATT&CK ID of the object\r\n     * @param section name of the changelog section\r\n     * @returns {boolean} true if the list of tactics are not identical\r\n     */\r\n    public tacticsChanged(attackID: string, section: string): boolean {\r\n        if (section == 'deprecations' || section == 'additions') return false;\r\n        \r\n        let oldTechnique = this.getTechnique(attackID, this.compareTo);\r\n        let newTechnique = this.getTechnique(attackID, this.viewModel, section);\r\n\r\n        if (!oldTechnique.tactics && !newTechnique.tactics) return false;\r\n        if (oldTechnique.tactics.length !== newTechnique.tactics.length) return true;\r\n\r\n        // order lists and compare\r\n        let sortArray = function (a, b) {\r\n            if (a < b) return -1;\r\n            if (a > b) return 1;\r\n            return 0;\r\n        };\r\n        let oldTactics = oldTechnique.tactics.sort(sortArray);\r\n        let newTactics = newTechnique.tactics.sort(sortArray);\r\n        if (oldTactics.every((value, i) => value === newTactics[i])) return false;\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Determine if the technique is marked as reviewed\r\n     * @param attackID the ATT&CK ID of the technique\r\n     * @returns {boolean} true if the technique has been marked as reviewed\r\n     */\r\n    public isReviewed(attackID: string): boolean {\r\n        return this.changelog.reviewed.has(attackID);\r\n    }\r\n\r\n    /**\r\n     * Marks or unmarks a single given technique as reviewed\r\n     * @param attackID the ATT&CK ID of the technique\r\n     * @param panel the object's expansion panel\r\n     */\r\n    public reviewedChanged(attackID: string, panel: MatExpansionPanel): void {\r\n        if (this.isReviewed(attackID)) {\r\n            this.changelog.reviewed.delete(attackID);\r\n        } else {\r\n            this.changelog.reviewed.add(attackID);\r\n            panel.expanded = false; // close on review\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Get the number of techniques marked as reviewed in the given section\r\n     * @param section the name of the changelog section\r\n     * @returns number of reviewed techniques\r\n     */\r\n    public countReviewed(section: string): number {\r\n        return this.changelog[section].filter(attackID => this.changelog.reviewed.has(attackID)).length;\r\n    }\r\n\r\n    // changelog section descriptions\r\n    private descriptions: any = {\r\n        \"additions\": \"The following techniques have been added to the dataset since the layer was created. You can review the techniques below to identify which may require annotations. Annotations may be added using the 'technique controls' in the toolbar.\",\r\n        \"changes\": \"The following techniques have undergone major changes since the layer was created such as changes to scope or technique name. You can view the annotations you had previously added, map them to the current ATT&CK version, and adjust them as needed. You can also review the previous and current technique definitions by clicking the version numbers in each row.\",\r\n        \"minor_changes\": \"The following techniques have had minor revisions since the layer was created such as typo corrections. The annotations have automatically been copied for these techniques, but you can review them if desired. You can also view the previous and current technique definitions by clicking the version numbers under the technique.\",\r\n        \"revocations\": \"These are techniques which have been replaced by other techniques since the layer was created. You can view the replacing techniques and transfer annotations from the replaced techniques, adjusting them as nessecary. You can also review the replaced and replacing technique definitions by clicking the version numbers under the technique.\",\r\n        \"deprecations\": \"These are techniques which have been removed from the dataset. You can view any annotations you had previously added to these techniques.\",\r\n        \"unchanged\": \"These are techniques which have not changed since the uploaded layer's ATT&CK version. The annotations have automatically been copied for these techniques, but you can review them if desired.\",\r\n        \"finish\": \"The overview below indicates either the number of techniques you have reviewed in a section, if you have skipped a section, or if there are no techniques to review in that section. Annotations mapped to the current version have been saved to the new layer.\\n\\nVerify your changes and click 'Done' to complete the layer upgrade workflow. Once completed you cannot return to this workflow.\"\r\n    }\r\n\r\n    /**\r\n     * Get the changelog section description\r\n     * @param section the name of the changelog section\r\n     * @returns the section description\r\n     */\r\n    public getDescription(section: string): string {\r\n        return this.descriptions[section];\r\n    }\r\n\r\n    /**\r\n     * Determine if any techniqueVM in the old version with the given\r\n     * ATT&CK ID has annotations\r\n     * @param attackID the ATT&CK ID of the technique\r\n     * @returns {boolean} true if any TechniqueVM for this technique is annotated\r\n     */\r\n     public anyAnnotated(attackID: string): boolean {\r\n        let oldTechnique = this.getTechnique(attackID, this.compareTo);\r\n        if (oldTechnique) {\r\n            let technique_tactic_ids = oldTechnique.get_all_technique_tactic_ids();\r\n\r\n            for (let id of technique_tactic_ids) {\r\n                if (this.compareTo.getTechniqueVM_id(id).annotated()) return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Is the TechniqueVM for this technique-tactic annotated?\r\n     * @param technique the technique in the old version\r\n     * @param tactic the tactic the technique is found under\r\n     * @param vm the view model\r\n     * @returns {boolean} true if the TechniqueVM is annotated, false otherwise\r\n     */\r\n    public isAnnotated(technique: Technique, tactic: Tactic, vm: ViewModel): boolean {\r\n        return vm.getTechniqueVM(technique, tactic).annotated();\r\n    }\r\n\r\n    /**\r\n     * Get the total number of techniques currently displayed in a given section\r\n     * @param section the name of the changelog section\r\n     * @returns the total number of annotated techniques in the section if the filter is enabled,\r\n     * otherwise the total number of techniques in the seciton\r\n     */\r\n    public sectionLength(section: string): number {\r\n        if (this.filter[section]) return this.changelog[section].filter(attackID => this.anyAnnotated(attackID)).length;\r\n        else return this.changelog[section].length;\r\n    }\r\n\r\n    /**\r\n     * Determine if the annotations of the technique under the given tactic\r\n     * in the old version have been copied to the new version\r\n     * @param technique the technique in the old version\r\n     * @param tactic the tactic the technique is found under\r\n     * @returns {boolean} true if the annotations have been copied to the\r\n     * object in the new version\r\n     */\r\n    public isCopied(technique: Technique, tactic: Tactic): boolean {\r\n        if (this.changelog.copied.has(technique.get_technique_tactic_id(tactic))) return true;\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Copy the annotations from the technique in the old version\r\n     * to the technique in the new version\r\n     * @param attackID the ATT&CK ID of the technique\r\n     * @param tactic the tactic the technique is found under\r\n     */\r\n    public copyAnnotations(attackID: string, tactic: Tactic, section: string): void {\r\n        let fromTechnique = this.getTechnique(attackID, this.compareTo);\r\n        let toTechnique = this.getTechnique(attackID, this.viewModel, section);\r\n        this.viewModel.copyAnnotations(fromTechnique, toTechnique, tactic);\r\n    }\r\n\r\n    /**\r\n     * Re-enable the annotations on the technique in the old version and\r\n     * reset the annotations on the technique in the new version\r\n     * @param attackID the ATT&CK ID of the technique\r\n     * @param tactic the tactic the technique is found under\r\n     */\r\n    public revertCopy(attackID: string, tactic: Tactic, section: string): void {\r\n        let fromTechnique = this.getTechnique(attackID, this.compareTo);\r\n        let toTechnique = this.getTechnique(attackID, this.viewModel, section);\r\n        this.viewModel.revertCopy(fromTechnique, toTechnique, tactic);\r\n    }\r\n\r\n    /**\r\n     * Copy the annotations from the TechniqueVM in the old version\r\n     * to the TechniqueVM that the element was dropped over\r\n     * @param event the ngx drop event\r\n     * @param toTechnique the technique object to copy annotations to\r\n     * @param toTactic the tactic object to copy annotations to\r\n     * @param section the name of the changelog section\r\n     */\r\n    public onDrop(event: DndDropEvent, toTechnique: Technique, toTactic: Tactic, section: string): void {\r\n        let attackID = event.data.split(\"^\")[0];\r\n        let validTechnique = this.getTechnique(attackID, this.viewModel, section);\r\n\r\n        if (validTechnique.id === toTechnique.id) { // copying annotations to a valid target?\r\n            // retrieve relevant technique VMs\r\n            let fromTvm = this.compareTo.getTechniqueVM_id(event.data);\r\n            let toTvm = this.viewModel.getTechniqueVM(toTechnique, toTactic);\r\n\r\n            // copy annotations\r\n            let rep = fromTvm.serialize();\r\n            toTvm.resetAnnotations();\r\n            toTvm.deSerialize(rep, toTechnique.attackID, toTactic.shortname);\r\n            this.viewModel.updateScoreColor(toTvm);\r\n        } else {} // invalid target\r\n    }\r\n\r\n    /**\r\n     * Remove all annotations from the VM\r\n     * @param technique the technique object to remove annotations from\r\n     * @param tactic the tactic the technique is found under\r\n     */\r\n    public clearAnnotations(technique: Technique, tactic: Tactic): void {\r\n        this.viewModel.getTechniqueVM(technique, tactic).resetAnnotations();\r\n    }\r\n\r\n    /**\r\n     * Close the layer upgrade sidebar\r\n     */\r\n    public closeSidebar(): void {\r\n        this.viewModel.sidebarOpened = !this.viewModel.sidebarOpened;\r\n        this.viewModel.sidebarContentType = '';\r\n    }\r\n}","<link href=\"https://fonts.googleapis.com/icon?family=Material+Icons\" rel=\"stylesheet\">\r\n\r\n<div class=\"layer-upgrade\">\r\n    <mat-card>\r\n        <mat-card-content>\r\n            <!-- title -->\r\n            <div class=\"title\">\r\n                <h2>Layer Upgrade</h2>\r\n                (ATT&CK v{{compareTo.version}} <mat-icon inline=\"true\">east</mat-icon> ATT&CK v{{viewModel.version}})\r\n            </div>\r\n            <p>\r\n                Review techniques which have been added, changed, replaced, or removed\r\n                from the knowledge base since ATT&CK v{{compareTo.version}} and update \r\n                your Navigator layer to reflect these changes.\r\n            </p>\r\n            <p>\r\n                <a href=\"https://attack.mitre.org/resources/versions/\" target=\"_blank\">\r\n                    View Versions of ATT&CK\r\n                </a>\r\n            </p>\r\n        </mat-card-content>\r\n    </mat-card>\r\n\r\n    <mat-divider></mat-divider>\r\n\r\n    <mat-vertical-stepper #stepper linear>\r\n        <mat-step *ngFor=\"let section of sections\">\r\n            <ng-template matStepLabel>Review {{getHeader(section)}}</ng-template>\r\n\r\n            <div *ngIf=\"getDescription(section) as desc\" class=\"description\">\r\n                <span>{{desc}}</span>\r\n            </div>\r\n\r\n            <mat-divider></mat-divider>\r\n\r\n            <div *ngIf=\"changelog[section].length > 0\">\r\n                <div *ngIf=\"section !== 'additions'\">\r\n                    <h4>Filters</h4>\r\n                    <input id=\"filter_{{section}}\" \r\n                        class=\"checkbox-custom\" type=\"checkbox\" \r\n                        [disabled]=\"disableFilter(section)\"\r\n                        [(ngModel)]=\"filter[section]\"\r\n                        (change)=\"applyFilters(section)\">\r\n                    <label for=\"filter_{{section}}\"  class=\"checkbox-custom-label noselect\" [class.disabled]=\"disableFilter(section)\"\r\n                        matTooltipPosition=\"above\" [matTooltip]=\"disableFilter(section) ? 'no annotated techniques' : ''\">\r\n                        show annotated techniques only\r\n                    </label>\r\n                </div>\r\n\r\n                <div class=\"spinner\" *ngIf=\"loading\">\r\n                    <mat-progress-spinner mode=\"indeterminate\"></mat-progress-spinner>\r\n                </div>\r\n\r\n                <ng-container *ngIf=\"stepper ? section == sections[stepper.selectedIndex] : section == sections[0]\">\r\n                    <div class=\"stepper-content\" *ngIf=\"!loading\">\r\n                        <mat-accordion>\r\n                            <mat-expansion-panel *ngFor=\"let attackID of filteredIDs\" #panel=\"matExpansionPanel\">\r\n                                <mat-expansion-panel-header>\r\n                                    <mat-panel-title>\r\n                                        <mat-icon *ngIf=\"isReviewed(attackID)\" class=\"reviewed\">check_circle_outline</mat-icon>\r\n                                        <mat-icon *ngIf=\"!isReviewed(attackID)\" class=\"disabled\">radio_button_unchecked</mat-icon>\r\n                                        <span>{{attackID}}: {{getTechnique(attackID, viewModel).name}}</span>\r\n                                    </mat-panel-title>\r\n                                </mat-expansion-panel-header>\r\n\r\n                                <ng-template matExpansionPanelContent>\r\n\r\n                                    <div class=\"cols\">\r\n                                        <div class=\"float wide\" *ngIf=\"section !== 'additions'\">\r\n                                            <div class=\"version\">\r\n                                                <a href=\"{{getPreservedURL(attackID)}}\" target=\"_blank\">ATT&CK v{{compareTo.version}}</a>\r\n                                            </div>\r\n                                            <mat-divider></mat-divider>\r\n                                        </div>\r\n                                        <div class=\"float arrow\" *ngIf=\"section !== 'additions' && section !== 'deprecations'\">\r\n                                            <mat-icon inline=\"true\">east</mat-icon>\r\n                                        </div>\r\n                                        <div class=\"float wide\" *ngIf=\"section !== 'deprecations'\">\r\n                                            <div class=\"version\">\r\n                                                <a href=\"{{getTechnique(attackID, viewModel, section).url}}\" target=\"_blank\">ATT&CK v{{viewModel.version}}</a>\r\n                                            </div>\r\n                                            <mat-divider></mat-divider>\r\n                                        </div>\r\n                                    </div>\r\n                    \r\n                                    <div class=\"cols\" *ngIf=\"tacticsChanged(attackID, section)\">\r\n                                        <div class=\"float wide\" *ngIf=\"getTechnique(attackID, compareTo) as oldTechnique\">\r\n                                            <div class=\"changelog-cells\" *ngFor=\"let tactic of getTactics(attackID, compareTo)\">\r\n                                                <div [dndDraggable]=\"oldTechnique.get_technique_tactic_id(tactic)\">\r\n                                                    <changelog-cell\r\n                                                        [tactic]=\"tactic\"\r\n                                                        [technique]=\"oldTechnique\" \r\n                                                        [viewModel]=\"compareTo\"\r\n                                                        [isCurrentVersion]=\"false\"\r\n                                                        [isDraggable]=\"true\"\r\n                                                        [section]=\"section\">\r\n                                                    </changelog-cell>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                    \r\n                                        <div class=\"float arrow\">\r\n                                            <mat-icon class=\"info\" matTooltipPosition=\"above\" \r\n                                                matTooltip='Drag and drop to copy annotations to the desired tactics in ATT&CK v{{viewModel.version}}.'>\r\n                                                info_outline\r\n                                            </mat-icon>\r\n                                        </div>\r\n                    \r\n                                        <div class=\"float wide\" *ngIf=\"getTechnique(attackID, viewModel, section) as newTechnique\">\r\n                                            <div class=\"changelog-cells\" *ngFor=\"let tactic of getTactics(attackID, viewModel, section)\"\r\n                                                dndDropzone (dndDrop)=\"onDrop($event, newTechnique, tactic, section)\">\r\n                                                <changelog-cell\r\n                                                    [tactic]=\"tactic\"\r\n                                                    [technique]=\"newTechnique\" \r\n                                                    [viewModel]=\"viewModel\"\r\n                                                    [isCurrentVersion]=\"true\"\r\n                                                    [section]=\"section\">\r\n                                                </changelog-cell>\r\n                    \r\n                                                <span class=\"clear-annotations\" *ngIf=\"isAnnotated(newTechnique, tactic, viewModel)\"\r\n                                                    matTooltipPosition=\"above\" matTooltip=\"clear annotations\"\r\n                                                    (click)=\"clearAnnotations(newTechnique, tactic)\">x</span>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                    \r\n                                    <div *ngIf=\"!tacticsChanged(attackID, section)\">\r\n                                        <table class=\"changelog-table\">\r\n                                            <tr *ngFor=\"let tactic of getTactics(attackID, compareTo, section)\">\r\n                                                <td *ngIf=\"section !== 'additions'\">\r\n                                                    <changelog-cell\r\n                                                        [tactic]=\"tactic\"\r\n                                                        [technique]=\"getTechnique(attackID, compareTo)\" \r\n                                                        [viewModel]=\"compareTo\"\r\n                                                        [isCurrentVersion]=\"false\"\r\n                                                        [section]=\"section\">\r\n                                                    </changelog-cell>\r\n                                                </td>\r\n                                                <td class=\"narrow button-container\" *ngIf=\"section !== 'additions' && section !== 'deprecations'\">\r\n                                                    <button class=\"button\" matTooltipPosition=\"above\" matTooltip=\"copy annotations\"\r\n                                                        [disabled]=\"isCopied(getTechnique(attackID, compareTo), tactic) || !anyAnnotated(attackID)\"\r\n                                                        (click)=\"copyAnnotations(attackID, tactic, section)\"><mat-icon inline=\"true\">chevron_right</mat-icon></button>\r\n                                                    <button class=\"button\" matTooltipPosition=\"above\" matTooltip=\"revert copy\"\r\n                                                        [disabled]=\"!isCopied(getTechnique(attackID, compareTo), tactic)\"\r\n                                                        (click)=\"revertCopy(attackID, tactic, section)\"><mat-icon inline=\"true\">chevron_left</mat-icon></button>\r\n                                                </td>\r\n                                                <td *ngIf=\"section !== 'deprecations'\">\r\n                                                    <changelog-cell\r\n                                                        [tactic]=\"tactic\"\r\n                                                        [technique]=\"getTechnique(attackID, viewModel, section)\" \r\n                                                        [viewModel]=\"viewModel\"\r\n                                                        [isCurrentVersion]=\"true\"\r\n                                                        [section]=\"section\">\r\n                                                    </changelog-cell>\r\n                                                </td>\r\n                                            </tr>\r\n                                        </table>\r\n                                    </div>\r\n                    \r\n                    \r\n                                    <div class=\"checkbox right\">\r\n                                        <input id=\"review_{{attackID}}\" class=\"checkbox-custom\" type=\"checkbox\"\r\n                                            [checked]=\"isReviewed(attackID)\" (click)=\"reviewedChanged(attackID, panel)\">\r\n                                        <label for=\"review_{{attackID}}\" class=\"checkbox-custom-label noselect\">reviewed</label>\r\n                                    </div>\r\n\r\n                                </ng-template>\r\n\r\n                            </mat-expansion-panel>\r\n                        </mat-accordion>\r\n                    </div>\r\n                </ng-container>\r\n                <mat-paginator [hidePageSize]=\"true\" pageSize=\"10\" (page)=\"applyFilters(section)\" [length]=\"sectionLength(section)\"></mat-paginator>\r\n            </div>\r\n\r\n            <div *ngIf=\"changelog[section].length == 0 && !loading\">\r\n                <div class=\"description center\">\r\n                    No objects to show\r\n                </div>\r\n            </div>\r\n\r\n            <mat-divider></mat-divider>\r\n\r\n            <div class=\"stepper-button\">\r\n                <span *ngIf=\"changelog[section].length > 0\">Reviewed {{countReviewed(section)}}/{{sectionLength(section)}} techniques</span>\r\n\r\n                <button *ngIf=\"section !== 'additions'\" mat-stroked-button matStepperPrevious (click)=\"onStepChange(section, -1)\">Back</button>\r\n                <button mat-stroked-button matStepperNext (click)=\"onStepChange(section, 1)\">{{countReviewed(section) > 0 ? 'Next' : 'Skip'}}</button>\r\n            </div>\r\n        </mat-step>\r\n\r\n        <mat-step>\r\n            <ng-template matStepLabel>Finish</ng-template>\r\n\r\n            <div class=\"description\">\r\n                <span>{{getDescription('finish')}}</span>\r\n            </div>\r\n\r\n            <mat-divider></mat-divider>\r\n\r\n            <h4>Overview</h4>\r\n            <div class=\"summary\" *ngFor=\"let section of sections\">\r\n                <span>{{getHeader(section)}}:&nbsp;</span>\r\n                <span *ngIf=\"countReviewed(section) > 0\">Reviewed {{countReviewed(section)}}/{{sectionLength(section)}} {{filter[section] ? 'annotated': ''}} techniques</span>\r\n                <span *ngIf=\"!changelog[section].length\">No objects to review</span>\r\n                <span *ngIf=\"changelog[section].length && countReviewed(section) == 0\">Skipped</span>\r\n            </div>\r\n\r\n            <mat-divider></mat-divider>\r\n\r\n            <div class=\"stepper-button\">\r\n                <button mat-stroked-button matStepperPrevious>Back</button>\r\n                <button mat-stroked-button (click)=\"closeSidebar()\">Done</button>\r\n            </div>\r\n        </mat-step>\r\n    </mat-vertical-stepper>\r\n</div>","import { BrowserModule, Title } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { NgModule } from '@angular/core';\r\nimport 'rxjs/add/operator/map'\r\n\r\n// material\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { ColorPickerModule } from 'ngx-color-picker';\r\nimport { DndModule } from 'ngx-drag-drop';\r\nimport { PopoverModule } from 'ngx-smart-popover';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { DataTableComponent } from './datatable/data-table.component';\r\nimport { TabsComponent } from './tabs/tabs.component';\r\nimport { HelpComponent } from './help/help.component';\r\nimport { ExporterComponent } from './exporter/exporter.component';\r\nimport { TechniqueCellComponent } from './matrix/technique-cell/technique-cell.component';\r\nimport { MatrixSideComponent } from './matrix/matrix-side/matrix-side.component';\r\nimport { MatrixFlatComponent } from './matrix//matrix-flat/matrix-flat.component';\r\nimport { MatrixMiniComponent } from './matrix//matrix-mini/matrix-mini.component';\r\nimport { TooltipComponent } from './matrix/technique-cell/tooltip/tooltip.component';\r\nimport { SearchAndMultiselectComponent } from './search-and-multiselect/search-and-multiselect.component';\r\nimport { ContextmenuComponent } from './matrix/technique-cell/contextmenu/contextmenu.component';\r\nimport { TacticCellComponent } from './matrix/tactic-cell/tactic-cell.component';\r\nimport { VersionUpgradeComponent } from './version-upgrade/version-upgrade.component';\r\nimport { SidebarComponent } from './sidebar/sidebar.component';\r\nimport { LayerUpgradeComponent } from './layer-upgrade/layer-upgrade.component';\r\nimport { ChangelogCellComponent } from './layer-upgrade/changelog-cell/changelog-cell.component';\r\nimport { MatCardModule } from \"@angular/material/card\";\r\nimport { MatDividerModule } from \"@angular/material/divider\";\r\nimport { MatStepperModule } from '@angular/material/stepper';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\n\r\n\r\nimport { MarkdownModule } from \"ngx-markdown\";\r\nimport { LayerInformationComponent } from './layer-information/layer-information.component';\r\nimport { ChangelogComponent } from './changelog/changelog.component';\r\nimport { MatTabsModule } from \"@angular/material/tabs\";\r\nimport { ListInputComponent } from './list-input/list-input.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    DataTableComponent,\r\n    TabsComponent,\r\n    HelpComponent,\r\n    ExporterComponent,\r\n    TechniqueCellComponent,\r\n    MatrixSideComponent,\r\n    MatrixFlatComponent,\r\n    MatrixMiniComponent,\r\n    TooltipComponent,\r\n    SearchAndMultiselectComponent,\r\n    ContextmenuComponent,\r\n    TacticCellComponent,\r\n    VersionUpgradeComponent,\r\n    SidebarComponent,\r\n    LayerUpgradeComponent,\r\n    ChangelogCellComponent,\r\n    LayerInformationComponent,\r\n    ChangelogComponent,\r\n    ListInputComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    HttpClientModule,\r\n    BrowserAnimationsModule,\r\n    MatSelectModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatInputModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatProgressSpinnerModule,\r\n    MatCheckboxModule,\r\n    MatTooltipModule,\r\n    MatMenuModule,\r\n    MatExpansionModule,\r\n    MatDialogModule,\r\n    ColorPickerModule,\r\n    DndModule,\r\n    MatSidenavModule,\r\n    MatCardModule,\r\n    MatDividerModule,\r\n    MatStepperModule,\r\n    MatPaginatorModule,\r\n    MarkdownModule.forRoot(),\r\n    PopoverModule,\r\n    MatTabsModule\r\n  ],\r\n  exports: [\r\n      MatSelectModule,\r\n      MatInputModule,\r\n      MatButtonModule,\r\n      MatIconModule,\r\n      MatTooltipModule,\r\n      MatMenuModule,\r\n      MatExpansionModule,\r\n      MatTabsModule,\r\n  ],\r\n  providers: [\r\n    Title\r\n  ],\r\n  bootstrap: [AppComponent],\r\n  entryComponents: [ VersionUpgradeComponent, HelpComponent, ExporterComponent ]\r\n})\r\nexport class AppModule { }","// https://embed.plnkr.co/wWKnXzpm8V31wlvu64od/\r\nimport { Component, AfterContentInit, ViewChild, TemplateRef, AfterViewInit, ViewEncapsulation, Input, Output, EventEmitter } from '@angular/core';\r\nimport { DataService, Domain, Technique, Version } from '../data.service'; //import the DataService component so we can use it\r\nimport { ConfigService } from '../config.service';\r\nimport * as is from 'is_js';\r\nimport { forkJoin } from 'rxjs';\r\nimport { VersionUpgradeComponent } from '../version-upgrade/version-upgrade.component';\r\nimport { HelpComponent } from '../help/help.component';\r\nimport { ExporterComponent } from '../exporter/exporter.component';\r\nimport { ViewModelsService, ViewModel } from \"../viewmodels.service\";\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport * as globals from './../globals';\r\nimport { ChangelogComponent } from \"../changelog/changelog.component\";\r\n\r\n@Component({\r\n    selector: 'tabs',\r\n    templateUrl: './tabs.component.html',\r\n    styleUrls: ['./tabs.component.scss'],\r\n    providers: [ViewModelsService],\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\nexport class TabsComponent implements AfterContentInit, AfterViewInit {\r\n    @Input() userTheme: string;\r\n    @Output() onUserThemeChange = new EventEmitter<string>();\r\n    //  _____ _   ___   ___ _____ _   _ ___ ___\r\n    // |_   _/_\\ | _ ) / __|_   _| | | | __| __|\r\n    //   | |/ _ \\| _ \\ \\__ \\ | | | |_| | _|| _|\r\n    //   |_/_/ \\_\\___/ |___/ |_|  \\___/|_| |_|\r\n\r\n\r\n    ds: DataService = null;\r\n    vms: ViewModelsService = null;\r\n    activeTab: Tab = null;\r\n    dropdownEnabled = '';\r\n    layerTabs: Tab[] = [];\r\n    adjustedHeaderHeight = 0;\r\n    techniques: Technique[] = [];\r\n\r\n    nav_version = globals.nav_version;\r\n\r\n    constructor(private dialog: MatDialog, private viewModelsService: ViewModelsService, private dataService: DataService, private http: HttpClient, private configService: ConfigService) {\r\n        console.log(\"tabs component initializing\");\r\n        this.ds = dataService;\r\n        this.viewModelsService = viewModelsService;\r\n    }\r\n\r\n    @ViewChild('safariWarning') safariWarning : TemplateRef<any>;\r\n\r\n    ngAfterContentInit() {\r\n        let subscription = this.ds.getConfig().subscribe({\r\n            next: (config: Object) => {\r\n                this.newBlankTab();\r\n                this.loadTabs(config[\"default_layers\"]).then( () => {\r\n                    if (this.layerTabs.length == 0) {\r\n                        this.newLayer(this.dataService.domains[0].id); // failed load from url, so create new blank layer\r\n                    }\r\n                    // let activeTabs = this.layerTabs.filter((tab)=>tab.active);\r\n\r\n                    // if there is no active tab set, activate the first\r\n                    if(!this.activeTab) { this.selectTab(this.layerTabs[0]); }\r\n                });\r\n                this.customizedConfig = this.configService.getFeatureList()\r\n                this.bannerContent = this.configService.banner;\r\n            },\r\n            complete: () => { if (subscription) subscription.unsubscribe(); } //prevent memory leaks\r\n        });\r\n    }\r\n\r\n    public safariDialogRef;\r\n    ngAfterViewInit() {\r\n        if (is.safari('<=13')) {\r\n            this.safariDialogRef = this.dialog.open(this.safariWarning, {\r\n                width: '350px',\r\n                disableClose: true,\r\n                panelClass: this.userTheme\r\n            });\r\n        }\r\n    }\r\n\r\n    tabHeight = 48;\r\n    adjustHeader(newHeight) {\r\n        this.adjustedHeaderHeight = newHeight;\r\n    }\r\n\r\n    /**\r\n     * Open initial tabs on application load\r\n     */\r\n     async loadTabs(defaultLayers) {\r\n        let bundle_url = this.getNamedFragmentValue(\"bundleURL\")[0];\r\n        let bundle_version = this.getNamedFragmentValue(\"version\")[0];\r\n        let bundle_domain = this.getNamedFragmentValue(\"domain\")[0];\r\n        let fragment_value = this.getNamedFragmentValue(\"layerURL\");\r\n\r\n        if (bundle_url && bundle_url.length > 0 && bundle_version && bundle_domain && bundle_domain.length > 0) {\r\n            // load base data from URL\r\n            let self = this;\r\n            await self.newLayerFromURL({\r\n                'url': bundle_url,\r\n                'version': bundle_version,\r\n                'identifier': bundle_domain\r\n            });\r\n        } else if (fragment_value && fragment_value.length > 0) {\r\n            // load layer from URL\r\n            let first = true;\r\n            let self = this;\r\n\r\n            for (var _i = 0, urls_1 = fragment_value; _i < urls_1.length; _i++) {\r\n                var url = urls_1[_i];\r\n                await self.loadLayerFromURL(url, first, true);\r\n                first = false;\r\n            }\r\n        } else if (defaultLayers[\"enabled\"]) {\r\n            // load any default layers from config\r\n            let first = true;\r\n            let self = this;\r\n            for (let url of defaultLayers[\"urls\"]) {\r\n                await self.loadLayerFromURL(url, first, true);\r\n                first = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Open a new tab\r\n     * @param  {[type]}  title               title of new tab\r\n     * @param  {[type]}  data                data to put in template\r\n     * @param  {Boolean} [isCloseable=false] can this tab be closed?\r\n     * @param  {Boolean} [replace=false]     replace the current tab with the new tab, TODO\r\n     * @param  {Boolean} [forceNew=false]    force open a new tab even if a tab of that name already exists\r\n     * @param  {Boolean} [dataTable=false]   is this a data-table tab? if so tab text should be editable\r\n\r\n     */\r\n    openTab(title: string, data, isCloseable = false, replace = true, forceNew = false, dataTable = false) {\r\n        // determine if tab is already open. If it is, just change to that tab\r\n        if (!forceNew) {\r\n            for (let i = 0; i < this.layerTabs.length; i++) {\r\n                if (this.layerTabs[i].title === title) {\r\n                    this.selectTab(this.layerTabs[i])\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n\r\n        // create a new tab\r\n        let domain = data? data.domainVersionID : \"\";\r\n        let tab = new Tab(title, isCloseable, false, domain, dataTable);\r\n        tab.dataContext = data;\r\n\r\n        // select new tab\r\n        if (!replace || this.layerTabs.length === 0) {\r\n            this.layerTabs.push(tab); //don't replace\r\n            this.selectTab(this.layerTabs[this.layerTabs.length - 1]);\r\n        } else {\r\n            // find active tab index\r\n            for (let i = 0; i < this.layerTabs.length; i++) {\r\n                if (this.layerTabs[i] == this.activeTab) {\r\n                    this.closeActiveTab(true) //close current and don't let it create a replacement tab\r\n                    this.layerTabs.splice(i, 0, tab) //replace\r\n                    this.selectTab(this.layerTabs[i]);\r\n                    return\r\n                }\r\n            }\r\n        }\r\n        this.dropdownEnabled = '';\r\n    }\r\n\r\n    /**\r\n     * Select a given tab: deselects other tabs.\r\n     * @param  {Tab} tab tab to select\r\n     */\r\n    selectTab(tab: Tab){\r\n        // deactivate all tabs\r\n        // this.layerTabs.forEach(tab => tab.active = false);\r\n        this.activeTab = tab;\r\n        // activate the tab the user has clicked on.\r\n        // tab.active = true;\r\n        this.viewModelsService.viewModels.forEach(viewModel => {\r\n            if (viewModel.sidebarContentType === 'search') {\r\n                viewModel.sidebarOpened = false;\r\n                viewModel.sidebarContentType = \"\";\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * close a tab\r\n     * @param  {Tab} tab              tab to close\r\n     * @param  {[type]}       allowNoTab=false if true, doesn't select another tab, and won't open a new tab if there are none\r\n     */\r\n    closeTab(tab: Tab, allowNoTab=false) {\r\n        let action = 0; //controls post close-tab behavior\r\n\r\n        // destroy tab viewmodel\r\n        this.viewModelsService.destroyViewModel(tab.dataContext);\r\n\r\n        for(let i=0; i<this.layerTabs.length;i++) {\r\n            if(this.layerTabs[i] === tab) { //close this tab\r\n\r\n                if (this.layerTabs[i] == this.activeTab) { //is the tab we're closing currently open??\r\n                    if (i == 0 && this.layerTabs.length > 1) { //closing first tab, first tab is active, and more tabs exist\r\n                        action = 1;\r\n                    } else if (i > 0) { //closing not first tab, implicitly more tabs exist\r\n                        action = 2;\r\n                    } else { //else closing first tab and no other tab exist\r\n                        action = 3;\r\n                    }\r\n                }\r\n                // remove the tab from our array\r\n                this.layerTabs.splice(i,1);\r\n                break;\r\n            }\r\n        }\r\n\r\n        // post close-tab behavior: select new tab?\r\n        if (!allowNoTab) {\r\n            switch (action) {\r\n                case 0: //should only occur if the active tab is not closed: don't select another tab\r\n                    break;\r\n                case 1: //closing the first tab, more exist\r\n                    this.selectTab(this.layerTabs[0]) // select first tab\r\n                    break;\r\n                case 2: //closing any tab other than the first\r\n                    this.selectTab(this.layerTabs[0]); //select first tab\r\n                    break;\r\n                case 3://closing first tab and no other tab exist\r\n                    this.newBlankTab(); //make a new blank tab, automatically opens this tab\r\n                    break;\r\n                default: //should never occur\r\n                    console.error(\"post closetab action not specified (this should never happen)\")\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Close the currently selected tab\r\n     * @param  {[type]} allowNoTab=false if true, doesn't select another tab, and won't open a new tab if there are none\r\n     */\r\n    closeActiveTab(allowNoTab=false) {\r\n        if (this.activeTab) this.closeTab(this.activeTab, allowNoTab);\r\n        // this.activeTab = null;\r\n        // let activeTabs = this.layerTabs.filter((tab)=>tab.active);\r\n        // if(activeTabs.length > 0)  {\r\n        //     // close the 1st active tab (should only be one at a time)\r\n        //     this.closeTab(activeTabs[0], allowNoTab);\r\n        // }\r\n    }\r\n\r\n    getActiveTab() {\r\n        return this.activeTab;\r\n        // let activeTabs = this.layerTabs.filter((tab)=>tab.active);\r\n        // return activeTabs[0];\r\n    }\r\n\r\n    handleTabClick(tab) {\r\n        if (this.activeTab !== tab) {\r\n            this.activeTab = tab;\r\n            this.dropdownEnabled = '';\r\n        }\r\n        else this.dropdownEnabled = this.dropdownEnabled !== 'description' ? 'description' : '';\r\n    }\r\n\r\n    filterDomains(version: Version) {\r\n        return this.dataService.domains.filter((d) => d.version == version)\r\n    }\r\n\r\n    hasFeature(featureName: string): boolean {\r\n        return this.configService.getFeature(featureName);\r\n    }\r\n\r\n\r\n    //  _      ___   _____ ___   ___ _____ _   _ ___ ___\r\n    // | |    /_\\ \\ / / __| _ \\ / __|_   _| | | | __| __|\r\n    // | |__ / _ \\ V /| _||   / \\__ \\ | | | |_| | _|| _|\r\n    // |____/_/ \\_\\_| |___|_|_\\ |___/ |_|  \\___/|_| |_|\r\n\r\n    /**\r\n     * open a new \"blank\" tab showing a new layer button and an open layer button\r\n     * @param  {[type]} replace=false replace the current tab with this blank tab?\r\n     */\r\n    newBlankTab(replace=false) {\r\n        this.openTab('new tab', null, true, replace, true, false)\r\n    }\r\n\r\n    showHelpDropDown: boolean = false;\r\n\r\n\r\n    handleUserThemeChange(theme) {\r\n      this.onUserThemeChange.emit(theme);\r\n    }\r\n\r\n    /**\r\n     * open the help dialog\r\n     */\r\n    openDialog(dialogName: string) {\r\n        const settings = { maxWidth: \"75ch\", panelClass: this.userTheme };\r\n        if (dialogName == 'changelog') this.dialog.open(ChangelogComponent, settings);\r\n        else if (dialogName == 'help') this.dialog.open(HelpComponent, settings);\r\n    }\r\n\r\n    /**\r\n     * open the SVG exporter dialog\r\n     * @param {ViewModel} vm    the viewModel to render\r\n     */\r\n    openSVGDialog(vm: ViewModel) {\r\n        this.dialog.open(ExporterComponent,\r\n            { data: {vm: vm},\r\n              panelClass: ['dialog-custom', this.userTheme]\r\n            });\r\n    }\r\n\r\n    /**\r\n     * Given a unique root, returns a layer name that does not conflict any existing layers, e.g 'new layer' -> 'new layer 1'\r\n     * @param  {string} root the root string to get the non-conflicting version of\r\n     * @return {string}      non-conflicted version\r\n     */\r\n    getUniqueLayerName(root: string) {\r\n        let conflictNumber = 0;\r\n        let viewModels = this.viewModelsService.viewModels\r\n\r\n        function isInteger(str) {\r\n            var n = Math.floor(Number(str));\r\n            return String(n) === str;\r\n        }\r\n\r\n        for (let i = 0; i < viewModels.length; i++) {\r\n            if (!viewModels[i].name.startsWith(root)) continue;\r\n            if (viewModels[i].name === root) { //case where it's \"new layer\" aka  \"new layer 0\"\r\n                conflictNumber = Math.max(conflictNumber, 1);\r\n                continue;\r\n            }\r\n\r\n            let numberPortion = viewModels[i].name.substring(root.length, viewModels[i].name.length)\r\n\r\n            //find lowest number higher than existing number\r\n            if (isInteger(numberPortion)) {\r\n                conflictNumber = Math.max(conflictNumber, Number(numberPortion) + 1)\r\n            }\r\n        }\r\n        // if no layers of this name exist (conflictNumber == 0) just return root\r\n        if (conflictNumber != 0) root = root + conflictNumber\r\n        return root;\r\n    }\r\n\r\n    loadData = {\r\n        url: undefined,\r\n        version: undefined,\r\n        identifier: undefined\r\n    }\r\n\r\n    /**\r\n     * Create a new layer from URL\r\n     */\r\n    newLayerFromURL(loadData: any, obj: any = undefined) {\r\n        let domain_id = loadData.identifier.toLowerCase();\r\n        let domainVersionID = this.dataService.getDomainVersionID(domain_id, loadData.version);\r\n\r\n        // validate input data\r\n        let valid = this.validateInput(loadData, domainVersionID);\r\n        if (!valid) return;\r\n\r\n        let url = new URL(loadData.url).toString();\r\n        let subscription = this.http.get(url).subscribe({\r\n            next: (res) => {\r\n                let exists = this.dataService.domains.find(d => d.isCustom && d.id === domainVersionID);\r\n                if (!exists) {\r\n                    // create or retrieve version\r\n                    let v: Version = this.dataService.versions.find(v => v.number == loadData.version);\r\n                    if (!v) {\r\n                        v = new Version(`ATT&CK v${loadData.version}`, String(loadData.version));\r\n                        this.dataService.versions.push(v);\r\n                    }\r\n        \r\n                    // create new custom domain object\r\n                    let domainObject = new Domain(domain_id, domain_id, v, [url]);\r\n                    domainObject.isCustom = true;\r\n                    this.dataService.domains.push(domainObject);\r\n                } \r\n\r\n                this.newLayer(domainVersionID, obj);\r\n            },\r\n            error: (err) => {\r\n                console.error(err)\r\n                if (err.status == 0) {\r\n                    // no response\r\n                    alert(\"ERROR retrieving data from \" + url + \", check the javascript console for more information.\")\r\n                } else {\r\n                    // response, but not a good one\r\n                    alert(\"ERROR retrieving data from \" + url + \", check the javascript console for more information.\")\r\n                }\r\n            },\r\n            complete: () => { if (subscription) subscription.unsubscribe(); } // prevent memory leaks\r\n        })\r\n    }\r\n\r\n    validateInput(loadData: any, domainVersionID: string): boolean {\r\n        try {\r\n            // validate URL\r\n            let url = new URL(loadData.url);\r\n\r\n            // validate version\r\n            if (isNaN(loadData.version)) {\r\n                throw {message: \"version is not a number\"};\r\n            }\r\n\r\n            // validate domainVersionID is unique\r\n            let exists = this.dataService.domains.find(d => d.id == domainVersionID);\r\n            // Note: if a user inputs the same domain, version, AND url, do not check for collisions, just reload the custom dataset\r\n            if (exists && !(exists.isCustom && exists.urls[0] == url.toString())) {\r\n                throw {message: `the domain and version specified conflict with an existing set of ATT&CK data (${exists.name} ${exists.version.name})`};\r\n            }\r\n\r\n            return true;\r\n        } catch (err) {\r\n            console.error(err);\r\n            if (err instanceof TypeError) {\r\n                alert(\"ERROR: invalid url, check the javascript console for more information.\");\r\n            } else {\r\n                alert(\"ERROR \" + err.message);\r\n            }\r\n            return false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Create a new layer in the given domain/version\r\n     */\r\n    newLayer(domainVersionID: string, obj: any = undefined) {\r\n        // load domain data, if not yet loaded\r\n        let domain = this.dataService.getDomain(domainVersionID);\r\n        if (!domain.dataLoaded) {\r\n            this.dataService.loadDomainData(domainVersionID, true);\r\n        }\r\n\r\n        // find non conflicting name\r\n        let name;\r\n        if (obj && 'name' in obj && obj['name']) {\r\n            name = obj['name']\r\n        } else name = this.getUniqueLayerName(\"layer\")\r\n\r\n        // create and open VM\r\n        let vm = this.viewModelsService.newViewModel(name, domainVersionID);\r\n\r\n        if (obj) {\r\n            // restore the VM from the given string\r\n            vm.deSerialize(obj);\r\n        }\r\n        vm.loadVMData();\r\n        this.openTab(name, vm, true, true, true, true)\r\n    }\r\n\r\n    /**\r\n     * Get a layer score expression variable for a tab\r\n     * @param  index index of tab\r\n     * @return       char expression variable\r\n     */\r\n    indexToChar(index: number) {\r\n        let realIndex = 0;\r\n        for (let i = 0; i < index; i++) {\r\n            if (this.layerTabs[i].dataContext) realIndex++;\r\n        }\r\n        return String.fromCharCode(97+realIndex);\r\n    }\r\n\r\n    /**\r\n     * Inverse of indextoChar, maps char to the tab it corresponds to\r\n     * @param  char score expression variable\r\n     * @return      tab index\r\n     */\r\n    charToIndex(char: string): number {\r\n        // console.log(\"searching for char\", char)\r\n        let realIndex = 0;\r\n        for (let i = 0; i < this.layerTabs.length; i++) {\r\n            if (this.layerTabs[i].dataContext) {\r\n                let charHere = String.fromCharCode(97+realIndex);\r\n                realIndex++;\r\n                if (charHere == char) return i;\r\n            }\r\n        }\r\n    }\r\n\r\n    domain: string = \"\";\r\n    gradient: ViewModel = null;\r\n    coloring: ViewModel = null;\r\n    comments: ViewModel = null;\r\n    links: ViewModel = null;\r\n    metadata: ViewModel = null;\r\n    enabledness: ViewModel = null;\r\n    filters: ViewModel = null;\r\n    scoreExpression: string = \"\";\r\n    legendItems: ViewModel = null;\r\n    /**\r\n     * layer layer operation\r\n     */\r\n    layerByOperation(): void {\r\n        // build score expression map, mapping inline variables to their actual VMs\r\n        let scoreVariables = new Map<string, ViewModel>();\r\n        let regex = /\\b[a-z]\\b/g //\\b matches word boundary\r\n        let matches = this.scoreExpression.match(regex);\r\n        let self = this;\r\n        if (matches) {\r\n            matches.forEach(function(match) {\r\n                // trim\r\n                let index = self.charToIndex(match);\r\n                let vm = self.layerTabs[index].dataContext;\r\n                scoreVariables.set(match, vm);\r\n            });\r\n        }\r\n\r\n        let layerName = this.getUniqueLayerName(\"layer by operation\")\r\n        try {\r\n            // all layers must be of the same domain/version\r\n            let vms = Array.from(scoreVariables.values());\r\n            if(vms && !vms.every((vm) => vm.domainVersionID === vms[0].domainVersionID)) {\r\n                throw {message: \"cannot apply operations to layers of different domains\"};\r\n            }\r\n            let vm = this.viewModelsService.layerLayerOperation(this.domain, this.scoreExpression, scoreVariables, this.comments, this.links, this.metadata, this.gradient, this.coloring, this.enabledness, layerName, this.filters, this.legendItems)\r\n            if (!this.dataService.getDomain(this.domain).dataLoaded) {\r\n                this.dataService.loadDomainData(this.domain, true).then( () => {\r\n                    vm.loadVMData();\r\n                    vm.updateGradient();\r\n                    this.openTab(layerName, vm, true, true, true, true)\r\n                })\r\n            } else {\r\n                vm.loadVMData();\r\n                vm.updateGradient();\r\n                this.openTab(layerName, vm, true, true, true, true)\r\n            }\r\n        } catch (err) {\r\n            console.error(err)\r\n            alert(\"Layer Layer operation error: \" + err.message)\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Retrieves a list of view models with the chosen domain\r\n     */\r\n    getLayers(): ViewModel[] {\r\n        return this.viewModelsService.viewModels.filter((vm) => vm.domainVersionID == this.domain)\r\n    }\r\n\r\n    /**\r\n     * Check if there's an error in the score expression (syntax, etc)\r\n     * @return error or null if no error\r\n     */\r\n    getScoreExpressionError(): string {\r\n        let self = this;\r\n        try {\r\n            // build fake scope\r\n            let regex = /\\b[a-z]\\b/g //\\b matches word boundary\r\n            let matches = self.scoreExpression.match(regex);\r\n\r\n            let scope = {}\r\n            if (matches) {\r\n                let noMatch = \"\"\r\n                matches.forEach(function(match) {\r\n                    // trim\r\n                    scope[match] = 0;\r\n                    // check if letter is too large\r\n                    if (typeof(self.charToIndex(match)) == \"undefined\") {\r\n                        noMatch = \"Variable \" + match + \" does not match any layers\"\r\n                    } else if (self.domain && self.layerTabs[self.charToIndex(match)].dataContext.domainVersionID !== self.domain) {\r\n                        noMatch = \"Layer \" + match + \" does not match the chosen domain\"\r\n                    }\r\n                });\r\n                if (noMatch.length > 0) return noMatch;\r\n            }\r\n            return null;\r\n        } catch(err) {\r\n            return err.message\r\n        }\r\n    }\r\n\r\n    /**\r\n     * open upload new layer prompt\r\n     */\r\n    openUploadPrompt(): void {\r\n        var input = (<HTMLInputElement>document.getElementById(\"uploader\"));\r\n        input.click();\r\n    }\r\n\r\n    /**\r\n     * Dialog to upgrade version if layer is not the latest version\r\n     */\r\n    versionUpgradeDialog(viewModel): Promise<any> {\r\n        let dataPromise: Promise<any> = new Promise((resolve, reject) => {\r\n            let currVersion = this.dataService.getCurrentVersion().number;\r\n            if (viewModel.version !== currVersion) { // ask to upgrade\r\n                let dialog = this.dialog.open(VersionUpgradeComponent, {\r\n                    data: {\r\n                        layerName: viewModel.name,\r\n                        vmVersion: viewModel.version,\r\n                        currVersion: currVersion\r\n                    },\r\n                    disableClose: true,\r\n                    width: \"25%\",\r\n                    panelClass: this.userTheme\r\n                });\r\n                let subscription = dialog.afterClosed().subscribe({\r\n                    next: (result) => {\r\n                        if (!result.upgrade && !this.dataService.isSupported(viewModel.version)) {\r\n                            reject(\"Uploaded layer version (\" + String(viewModel.version) + \") is not supported by Navigator v\" + globals.nav_version)\r\n                        }\r\n                        if (result.upgrade) {\r\n                            let newDomainVersionID = this.dataService.getDomainVersionID(viewModel.domain, currVersion);\r\n                            resolve({oldID: viewModel.domainVersionID, newID: newDomainVersionID});\r\n                        }\r\n                        resolve(null);\r\n                    },\r\n                    complete: () => { if (subscription) subscription.unsubscribe(); } //prevent memory leaks\r\n                });\r\n            } else resolve(null); // layer is already current version\r\n        });\r\n        return dataPromise;\r\n    }\r\n\r\n    /**\r\n     * check if the layer needs to be upgraded and initialize the layer upgrade process if the user accepts the resultant dialog\r\n     * @param oldViewModel: blank viewmodel to upgrade\r\n     * @param serialized the viewmodel's raw serialized JSON string\r\n     * @param replace: replace if true, replace the current active tab with the layer\r\n     * @param defaultLayers: is this a layer being loaded by default (from the config or query string)?\r\n     *                       if so, will act as if the user decided not to upgrade the layer\r\n     */\r\n    layerUpgrade(oldViewModel: ViewModel, serialized: any, replace: boolean, defaultLayers: boolean = false): Promise<any> {\r\n        return new Promise((resolve, reject) => {\r\n            if (!defaultLayers) { \r\n            this.versionUpgradeDialog(oldViewModel)\r\n                .then((versions) => {\r\n                    if (versions) { // user upgraded to latest version\r\n                        // create and open the latest version\r\n                        let newViewModel = this.viewModelsService.newViewModel(\"loading layer...\", undefined);\r\n                        newViewModel.name = oldViewModel.name;\r\n                        newViewModel.domainVersionID = versions.newID; // update domainVersionID to new ID\r\n                        newViewModel.version = this.dataService.getCurrentVersion().number; // update version to new ID\r\n                        newViewModel.loadVMData();\r\n                        newViewModel.compareTo = oldViewModel;\r\n                        this.openTab(\"new layer\", newViewModel, true, replace, true, true);\r\n                        newViewModel.sidebarOpened = true;\r\n                        newViewModel.sidebarContentType = 'layerUpgrade'\r\n                        newViewModel.selectTechniquesAcrossTactics = false;\r\n        \r\n                        // load layer version & latest ATT&CK version\r\n                        let loads: any = {};\r\n                        if (!this.dataService.getDomain(versions.oldID).dataLoaded) loads.old = this.dataService.loadDomainData(versions.oldID, true);\r\n                        if (!this.dataService.getDomain(versions.newID).dataLoaded) loads.new = this.dataService.loadDomainData(versions.newID, true);\r\n                        if (Object.keys(loads).length) { //needs to fetch data\r\n                            let dataSubscription = forkJoin(loads).subscribe({\r\n                                next: () => {\r\n                                    newViewModel.versionChangelog = this.dataService.compareVersions(versions.oldID, versions.newID);\r\n                                    // load vm for uploaded layer\r\n                                    oldViewModel.deSerialize(serialized);\r\n                                    oldViewModel.loadVMData();\r\n                                    newViewModel.initCopyAnnotations();\r\n                                    resolve(null);\r\n                                },\r\n                                complete: () => { dataSubscription.unsubscribe(); }\r\n                            });\r\n                        } else { // did not need to fetch data\r\n                            newViewModel.versionChangelog = this.dataService.compareVersions(versions.oldID, versions.newID);\r\n                            // load vm for uploaded layer\r\n                            oldViewModel.deSerialize(serialized);\r\n                            oldViewModel.loadVMData();\r\n                            newViewModel.initCopyAnnotations();\r\n                            resolve(null);\r\n                        }\r\n                    } else { // user did not upgrade, keep the old version\r\n                        this.openTab(\"new layer\", oldViewModel, true, replace, true, true);\r\n                        if (!this.dataService.getDomain(oldViewModel.domainVersionID).dataLoaded) {\r\n                            this.dataService.loadDomainData(oldViewModel.domainVersionID, true).then( () => {\r\n                                oldViewModel.deSerialize(serialized);\r\n                                oldViewModel.loadVMData();\r\n                                resolve(null);\r\n                            });\r\n                        } else {\r\n                            oldViewModel.deSerialize(serialized);\r\n                            oldViewModel.loadVMData();\r\n                            resolve(null);\r\n                        }\r\n                    }\r\n                })\r\n                .catch( (err) => {\r\n                    console.error(err);\r\n                    alert(\"ERROR parsing file, check the javascript console for more information.\");\r\n                    resolve(null);\r\n                });\r\n            } else { // is a default layer, do not upgrade\r\n                this.openTab(\"new layer\", oldViewModel, true, replace, true, true);\r\n                if (!this.dataService.getDomain(oldViewModel.domainVersionID).dataLoaded) {\r\n                    this.dataService.loadDomainData(oldViewModel.domainVersionID, true).then( () => {\r\n                        oldViewModel.deSerialize(serialized);\r\n                        oldViewModel.loadVMData();\r\n                        resolve(null);\r\n                    });\r\n                } else {\r\n                    oldViewModel.deSerialize(serialized);\r\n                    oldViewModel.loadVMData();\r\n                    resolve(null);\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    /**\r\n     * Loads an existing layer into a tab\r\n     */\r\n    loadLayerFromFile(): void {\r\n        var input = (<HTMLInputElement>document.getElementById(\"uploader\"));\r\n        if(input.files.length < 1){\r\n            alert(\"You must select a file to upload!\")\r\n            return;\r\n        }\r\n        this.readJSONFile(input.files[0]);\r\n    }\r\n\r\n    /**\r\n     * Retrieves a file from the input element,\r\n     * reads the json,\r\n     * and adds the properties to a new viewModel, and loads that viewmodel into a new layer.\r\n     */\r\n    readJSONFile(file: File) {\r\n        var reader = new FileReader();\r\n        let viewModel = this.viewModelsService.newViewModel(\"loading layer...\", undefined);\r\n\r\n        reader.onload = (e) =>{\r\n            var result = String(reader.result);\r\n            try{\r\n                let obj = (typeof(result) == \"string\")? JSON.parse(result) : result\r\n                viewModel.deSerializeDomainVersionID(obj);\r\n                let isCustom = \"customDataURL\" in obj ? true : false;\r\n                if (!isCustom) {\r\n                    if (!this.dataService.getDomain(viewModel.domainVersionID)) {\r\n                        throw {message: \"Error: '\" + viewModel.domain + \"' (v\" + viewModel.version + \") is an invalid domain.\"};\r\n                    }\r\n                    this.layerUpgrade(viewModel, obj, true);\r\n                } else {\r\n                    // load custom data\r\n                    viewModel.deSerialize(obj);\r\n                    this.openTab(\"new layer\", viewModel, true, true, true, true);\r\n                    this.newLayerFromURL({\r\n                        'url': obj['customDataURL'],\r\n                        'version': viewModel.version,\r\n                        'identifier': viewModel.domain\r\n                    }, obj);\r\n                }\r\n            }\r\n            catch(err){\r\n                console.error(\"ERROR: Either the file is not JSON formatted, or the file structure is invalid.\", err);\r\n                alert(\"ERROR: Either the file is not JSON formatted, or the file structure is invalid.\");\r\n                this.viewModelsService.destroyViewModel(viewModel);\r\n            }\r\n        }\r\n        reader.readAsText(file);\r\n    }\r\n\r\n    loadURL: string = \"\";\r\n    /**\r\n     * attempt an HTTP GET to loadURL, and load the response (if it exists) as a layer.\r\n     * @param loadURL the url to load\r\n     * @param replace replace the current active with the loaded layer?\r\n     * @param defaultLayers is this loading reflecting a set of default layers (from the config file or from the query string)?\r\n     * \r\n     */\r\n    async loadLayerFromURL(loadURL, replace, defaultLayers = false): Promise<any> {\r\n        return new Promise(async(resolve, reject) => {\r\n            // if (!loadURL.startsWith(\"http://\") && !loadURL.startsWith(\"https://\") && !loadURL.startsWith(\"FTP://\")) loadURL = \"https://\" + loadURL;\r\n            let subscription = this.http.get(loadURL).subscribe({\r\n                next: async (res) => {\r\n                    let viewModel = this.viewModelsService.newViewModel(\"loading layer...\", undefined);\r\n                    try {\r\n                        viewModel.deSerializeDomainVersionID(res);\r\n                        if (!this.dataService.getDomain(viewModel.domainVersionID)) {\r\n                            throw {message: \"Error: '\" + viewModel.domain + \"' (v\" + viewModel.version + \") is an invalid domain.\"};\r\n                        }\r\n                        await this.layerUpgrade(viewModel, res, replace, defaultLayers);\r\n                        console.log(\"loaded layer from\", loadURL);\r\n                        resolve(null); //continue\r\n                    } catch(err) {\r\n                        console.error(err)\r\n                        this.viewModelsService.destroyViewModel(viewModel);\r\n                        alert(\"ERROR parsing layer from \" + loadURL + \", check the javascript console for more information.\")\r\n                        resolve(null); //continue\r\n                    }\r\n                },\r\n                error: (err) => {\r\n                    console.error(err)\r\n                    if (err.status == 0) {\r\n                        // no response\r\n                        alert(\"ERROR retrieving layer from \" + loadURL + \", check the javascript console for more information.\")\r\n                    } else {\r\n                        // response, but not a good one\r\n                        alert(\"ERROR retrieving layer from \" + loadURL + \", check the javascript console for more information.\")\r\n                    }\r\n                    resolve(null); //continue\r\n                },\r\n                complete: () => { if (subscription) subscription.unsubscribe(); } //prevent memory leaks\r\n            });\r\n        });\r\n    }\r\n\r\n\r\n    //   ___ _   _ ___ _____ ___  __  __ ___ _______ ___    _  _   ___   _____ ___   _ _____ ___  ___   ___ _____ _   _ ___ ___\r\n    //  / __| | | / __|_   _/ _ \\|  \\/  |_ _|_  / __|   \\  | \\| | /_\\ \\ / /_ _/ __| /_\\_   _/ _ \\| _ \\ / __|_   _| | | | __| __|\r\n    // | (__| |_| \\__ \\ | || (_) | |\\/| || | / /| _|| |) | | .` |/ _ \\ V / | | (_ |/ _ \\| || (_) |   / \\__ \\ | | | |_| | _|| _|\r\n    //  \\___|\\___/|___/ |_| \\___/|_|  |_|___/___|___|___/  |_|\\_/_/ \\_\\_/ |___\\___/_/ \\_\\_| \\___/|_|_\\ |___/ |_|  \\___/|_| |_|\r\n    // layerLinkURL = \"\"; //the user inputted layer link which will get parsed into a param\r\n    layerLinkURLs: string[] = [];\r\n    customizedConfig = [];\r\n    bannerContent: string;\r\n\r\n    /**\r\n     * Helper function to track which layerLinkURLs have been added or removed\r\n     */\r\n    trackByFunction(index: number, obj: any): any {\r\n        return index;\r\n    }\r\n\r\n    /**\r\n     * Add a new empty layer link to the layerLinkURLs array\r\n     */\r\n    addLayerLink(): void {\r\n        this.layerLinkURLs.push(\"\");\r\n    }\r\n\r\n    /**\r\n     * Remove the given layer link URL from layerLinkURLs\r\n     * @param {number} index the index to remove\r\n     */\r\n    removeLayerLink(index: number): void {\r\n        console.log(\"removing index\", index)\r\n        console.log(this.layerLinkURLs);\r\n        if (this.layerLinkURLs.length == 1) this.layerLinkURLs = [];\r\n        else this.layerLinkURLs.splice(index, 1);\r\n        console.log(this.layerLinkURLs);\r\n    }\r\n\r\n    /**\r\n     * Convert layerLinkURL to a query string value for layerURL query string\r\n     * @return URL such that when opened will create navigator instance with a query String\r\n     *         specifying layerLinkURL as the URL to fetch the default layer from\r\n     */\r\n    getLayerLink(): string {\r\n        // if (!this.layerLinkURL) return \"\";\r\n        let str = window.location.href.split(\"#\")[0];\r\n        let join = \"#\" //hash first, then ampersand\r\n        for (let layerLinkURL of this.layerLinkURLs) {\r\n            str += join + \"layerURL=\" + encodeURIComponent(layerLinkURL)\r\n            join = \"&\";\r\n        }\r\n        for (let i = 0; i < this.customizedConfig.length; i++) {\r\n            if (this.customizedConfig[i].subfeatures) {\r\n                for (let j = 0; j < this.customizedConfig[i].subfeatures.length; j++) {\r\n                    if (!this.customizedConfig[i].subfeatures[j].enabled) {\r\n                        str += join + this.customizedConfig[i].subfeatures[j].name + \"=false\"\r\n                        join = \"&\";\r\n                    }\r\n                }\r\n            } else {\r\n                if (!this.customizedConfig[i].enabled) {\r\n                    str += join + this.customizedConfig[i].name + \"=false\"\r\n                    join = \"&\";\r\n                }\r\n            }\r\n        }\r\n\r\n        return str\r\n    }\r\n    /**\r\n     * Select the layer link field text\r\n     */\r\n    selectLayerLink(): void {\r\n        let copyText = <HTMLInputElement>document.getElementById(\"layerLink\");\r\n        console.log(copyText)\r\n        console.log(copyText.value)\r\n        copyText.select();\r\n    }\r\n\r\n    copiedRecently = false; // true if copyLayerLink has been called recently -- reverts to false after 2 seconds\r\n    /**\r\n     * copy the created layer link to the user's clipboard\r\n     */\r\n    copyLayerLink(): void {\r\n        console.log(\"attempting copy\")\r\n        this.selectLayerLink();\r\n        document.execCommand(\"Copy\");\r\n        this.copiedRecently = true;\r\n        let self = this;\r\n        window.setTimeout(function() {self.copiedRecently = false}, 2000);\r\n    }\r\n\r\n    /**\r\n     * Return true if the text is only letters a-z, false otherwise\r\n     * @param  text text to eval\r\n     * @return      true if a-z, false otherwise\r\n     */\r\n    alphabetical(text: string): boolean {\r\n        return /^[a-z]+$/.test(text);\r\n    }\r\n\r\n    /**\r\n     * get a key=value fragment value by key\r\n     * @param  {string} name name of param to get the value of\r\n     * @param  {string} url  optional, if unspecified searches in current window location. Otherwise searches this string\r\n     * @return {string}      fragment param value\r\n     */\r\n    getNamedFragmentValue(name: string, url?: string): any {\r\n\r\n        if (!url) url = window.location.href;\r\n        name = name.replace(/[\\[\\]]/g, \"\\\\$&\");\r\n        var regex = new RegExp(\"[#&]\" + name + \"(?:=([^&#]*)|&|#|$)\", \"g\");\r\n        //match as many results as exist under the name\r\n        let results = [];\r\n        let match = regex.exec(url);\r\n        while (match != null) {\r\n            results.push(decodeURIComponent(match[1].replace(/\\+/g, \" \")));\r\n            match = regex.exec(url);\r\n        }\r\n        return results\r\n    }\r\n\r\n}\r\n\r\nexport class Tab {\r\n    title: string;\r\n    dataContext;\r\n    domain: string = \"\";\r\n    isDataTable: boolean;\r\n\r\n    isCloseable: boolean = false;\r\n    showScoreVariables: boolean = false;\r\n\r\n    constructor(title: string, isCloseable: boolean, showScoreVariables: boolean, domain: string, dataTable: boolean) {\r\n        this.title = title;\r\n        this.isCloseable = isCloseable;\r\n        this.showScoreVariables = showScoreVariables;\r\n        this.domain = domain;\r\n        this.isDataTable = dataTable;\r\n    }\r\n}\r\n","<div [style.margin-top]=\"adjustedHeaderHeight+'px'\" class=\"header-wrapper\">\r\n<!-- Banner -->\r\n<div *ngIf=\"hasFeature('header') && bannerContent\" class=\"header\">\r\n    <div class=\"banner\">\r\n        <span class=\"bannerContent\" role=\"alert\" [innerHTML]=\"bannerContent\"></span>\r\n        <div [style.margin-bottom]=\"hasFeature('tabs') ? '0px' : '15px'\" class=\"bannerLinks\">\r\n            <div>\r\n                <a href=\"http://attack.mitre.org\">MITRE ATT&CK&reg; Navigator</a>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<!-- Header/Help -->\r\n<div *ngIf=\"hasFeature('header') && !bannerContent\" [style.margin-bottom]=\"hasFeature('tabs') ? '0px' : '15px'\"\r\n     class=\"header help-header\">\r\n    <div *ngIf=\"hasFeature('tabs')\" class=\"help-button\" [ngClass]=\"{'help-dropdown-open' : showHelpDropDown}\"\r\n         matTooltip=\"help\" (click)=\"showHelpDropDown = !showHelpDropDown\">\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#9aa0a6\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M11 18h2v-2h-2v2zm1-16C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zm0-14c-2.21 0-4 1.79-4 4h2c0-1.1.9-2 2-2s2 .9 2 2c0 2-3 1.75-3 5h2c0-2.25 3-2.5 3-5 0-2.21-1.79-4-4-4z\"/></svg>\r\n    </div>\r\n    <div class=\"dropdown-container\" *ngIf=\"showHelpDropDown && adjustedHeaderHeight >= 0\">\r\n        <button (click)=\"openDialog('help')\">help</button>\r\n        <button (click)=\"openDialog('changelog')\">changelog</button>\r\n    </div>\r\n</div>\r\n\r\n\r\n<!-- Tabs display -->\r\n<div class=\"tabs-container\">\r\n    <nav mat-tab-nav-bar class=\"tabs\">\r\n        <a mat-tab-link\r\n           class=\"tab-title\"\r\n           [class.active]=\"activeTab === tab\"\r\n           *ngFor=\"let tab of layerTabs; let $i = index\"\r\n           (click)=\"handleTabClick(tab)\"\r\n           [active]=\"activeTab === tab\">\r\n            {{tab.isDataTable ? tab.dataContext.name : tab.title}}\r\n            <span class=\"tab-close\" *ngIf=\"tab.isCloseable\" (click)=\"closeTab(tab)\">\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" [attr.fill]=\"activeTab === tab ? '#000000' : '#9aa0a6'\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"/></svg>\r\n            </span>\r\n            <!-- tab enumerator (for layer operations) -->\r\n            <span class=\"tabEnumerator\" *ngIf=\"getActiveTab().showScoreVariables && tab.isDataTable && (!domain || tab.domain === domain) && alphabetical(indexToChar($i))\">{{indexToChar($i)}}</span>\r\n        </a>\r\n        <a mat-tab-link class=\"addTab\" *ngIf=\"layerTabs.length < 10\" (click)=\"newBlankTab()\">\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#9aa0a6\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"/></svg>\r\n        </a>\r\n    </nav>\r\n</div>\r\n\r\n\r\n<div *ngIf=\"layerTabs.length == 0\" class=\"newTab\">\r\n    <!-- you shouldn't ever see this, but just in case -->\r\n    <button (click)=\"newBlankTab()\">Start</button>\r\n</div>\r\n\r\n</div>\r\n\r\n\r\n<ng-template #safariWarning>\r\n    <div class=\"safari-warning\">\r\n        <h3>WARNING</h3>\r\n        <p>\r\n            We’ve detected that you are using the Safari browser. As of Navigator version <b>4.3</b>, Safari versions 13\r\n            and below are not supported due to an unfixable freeze that can occur when selecting a layer tab.\r\n        </p>\r\n        <p>\r\n            We recommend you use Chrome or Firefox instead. You can continue to use the Navigator in Safari (versions 13\r\n            and below), but you may lose work if the application freezes.\r\n        </p>\r\n        <button mat-button (click)=\"safariDialogRef.close()\">Dismiss</button>\r\n    </div>\r\n</ng-template>\r\n\r\n<!-- New tab template -->\r\n<ng-template [ngIf]=\"activeTab && !activeTab.isDataTable\">\r\n    <div class=\"newTab\">\r\n        <div class=\"description\">\r\n            <div class=\"logo\">\r\n                <h1><a href=\"http://attack.mitre.org\">MITRE ATT&CK&reg; Navigator</a></h1>\r\n            </div>\r\n            <div>\r\n                <p>\r\n                    The ATT&CK Navigator is a web-based tool for annotating and exploring ATT&CK matrices. It can be\r\n                    used to visualize defensive coverage, red/blue team planning, the frequency of detected techniques,\r\n                    and more.\r\n                </p>\r\n            </div>\r\n            <!-- Help dialog -->\r\n            <div class=\"help-links-container\">\r\n                <button mat-button (click)=\"openDialog('help')\">help</button>\r\n                <button mat-button (click)=\"openDialog('changelog')\">changelog</button>\r\n\r\n\r\n                <button mat-button (click)=\"select.open()\" class=\"theme-select-container\">\r\n                    <mat-label>\r\n                        theme ▾\r\n                    </mat-label>\r\n                    <mat-select #select (selectionChange)=\"handleUserThemeChange($event.value)\">\r\n                        <mat-option value=\"dark\">dark</mat-option>\r\n                        <mat-option value=\"light\">light</mat-option>\r\n                        <mat-option value=\"system\">use system</mat-option>\r\n                    </mat-select>\r\n                </button>\r\n            </div>\r\n        </div>\r\n        <mat-accordion class=\"headers-align\">\r\n\r\n            <!-- Create new layer interface -->\r\n            <mat-expansion-panel #newlayer>\r\n                <mat-expansion-panel-header>\r\n                    <mat-panel-title>\r\n                        Create New Layer\r\n                    </mat-panel-title>\r\n                    <mat-panel-description>\r\n                        Create a new empty layer\r\n                    </mat-panel-description>\r\n                </mat-expansion-panel-header>\r\n\r\n                <!-- Domain buttons for latest version -->\r\n                <table class=\"btn-group\" role=\"group\">\r\n                    <ng-template ngFor let-domain [ngForOf]=\"filterDomains(ds.versions[0])\" let-domainIndex=\"index\">\r\n                        <td>\r\n                            <button mat-raised-button (click)=\"newLayer(domain.id)\">{{domain.name}}</button>\r\n                        </td>\r\n                    </ng-template>\r\n                </table>\r\n\r\n                <!-- More domain/version options -->\r\n                <mat-expansion-panel>\r\n                    <mat-expansion-panel-header>\r\n                        <mat-panel-title>\r\n                            More Options\r\n                        </mat-panel-title>\r\n                    </mat-expansion-panel-header>\r\n\r\n                    <table class=\"inputTable\">\r\n                        <tr>\r\n                            <!-- Load data from different version -->\r\n                            <td class=\"width-lg\">\r\n                                <!-- Choose version -->\r\n                                <mat-form-field>\r\n                                    <mat-select placeholder=\"Choose a version\" [(ngModel)]=\"nVersion\" required>\r\n                                        <mat-option [value]=\"null\">none</mat-option>\r\n                                        <mat-option *ngFor=\"let nVersion of this.dataService.versions\"\r\n                                                    [value]=\"nVersion\">{{nVersion.name}}</mat-option>\r\n                                    </mat-select>\r\n                                </mat-form-field>\r\n                                <!-- Choose domain -->\r\n                                <mat-form-field>\r\n                                    <mat-select placeholder=\"Choose a domain\" [(ngModel)]=\"nDomain\" [disabled]=\"!nVersion\"\r\n                                                required>\r\n                                        <mat-option [value]=\"null\">none</mat-option>\r\n                                        <mat-option *ngFor=\"let nDomain of filterDomains(nVersion)\"\r\n                                                    [value]=nDomain>{{nDomain.name}}</mat-option>\r\n                                    </mat-select>\r\n                                </mat-form-field>\r\n                                <div>\r\n                                    <em>* Official ATT&CK Versions prior to {{ds.lowestSupportedVersion.name}} are not supported by Navigator v{{nav_version}}.</em>\r\n                                </div>\r\n                            </td>\r\n\r\n                            <td class=\"width-sm\"><b style=\"font-size: 8pt\">OR</b></td>\r\n    \r\n                            <!-- Load data from collection or STIX bundle URL -->\r\n                            <td class=\"width-lg\">\r\n                                <mat-form-field>\r\n                                    <input type=\"url\" matInput placeholder=\"Collection or STIX bundle URL\" [(ngModel)]=\"loadData.url\"/>\r\n                                </mat-form-field>\r\n                                <mat-form-field>\r\n                                    <input type=\"number\" matInput placeholder=\"Version number\" [(ngModel)]=\"loadData.version\"/>\r\n                                    <mat-hint>ATT&CK version (e.g. 12)</mat-hint>\r\n                                </mat-form-field>\r\n                                <mat-form-field>\r\n                                    <input type=\"text\" matInput placeholder=\"Domain\" [(ngModel)]=\"loadData.identifier\"/>\r\n                                    <mat-hint>Domain identifier (e.g. defending-iaas)</mat-hint>\r\n                                </mat-form-field>\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td class=\"width-lg\">\r\n                                <button style=\"margin-top: 20px\" mat-button [disabled]=\"!nVersion || !nDomain\" (click)=\"newLayer(nDomain.id)\">\r\n                                    Create layer from Version\r\n                                </button>\r\n                            </td>\r\n                            <td class=\"width-sm\"></td>\r\n                            <td class=\"width-lg\">\r\n                                <button style=\"margin-top: 20px\" mat-button [disabled]=\"!loadData.url || !loadData.version || !loadData.identifier\" (click)=\"newLayerFromURL(loadData)\">\r\n                                    Create layer from URL\r\n                                </button>\r\n                            </td>\r\n                        </tr>\r\n                    </table>\r\n                </mat-expansion-panel>\r\n            </mat-expansion-panel>\r\n\r\n            <!-- Open existing layer interface -->\r\n            <mat-expansion-panel>\r\n                <mat-expansion-panel-header>\r\n                    <mat-panel-title>\r\n                        Open Existing Layer\r\n                    </mat-panel-title>\r\n                    <mat-panel-description>\r\n                        Load a layer from your computer or a URL\r\n                    </mat-panel-description>\r\n                </mat-expansion-panel-header>\r\n                <table class=\"inputTable\">\r\n                    <tr>\r\n                        <!-- Upload file from local -->\r\n                        <td>\r\n                            <button mat-button (click)=\"openUploadPrompt()\">Upload from local</button>\r\n                            <input id=\"uploader\" type=\"file\" style=\"display: none\" (change)=\"loadLayerFromFile()\"/></td>\r\n\r\n                        <td><b style=\"font-size: 8pt\">OR</b></td>\r\n\r\n                        <!-- Upload layer via URL -->\r\n                        <td>\r\n                            <mat-form-field>\r\n                                <input type=\"text\"\r\n                                       matInput\r\n                                       placeholder=\"Load from URL\"\r\n                                       [(ngModel)]=\"loadURL\"/>\r\n                                <button mat-button matSuffix mat-icon-button aria-label=\"go\" *ngIf=\"loadURL\"\r\n                                        (click)=\"loadLayerFromURL(loadURL, true)\">>\r\n                                </button>\r\n                            </mat-form-field>\r\n                        </td>\r\n                    </tr>\r\n                </table>\r\n            </mat-expansion-panel>\r\n\r\n            <!-- Create layer from other layers -->\r\n            <mat-expansion-panel (opened)=\"activeTab.showScoreVariables = true\"\r\n                                 (closed)=\"activeTab.showScoreVariables = false\">\r\n                <mat-expansion-panel-header>\r\n                    <mat-panel-title>\r\n                        Create Layer from other layers\r\n                    </mat-panel-title>\r\n                    <mat-panel-description>\r\n                        Choose layers to inherit properties from\r\n                    </mat-panel-description>\r\n                </mat-expansion-panel-header>\r\n\r\n                <table class=\"layerOpTable\">\r\n                    <!-- Domain -->\r\n                    <tr>\r\n                        <td>\r\n                            <mat-form-field>\r\n                                <mat-select placeholder=\"domain\" [(ngModel)]=\"domain\" required>\r\n                                    <mat-option [value]=\"null\">none</mat-option>\r\n                                    <mat-option *ngFor=\"let domain of this.dataService.domains\"\r\n                                                [value]=domain.id>{{domain.name}} {{domain.version.name}}</mat-option>\r\n                                </mat-select>\r\n                            </mat-form-field>\r\n                        </td>\r\n                        <td>\r\n                            Choose the domain and version for the new layer. Only layers of the same domain and version\r\n                            can be merged.\r\n                        </td>\r\n                    </tr>\r\n\r\n                    <!-- Score expression -->\r\n                    <tr>\r\n                        <td>\r\n                            <mat-form-field>\r\n                                <input type=\"text\"\r\n                                       matInput\r\n                                       placeholder=\"score expression\"\r\n                                       [disabled]=\"!domain\"\r\n                                       [(ngModel)]=\"scoreExpression\"\r\n                                       (keyup)=\"scoreExpression = scoreExpression.toLowerCase()\"\r\n                                       style=\"letter-spacing: 2px\"/>\r\n                                <mat-hint style=\"color: red\" align=\"start\">{{getScoreExpressionError()}}</mat-hint>\r\n                            </mat-form-field>\r\n                        </td>\r\n                        <td [ngClass]=\"{disabled: !domain}\">\r\n                            Use constants (numbers) and layer variables (yellow, above) to write an expression for the\r\n                            initial value of scores in the new layer. A full list of supported operations can be found\r\n                            <a href=\"http://mathjs.org/docs/expressions/syntax.html#operators\">here</a>. Leave blank to\r\n                            initialize scores to 0. Here's a list of available layer variables:\r\n                            <ul *ngFor=\"let tab of layerTabs; let $i = index\">\r\n                                <li *ngIf=\"getActiveTab().showScoreVariables && tab.isDataTable && (!domain || tab.domain === domain) && alphabetical(indexToChar($i))\"><span class=\"tab-enumerator\">{{indexToChar($i)}}</span> ({{tab.title}})</li>\r\n                            </ul>\r\n                        </td>\r\n                    </tr>\r\n\r\n                    <!-- Gradient -->\r\n                    <tr>\r\n                        <td>\r\n                            <mat-form-field>\r\n                                <mat-select placeholder=\"gradient\" [(ngModel)]=\"gradient\" [disabled]=\"!domain\">\r\n                                    <mat-option [value]=\"null\">none</mat-option>\r\n                                    <mat-option *ngFor=\"let vm of getLayers()\" [value]=vm>{{vm.name}}</mat-option>\r\n                                </mat-select>\r\n                            </mat-form-field>\r\n                        </td>\r\n                        <td [ngClass]=\"{disabled: !domain}\">\r\n                            Choose which layer to import the scoring gradient from. Leave blank to initialize with the\r\n                            default scoring gradient.\r\n                        </td>\r\n                    </tr>\r\n\r\n                    <!-- Coloring -->\r\n                    <tr>\r\n                        <td>\r\n                            <mat-form-field>\r\n                                <mat-select placeholder=\"coloring\" [(ngModel)]=\"coloring\" [disabled]=\"!domain\">\r\n                                    <mat-option [value]=\"null\">none</mat-option>\r\n                                    <mat-option *ngFor=\"let vm of getLayers()\" [value]=vm>{{vm.name}}</mat-option>\r\n                                </mat-select>\r\n                            </mat-form-field>\r\n                        </td>\r\n                        <td [ngClass]=\"{disabled: !domain}\">\r\n                            Choose which layer to import manually assigned colors from. Leave blank to initialize with\r\n                            no colors.\r\n                        </td>\r\n                    </tr>\r\n\r\n                    <!-- Comments -->\r\n                    <tr>\r\n                        <td>\r\n                            <mat-form-field>\r\n                                <mat-select placeholder=\"comments\" [(ngModel)]=\"comments\" [disabled]=\"!domain\">\r\n                                    <mat-option [value]=\"null\">none</mat-option>\r\n                                    <mat-option *ngFor=\"let vm of getLayers()\" [value]=vm>{{vm.name}}</mat-option>\r\n                                </mat-select>\r\n                            </mat-form-field>\r\n                        </td>\r\n                        <td [ngClass]=\"{disabled: !domain}\">\r\n                            Choose which layer to import comments from. Leave blank to initialize with no comments.\r\n                        </td>\r\n                    </tr>\r\n\r\n                    <!-- Links -->\r\n                    <tr>\r\n                        <td>\r\n                            <mat-form-field>\r\n                                <mat-select placeholder=\"links\" [(ngModel)]=\"links\" [disabled]=\"!domain\">\r\n                                    <mat-option [value]=\"null\">none</mat-option>\r\n                                    <mat-option *ngFor=\"let vm of getLayers()\" [value]=vm>{{vm.name}}</mat-option>\r\n                                </mat-select>\r\n                            </mat-form-field>\r\n                        </td>\r\n                        <td [ngClass]=\"{disabled: !domain}\">\r\n                            Choose which layer to import technique links from. Leave blank to initialize without links.\r\n                        </td>\r\n                    </tr>\r\n\r\n                    <!-- Metadata -->\r\n                    <tr>\r\n                        <td>\r\n                            <mat-form-field>\r\n                                <mat-select placeholder=\"metadata\" [(ngModel)]=\"metadata\" [disabled]=\"!domain\">\r\n                                    <mat-option [value]=\"null\">none</mat-option>\r\n                                    <mat-option *ngFor=\"let vm of getLayers()\" [value]=vm>{{vm.name}}</mat-option>\r\n                                </mat-select>\r\n                            </mat-form-field>\r\n                        </td>\r\n                        <td [ngClass]=\"{disabled: !domain}\">\r\n                            Choose which layer to import technique metadata from. Leave blank to initialize without metadata.\r\n                        </td>\r\n                    </tr>\r\n\r\n                    <!-- States -->\r\n                    <tr>\r\n                        <td>\r\n                            <mat-form-field>\r\n                                <mat-select placeholder=\"states\" [(ngModel)]=\"enabledness\" [disabled]=\"!domain\">\r\n                                    <mat-option [value]=\"null\">none</mat-option>\r\n                                    <mat-option *ngFor=\"let vm of getLayers()\" [value]=vm>{{vm.name}}</mat-option>\r\n                                </mat-select>\r\n                            </mat-form-field>\r\n                        </td>\r\n                        <td [ngClass]=\"{disabled: !domain}\">\r\n                            Choose which layer to import enabled/disabled states from. Leave blank to initialize all to\r\n                            enabled.\r\n                        </td>\r\n                    </tr>\r\n\r\n                    <!-- Filters -->\r\n                    <tr>\r\n                        <td>\r\n                            <mat-form-field>\r\n                                <mat-select placeholder=\"filters\" [(ngModel)]=\"filters\" [disabled]=\"!domain\">\r\n                                    <mat-option [value]=\"null\">none</mat-option>\r\n                                    <mat-option *ngFor=\"let vm of getLayers()\" [value]=vm>{{vm.name}}</mat-option>\r\n                                </mat-select>\r\n                            </mat-form-field>\r\n                        </td>\r\n                        <td [ngClass]=\"{disabled: !domain}\">\r\n                            Choose which layer to import filters from. Leave blank to initialize with no filters.\r\n                        </td>\r\n                    </tr>\r\n\r\n                    <!-- Legend -->\r\n                    <tr>\r\n                        <td>\r\n                            <mat-form-field>\r\n                                <mat-select placeholder=\"legend\" [(ngModel)]=\"legendItems\" [disabled]=\"!domain\">\r\n                                    <mat-option [value]=\"null\">none</mat-option>\r\n                                    <mat-option *ngFor=\"let vm of getLayers()\" [value]=vm>{{vm.name}}</mat-option>\r\n                                </mat-select>\r\n                            </mat-form-field>\r\n                        </td>\r\n                        <td [ngClass]=\"{disabled: !domain}\">\r\n                            Choose which layer to import the legend from. Leave blank to initialize with an empty\r\n                            legend.\r\n                        </td>\r\n                    </tr>\r\n                </table>\r\n\r\n                <!-- Create -->\r\n                <button mat-button [disabled]=\"getScoreExpressionError() || !domain\"\r\n                        (click)=\"layerByOperation(); showScoreVariables = false\">Create\r\n                </button>\r\n            </mat-expansion-panel>\r\n\r\n            <!-- Customized Navigator-->\r\n            <mat-expansion-panel>\r\n                <mat-expansion-panel-header>\r\n                    <mat-panel-title>\r\n                        Create Customized Navigator\r\n                    </mat-panel-title>\r\n                    <mat-panel-description>\r\n                        Create a hyperlink to a customized ATT&CK Navigator\r\n                    </mat-panel-description>\r\n                </mat-expansion-panel-header>\r\n\r\n                <table class=\"inputTable\">\r\n                    <!-- Default layers -->\r\n                    <tr>\r\n                        <td><h1>Default Layers</h1></td>\r\n                        <td></td>\r\n                    </tr>\r\n                    <tr class=\"custom_nav_inputsection\">\r\n                        <td>\r\n                            <ul class=\"layerLinks\">\r\n                                <li *ngFor=\"let layerLinkURL of layerLinkURLs; let i = index trackBy:trackByFunction\">\r\n                                    <mat-form-field>\r\n                                        <input type=\"text\" matInput\r\n                                               [placeholder]=\"'default layer URL ' + (i + 1)\"\r\n                                               [(ngModel)]=\"layerLinkURLs[i]\"/>\r\n                                        <button mat-button matSuffix mat-icon-button aria-label=\"remove\"\r\n                                                (click)=\"removeLayerLink(i)\">\r\n                                            x\r\n                                        </button>\r\n                                    </mat-form-field>\r\n                                </li>\r\n                                <li>\r\n                                    <button mat-button (click)=\"addLayerLink()\">\r\n                                        add {{layerLinkURLs.length > 0 ? \"another\" : \"a\"}} layer link\r\n                                    </button>\r\n                                </li>\r\n                            </ul>\r\n                        </td>\r\n                        <td>Enter the URLs of layers hosted on the web. The custom navigator will open these layers by\r\n                            default.\r\n                        </td>\r\n                    </tr>\r\n\r\n                    <!-- Navigator Features -->\r\n                    <tr>\r\n                        <td><h1>Navigator Features</h1></td>\r\n                        <td></td>\r\n                    </tr>\r\n                    <ng-template ngFor let-featureItem [ngForOf]=\"customizedConfig\" let-featureItemIndex=\"index\">\r\n                        <!-- features -->\r\n                        <tr class=\"featureRow noselect\" *ngIf=\"!featureItem.subfeatures\"\r\n                            (click)=\"featureItem.enabled = !featureItem.enabled\">\r\n                            <td class=\"featureRow-button\">\r\n                                <ng-template [ngIf]=\"featureItem.enabled\">\r\n                                    <svg fill=\"currentColor\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                        <path d=\"M0 0h24v24H0z\" fill=\"none\"/>\r\n                                        <path d=\"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"/>\r\n                                    </svg>\r\n                                </ng-template>\r\n                                <ng-template [ngIf]=\"!featureItem.enabled\">\r\n                                    <svg fill=\"currentColor\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                        <path d=\"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"/>\r\n                                        <path d=\"M0 0h24v24H0z\" fill=\"none\"/>\r\n                                    </svg>\r\n                                </ng-template>\r\n                                {{featureItem.name.split(\"_\").join(\" \")}}\r\n                            </td>\r\n                            <td>{{featureItem.description}}</td>\r\n                        </tr>\r\n                        <!-- sub-featuers -->\r\n                        <tr *ngIf=\"featureItem.subfeatures\">\r\n                            <td>\r\n                                <h2>{{featureItem.name.split(\"_\").join(\" \")}}</h2>\r\n                            </td>\r\n                            <td></td>\r\n                        </tr>\r\n                        <ng-template ngFor let-subfeature [ngForOf]=\"featureItem.subfeatures\"\r\n                                     let-subfeatureIndex=\"index\" let-last=\"last\">\r\n                            <tr class=\"featureRow noselect\" (click)=\"subfeature.enabled = !subfeature.enabled\">\r\n                                <td class=\"featureRow-button subfeature\" [class.last]=\"last\" style=\"padding-left: 20px\">\r\n                                    <ng-template [ngIf]=\"subfeature.enabled\">\r\n                                        <svg fill=\"currentColor\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                            <path d=\"M0 0h24v24H0z\" fill=\"none\"/>\r\n                                            <path d=\"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"/>\r\n                                        </svg>\r\n                                    </ng-template>\r\n                                    <ng-template [ngIf]=\"!subfeature.enabled\">\r\n                                        <svg fill=\"currentColor\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                            <path d=\"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"/>\r\n                                            <path d=\"M0 0h24v24H0z\" fill=\"none\"/>\r\n                                        </svg>\r\n                                    </ng-template>\r\n                                    {{subfeature.name.split(\"_\").join(\" \")}}\r\n                                </td>\r\n                                <td class=\"subfeature\" [class.last]=\"last\">{{subfeature.description}}</td>\r\n                            </tr>\r\n                        </ng-template>\r\n                    </ng-template>\r\n                </table>\r\n\r\n                <!-- Custom Navigator URL -->\r\n                <div style=\"text-align: center; margin-top: 20px\">\r\n                    <mat-form-field id=\"layerlinkfield\">\r\n                        <input id=\"layerLink\" type=\"text\"\r\n                               matInput\r\n                               readonly=\"readonly\"\r\n                               (click)=\"selectLayerLink()\"\r\n                               [value]=\"getLayerLink()\"\r\n                               placeholder=\"custom navigator URL\"/>\r\n                        <button (click)=\"copyLayerLink()\" mat-button matSuffix mat-icon-button aria-label=\"copy\"><span class=\"layerLinkCopy\"\r\n                                matTooltip=\"copy\" matTooltipPosition=\"right\">\r\n                                <svg fill=\"currentColor\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                    <path d=\"M0 0h24v24H0z\" fill=\"none\"/>\r\n                                    <path d=\"M16 1H4c-1.1 0-2 .9-2 2v14h2V3h12V1zm3 4H8c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h11c1.1 0 2-.9 2-2V7c0-1.1-.9-2-2-2zm0 16H8V7h11v14z\"/>\r\n                                </svg>\r\n                            </span>\r\n                        </button>\r\n                        <mat-hint *ngIf=\"copiedRecently\">copied</mat-hint>\r\n                    </mat-form-field>\r\n                </div>\r\n            </mat-expansion-panel>\r\n        </mat-accordion>\r\n\r\n    </div>\r\n</ng-template>\r\n\r\n<ng-template [ngIf]=\"activeTab && activeTab.isDataTable\">\r\n    <DataTable [viewModel]=\"activeTab.dataContext\" [currentDropdown]=\"dropdownEnabled\" (dropdownChange)=\"dropdownEnabled = $event\" (onScroll)=\"adjustHeader($event)\"></DataTable>\r\n</ng-template>\r\n","import { Input, Directive } from '@angular/core';\r\nimport { Technique, Tactic, DataService } from '../data.service';\r\nimport { ViewModel } from '../viewmodels.service';\r\nimport { getCookie, hasCookie } from \"../cookies\";\r\nimport { ConfigService } from '../config.service';\r\nimport * as tinycolor from 'tinycolor2';\r\n\r\n@Directive()\r\nexport abstract class Cell {\r\n    @Input() viewModel: ViewModel;\r\n    @Input() technique: Technique;\r\n    @Input() tactic: Tactic;\r\n\r\n    public showContextmenu: boolean = false;\r\n    isDarkTheme: boolean;\r\n\r\n    constructor(public dataService: DataService, public configService: ConfigService) {\r\n        this.dataService = dataService;\r\n        this.configService = configService;\r\n        if (hasCookie(\"is_user_theme_dark\")) this.isDarkTheme = getCookie(\"is_user_theme_dark\") === \"true\";\r\n        else this.isDarkTheme = window.matchMedia(\"(prefers-color-scheme: dark)\").matches;\r\n    }\r\n\r\n    public get isHighlighted(): boolean {\r\n        let isHighlighted = this.showContextmenu;\r\n        let idToMatch = this.technique.id;\r\n        if (this.viewModel.selectSubtechniquesWithParent && this.technique.isSubtechnique) idToMatch = this.technique.parent.id;\r\n\r\n        if (this.viewModel.highlightedTechniques.has(idToMatch)) {\r\n            if (!this.viewModel.highlightedTactic) { // highlight is called from search component\r\n                return true;\r\n            } else {\r\n                const isTacticMatching = this.viewModel.highlightedTactic.id === this.tactic.id;\r\n                return (this.viewModel.selectTechniquesAcrossTactics || isTacticMatching);\r\n            }\r\n        }\r\n\r\n        return isHighlighted;\r\n    }\r\n\r\n    /**\r\n     * Return css classes for a technique\r\n     * @param  {technique} technique the technique to get the class of\r\n     * @param  {boolean}   mini is it the minitable?\r\n     * @return {string}               the classes the technique should currently have\r\n     */\r\n    public getClass(): string {\r\n        let theclass = 'link noselect cell'\r\n        if (this.tactic && this.viewModel.isTechniqueSelected(this.technique, this.tactic))\r\n            theclass += \" editing\"\r\n        if (this.isHighlighted) { //open context menu always keeps highlight even if the mouse has moved elsewhere\r\n            theclass += \" highlight\";\r\n        }\r\n\r\n        // classes added by layout config\r\n        if (this.viewModel.layout.showID)\r\n            theclass += \" showID\"\r\n        if (this.viewModel.layout.showName)\r\n            theclass += \" showName\"\r\n        theclass += \" \" + this.viewModel.layout.layout;\r\n\r\n        // classes according to annotations\r\n        if (this.tactic && this.viewModel.getTechniqueVM(this.technique, this.tactic).comment.length > 0 ||\r\n                this.viewModel.getTechniqueVM(this.technique, this.tactic).metadata.length > 0 ||\r\n                this.viewModel.getTechniqueVM(this.technique, this.tactic).links.length > 0 ||\r\n                this.hasNotes())\r\n            theclass += \" underlined\"\r\n        if (this.getTechniqueBackground())\r\n            theclass += \" colored\"\r\n        if (this.tactic && !this.viewModel.getTechniqueVM(this.technique, this.tactic).enabled)\r\n            theclass += \" disabled\"\r\n\r\n        return theclass\r\n    }\r\n\r\n    /**\r\n     * Emulate transparency without an alpha channel\r\n     * @param color color with alpha channel\r\n     * @returns color without an alpha channel which has been mixed with the proper background color as if it is transparent\r\n     */\r\n    private emulate_alpha(color: any) {\r\n        /* note: constructing a tinycolor of a tinycolor makes them aliases. E.g:\r\n         *\r\n         *    x = tinycolor(\"#ffffff\")\r\n         *    y = tinycolor(x)\r\n         *    y.getAlpha() -> 1\r\n         *    x.setAlpha(0)\r\n         *    y.getAlpha() -> 0\r\n         *\r\n         * Therefore y must be cloned after it is constructed to avoid transformations of x affecting it.\r\n         * In this context, the color arg must be cloned because\r\n         * in some contexts it is a tinycolor and we change its alpha below,\r\n         * which could affect the copy in the calling function\r\n         */\r\n        if (!color || color.length < 1) return \"\";\r\n        let cell_color = tinycolor(color).clone();\r\n        let cell_color_alpha = cell_color.getAlpha();\r\n        cell_color.setAlpha(1)\r\n        let result = tinycolor.mix(this.isDarkTheme ? \"#2e2e3f\" : \"#ffffff\", cell_color, cell_color_alpha * 100)\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Get most readable text color for the given technique\r\n     * @param  technique     the technique to get the text color for\r\n     * @param  antihighlight boolean, true if the column is not selected.\r\n     * @return               black, white, or gray, depending on technique and column state\r\n     */\r\n    public getTechniqueTextColor() {\r\n        if (!this.tactic) return this.isDarkTheme ? \"white\" : \"black\";\r\n        let tvm = this.viewModel.getTechniqueVM(this.technique, this.tactic)\r\n        if (!tvm.enabled) return this.isDarkTheme ? \"rgb(255 255 255 / 25%)\" : \"#aaaaaa\";\r\n        // don't display if disabled or highlighted\r\n        // if (this.viewModel.highlightedTechnique && this.viewModel.highlightedTechnique.technique_tactic_union_id == this.technique.technique_tactic_union_id) return \"black\"\r\n        if (tvm.color) return tinycolor.mostReadable(this.emulate_alpha(tvm.color), [\"white\", \"black\"]);\r\n        if (this.viewModel.layout.showAggregateScores && tvm.aggregateScoreColor) return tinycolor.mostReadable(this.emulate_alpha(tvm.aggregateScoreColor), [\"white\", \"black\"]);\r\n        if (tvm.score && !isNaN(Number(tvm.score))) return tinycolor.mostReadable(this.emulate_alpha(tvm.scoreColor), [\"white\", \"black\"]);\r\n        else return this.isDarkTheme ? \"white\" : \"black\";\r\n    }\r\n\r\n    /**\r\n     * Get the underline color for the given technique. The comment/metadata\r\n     * underscore color overrides the link underscore color.\r\n     */\r\n    public getTechniqueUnderlineColor() {\r\n        if (this.tactic) {\r\n            let tvm = this.viewModel.getTechniqueVM(this.technique, this.tactic);\r\n            if (tvm.comment.length > 0 || tvm.metadata.length > 0 || this.hasNotes()) {\r\n                if (this.configService.getFeature('comment_underline')) return this.configService.comment_color;\r\n            }\r\n            if (tvm.links.length > 0) {\r\n                if (this.configService.getFeature('link_underline')) return this.configService.link_color;\r\n            }\r\n        }\r\n        return '';\r\n    }\r\n\r\n    /**\r\n     * Check if technique has notes\r\n     * @return      true if technique has notes, false otherwise\r\n     */\r\n    public hasNotes() {\r\n        let domain = this.dataService.getDomain(this.viewModel.domainVersionID);\r\n        let notes = domain.notes.filter(note => {\r\n            return note.object_refs.includes(this.technique.id);\r\n        });\r\n        return notes.length > 0;\r\n    }\r\n\r\n    /**\r\n     * get the technique background style for ngstyle\r\n     * @param  technique technique\r\n     * @return           background object\r\n     */\r\n    public getTechniqueBackground(): any {\r\n        if (!this.tactic) return null;\r\n        let tvm = this.viewModel.getTechniqueVM(this.technique, this.tactic)\r\n        // don't display if disabled or highlighted\r\n        if (!tvm.enabled || this.isHighlighted) return null;\r\n        if (tvm.color) return { \"background\": this.emulate_alpha(tvm.color) }\r\n        if (this.viewModel.layout.showAggregateScores && !isNaN(Number(tvm.aggregateScore)) && tvm.aggregateScore.length > 0) return { \"background\": this.emulate_alpha(tvm.aggregateScoreColor) }\r\n        if (tvm.score) return { \"background\": this.emulate_alpha(tvm.scoreColor) }\r\n        // return tvm.enabled && tvm.score && !tvm.color && !(this.viewModel.highlightedTechnique && this.viewModel.highlightedTechnique.technique_id == technique.technique_id)\r\n    }\r\n}\r\n","import { Input, Output, EventEmitter, Directive } from '@angular/core';\r\nimport { Matrix, Technique, Tactic } from '../data.service';\r\nimport { ViewModel, ViewModelsService } from '../viewmodels.service';\r\nimport { ConfigService } from '../config.service';\r\nimport * as tinycolor from 'tinycolor2';\r\n\r\n@Directive()\r\nexport abstract class MatrixCommon {\r\n    @Input() matrix: Matrix;\r\n    @Input() viewModel: ViewModel;\r\n\r\n    constructor(private configService: ConfigService, private viewModelsService: ViewModelsService) {\r\n        this.configService = configService;\r\n    }\r\n\r\n\r\n    /**\r\n     * filter tactics according to viewmodel state\r\n     * @param {Tactic[]} tactics to filter\r\n     * @returns {Tactic[]} filtered tactics\r\n     */\r\n    public filterTactics(tactics: Tactic[]): Tactic[] {\r\n        return this.viewModel.filterTactics(tactics, this.matrix);\r\n    }\r\n\r\n    /**\r\n     * filter techniques according to viewModel state\r\n     * @param {Technique[]} techniques list of techniques to filter\r\n     * @param {Tactic} tactic tactic the techniques fall under\r\n     * @returns {Technique[]} filtered techniques\r\n     */\r\n    public filterTechniques(techniques: Technique[], tactic: Tactic): Technique[] {\r\n        return this.viewModel.filterTechniques(techniques, tactic, this.matrix);\r\n    }\r\n\r\n    /**\r\n     * sort techniques accoding to viewModel state\r\n     * @param {Technique[]} techniques techniques to sort\r\n     * @param {Tactic} tactic tactic the techniques fall under\r\n     * @returns {Technique[]} sorted techniques\r\n     */\r\n    public sortTechniques(techniques: Technique[], tactic: Tactic): Technique[] {\r\n        return this.viewModel.sortTechniques(techniques, tactic);\r\n    }\r\n\r\n    /**\r\n     * apply sort and filter state to techniques\r\n     * @param {Technique[]} techniques techniques to sort and filter\r\n     * @param {Tactic} tactic that the techniques fall under\r\n     * @returns {Technique[]} sorted and filtered techniques\r\n     */\r\n    public applyControls(techniques: Technique[], tactic: Tactic): Technique[] {\r\n        return this.viewModel.applyControls(techniques, tactic, this.matrix);\r\n    }\r\n\r\n\r\n    public onTechniqueLeftClick(event: any, technique: Technique, tactic: Tactic) {\r\n        if (!this.configService.getFeature('selecting_techniques')) {\r\n            //if selecting is disabled, same behavior as right click. Shouldn't ever get to this point because it should be handled in technique-cell\r\n            return;\r\n        }\r\n        if (event.shift || event.ctrl || event.meta) {\r\n            // add to selection\r\n            if (this.viewModel.isTechniqueSelected(technique, tactic)) this.viewModel.unselectTechnique(technique, tactic);\r\n            else this.viewModel.selectTechnique(technique, tactic)\r\n        } else {\r\n            // replace selection\r\n            if (this.viewModel.getSelectedTechniqueCount() > 1) {\r\n                if (this.viewModel.isTechniqueSelected)\r\n                this.viewModel.clearSelectedTechniques();\r\n                this.viewModel.selectTechnique(technique, tactic);\r\n            } else if (this.viewModel.isTechniqueSelected(technique, tactic))  { //unselect currently selected\r\n                this.viewModel.clearSelectedTechniques();\r\n            } else { //replace\r\n                this.viewModel.clearSelectedTechniques();\r\n                this.viewModel.selectTechnique(technique, tactic);\r\n            }\r\n        }\r\n        this.viewModelsService.onSelectionChange.emit();\r\n    }\r\n\r\n    public onToggleSubtechniquesVisible(technique: Technique, tactic: Tactic) {\r\n        if (technique.subtechniques.length == 0) return;\r\n        let tvm = this.viewModel.getTechniqueVM(technique, tactic);\r\n        tvm.showSubtechniques = !tvm.showSubtechniques;\r\n    }\r\n\r\n    public onTechniqueHighlight(event: any, technique: Technique, tactic: Tactic) {\r\n        this.viewModel.highlightTechnique(technique, tactic);\r\n    }\r\n    public onTechniqueUnhighlight(event: any) {\r\n        this.viewModel.clearHighlight();\r\n    }\r\n\r\n    public onTacticClick(tactic: Tactic) {\r\n        if (this.viewModel.isTacticSelected(tactic)) this.viewModel.unselectAllTechniquesInTactic(tactic);\r\n        else this.viewModel.selectAllTechniquesInTactic(tactic);\r\n    }\r\n\r\n    public get tacticRowStyle(): any {\r\n        return this.viewModel.showTacticRowBackground ? { \r\n            \"background\": this.viewModel.tacticRowBackground,\r\n            \"color\": tinycolor.mostReadable(this.viewModel.tacticRowBackground, ['white', 'black'])\r\n         } : {}\r\n    }\r\n}\r\n\r\n// export class TechniqueEvent {\r\n//     public readonly event: Event;\r\n//     public readonly technique: Technique;\r\n//     constructor(event, technique) {\r\n//         this.technique = technique;\r\n//         this.event = event;\r\n//     }\r\n// }\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"crnd\";","import { Component, Input, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { Link, Metadata, ViewModel } from '../viewmodels.service';\r\n\r\n@Component({\r\n    selector: 'app-list-input',\r\n    templateUrl: './list-input.component.html',\r\n    styleUrls: ['./list-input.component.scss'],\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\nexport class ListInputComponent implements OnInit {\r\n    @Input() config: ListInputConfig;\r\n    public list: (Link|Metadata)[];\r\n    private fieldToClass = {\r\n        \"links\": Link,\r\n        \"metadata\": Metadata\r\n    }\r\n    public get includeLinks(): boolean { return this.config.type == \"links\"; }\r\n\r\n    constructor() { }\r\n\r\n    ngOnInit(): void {\r\n        if (this.config.level == 'technique') {\r\n            this.list = this.config.list.map(item => {\r\n                let clone = new this.fieldToClass[this.config.type]();\r\n                clone.deSerialize(item.serialize());\r\n                return clone;\r\n            });\r\n        } else {\r\n            this.list = this.config.list;\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * Adds a new item to the list\r\n     */\r\n    public add(): void {\r\n        this.list.push(new this.fieldToClass[this.config.type]());\r\n    }\r\n\r\n    /**\r\n     * Removes an item from the list at the given index\r\n     * @param i the index of the item to remove\r\n     */\r\n    public remove(i: number): void {\r\n        if (this.list[i - 1] && this.list[i - 1].divider && this.list[i + 1] && this.list[i + 1].divider) {\r\n            this.list.splice(i - 1, 2);\r\n        } else {\r\n            this.list.splice(i, 1);\r\n        }\r\n\r\n        if (this.list[0] && this.list[0].divider) this.removeDivider(0);\r\n        if (this.list[this.list.length - 1] && this.list[this.list.length - 1].divider) this.removeDivider(this.list.length - 1);\r\n\r\n        this.updateList();\r\n    }\r\n\r\n    /**\r\n     * Validate items in the list and update the field on selected techniques\r\n     */\r\n    public updateList(): void {\r\n        let value = this.list.filter(item => item.valid());\r\n\r\n        if (this.config.level == 'technique') { // do not update techniques if editing a layer-level list\r\n            this.config.viewModel.editSelectedTechniqueValues(this.config.type, value);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Checks if a divider can be added at the previous index\r\n     * \r\n     * Note: a divider can only be added if both the items at the current and previous\r\n     * indices are valid non-divider items.\r\n     * \r\n     * @param i the current index\r\n     * @returns true, if a divider can be added, false otherwise\r\n     */\r\n    public canAddDivider(i: number): boolean {\r\n        if (i < 1) return false; // cannot add divider before the first item\r\n        if (this.list[i] && this.list[i].valid() && !this.list[i].divider && \r\n            this.list[i - 1] && this.list[i - 1].valid() && !this.list[i - 1].divider) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Add a divider at the given index\r\n     * @param i the index at which to add a divider\r\n     */\r\n    public addDivider(i: number): void {\r\n        let item = new this.fieldToClass[this.config.type]();\r\n        item.divider = true;\r\n        this.list.splice(i, 0, item);\r\n        this.updateList();\r\n    }\r\n\r\n    /**\r\n     * Remove a divider at the given index\r\n     * @param i the index of the divider to remove\r\n     */\r\n    public removeDivider(i: number): void {\r\n        this.list.splice(i, 1);\r\n        this.updateList();\r\n    }\r\n}\r\n\r\nexport interface ListInputConfig {\r\n    /** The viewmodel */\r\n    viewModel: ViewModel;\r\n    /** The list to edit */\r\n    list: (Link|Metadata)[];\r\n    /** The item type */\r\n    type: \"links\" | \"metadata\";\r\n    /**\r\n     * Identifies whether the list exists on the technique or layer level\r\n     * If on the technique level, the list must be cloned to prevent \r\n     * empty values from being added; all selected techniques\r\n     * will be updated with the new values\r\n     * If on the layer level, the list is edited directly and does\r\n     * not update selected techniques with the new values\r\n     */\r\n    level: \"layer\" | \"technique\";\r\n    /** The label attribute of the list */\r\n    nameField: string;\r\n    /** The value attribute of the list */\r\n    valueField: string;\r\n}","<div class=\"list-container\">\r\n    <div *ngFor=\"let item of list; let i = index\">\r\n        <div class=\"divider-container\">\r\n            <!-- divider -->\r\n            <div *ngIf=\"item.divider\" class=\"divider\" (click)=\"removeDivider(i)\" matTooltipPosition=\"below\" matTooltip=\"remove divider\">\r\n                <mat-divider></mat-divider>\r\n                <button mat-icon-button class=\"icon\">-</button>\r\n                <mat-divider></mat-divider>\r\n            </div>\r\n            <div *ngIf=\"!item.divider && canAddDivider(i)\" class=\"divider-option\" (click)=\"addDivider(i)\" matTooltipPosition=\"below\" matTooltip=\"add a divider\">\r\n                <mat-divider></mat-divider>\r\n                <button mat-icon-button class=\"icon\">+</button>\r\n                <mat-divider></mat-divider>\r\n            </div>\r\n        </div>\r\n\r\n        <!-- list item -->\r\n        <div class=\"item-container\" *ngIf=\"!item.divider\">\r\n            <mat-form-field>\r\n                <textarea matInput\r\n                        matTextareaAutosize\r\n                        [placeholder]=\"config.nameField\"\r\n                        [(ngModel)]=\"item[config.nameField]\"\r\n                        (input)=\"updateList()\">\r\n                </textarea>\r\n            </mat-form-field>\r\n            <mat-form-field>\r\n                <textarea matInput\r\n                        matTextareaAutosize\r\n                        [placeholder]=\"config.valueField\"\r\n                        [(ngModel)]=\"item[config.valueField]\"\r\n                        (input)=\"updateList()\">\r\n                </textarea>\r\n            </mat-form-field>\r\n            <a *ngIf=\"includeLinks && item.valid()\" class=\"assigned-link\" href=\"{{item[config.valueField]}}\" target=\"_blank\">{{item[config.nameField]}}</a>\r\n            <div class=\"remove-button\">\r\n                <button class=\"button\" (click)=\"remove(i)\">remove</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div class=\"add-more\">\r\n    <button class=\"button\" (click)=\"add()\">add {{config.type}}</button>\r\n</div>","import { ElementRef } from \"@angular/core\";\r\n\r\nexport abstract class CellPopover {\r\n    private theElement: any;\r\n    constructor(element: ElementRef) {\r\n        this.theElement = element.nativeElement;\r\n    }\r\n\r\n    /**\r\n     * Get the location of the tooltip according to the location on the screen. \r\n     * Returns one of the following:\r\n     * \"top left\":\r\n     * ------------------\r\n     * |    XXXX      |\r\n     * |    XXXX      |\r\n     * |       X      |\r\n     * |              |\r\n     * ------------------\r\n     * \"top right\":\r\n     * ------------------\r\n     * |        XXXX  |\r\n     * |        XXXX  |\r\n     * |       X      |\r\n     * |              |\r\n     * ------------------\r\n     * \"bottom left\":\r\n     * ------------------\r\n     * |                |\r\n     * |  XXXX X        |\r\n     * |  XXXX          |\r\n     * ------------------\r\n     * \"bottom right\":\r\n     * ------------------\r\n     * |                |\r\n     * |       X XXXX   |\r\n     * |         XXXX   |\r\n     * ------------------\r\n     * @returns {string} direction\r\n     */\r\n    protected getPosition(): string {\r\n        let boundingRect = this.theElement.getBoundingClientRect();\r\n        let halfWidth = window.innerWidth / 2;\r\n        let halfHeight = window.innerHeight / 2;\r\n        let position = [];\r\n        if (boundingRect.right > halfWidth) position.push(\"left\");\r\n        else                               position.push(\"right\");\r\n        if (boundingRect.bottom > halfHeight) position.push(\"top\");\r\n        else                               position.push(\"bottom\");\r\n        return position.join(\" \");\r\n    }\r\n}","import { Component, OnInit, Inject, ViewEncapsulation, ViewChild, Renderer2 } from '@angular/core';\r\nimport { MAT_DIALOG_DATA, MatDialog } from '@angular/material/dialog';\r\nimport { MarkdownComponent, MarkdownService } from \"ngx-markdown\";\r\nimport { LayerInformationComponent } from \"../layer-information/layer-information.component\";\r\n\r\n@Component({\r\n    selector: 'help',\r\n    templateUrl: './help.component.html',\r\n    styleUrls: ['./help.component.scss'],\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\nexport class HelpComponent implements OnInit {\r\n    private listenObj: any;\r\n    @ViewChild('markdownElement', {static: false}) private markdownElement: MarkdownComponent;\r\n    public headingAnchors: MarkdownHeadingAnchor[] = [];\r\n\r\n\r\n    constructor(private dialog: MatDialog,\r\n                private markdownService: MarkdownService,\r\n                private renderer: Renderer2,\r\n                @Inject(MAT_DIALOG_DATA) public data) {}\r\n\r\n    ngOnInit(): void {\r\n        setTimeout(() => {\r\n           this.scrollTo('toc');\r\n        }, 175);\r\n\r\n        let self = this;\r\n        this.markdownService.renderer.heading = (text: string, level: number) => {\r\n            let img = text.match(/(<img src(.*?)>)/g) ? text.match(/(<img src(.*?)>)/g)[0].replace(/(nav-app\\/src\\/)/g, '') : '';\r\n            text = text.replace(/(<img src(.*?)>)/g, '');\r\n            const escapedText = text.toLowerCase().trim().replace(/[^\\w]+/g, '-');\r\n            self.headingAnchors.push({\r\n                level: level,\r\n                anchor: escapedText,\r\n                label: text.replace(\"&amp;\", \"&\")\r\n            });\r\n            return '<h' + level + ' class=\"' + escapedText + '\">' + img +\r\n              text +\r\n              '</h' + level + '>';\r\n        }\r\n\r\n        this.markdownService.renderer.html = (html: string) => {\r\n            if (!html.match(/(nav-app\\/src\\/)/g))\r\n                return html;\r\n            return html.replace(/(nav-app\\/src\\/)/g, '');\r\n        }\r\n    }\r\n\r\n    // from https://github.com/jfcere/ngx-markdown/issues/125#issuecomment-518025821\r\n    public onMarkdownLoad(e) {\r\n        // hijack clicks on links\r\n        if (this.markdownElement) {\r\n            this.listenObj = this.renderer.listen(this.markdownElement.element.nativeElement, 'click', (e: Event) => {\r\n                if (e.target && (e.target as any).tagName === 'A') {\r\n                    const el = (e.target as HTMLElement);\r\n                    const linkURL = el.getAttribute && el.getAttribute('href');\r\n                    if (linkURL) {\r\n                        e.preventDefault();\r\n                        if (linkURL.charAt(0) === '#') this.scrollTo(linkURL.replace('#', ''));\r\n                        else if (linkURL.includes('layers/')) this.openLayerDialog();\r\n                        else if (linkURL.match((/(nav-app\\/src\\/)/g))) window.open(linkURL.replace(/(nav-app\\/src\\/)/g, ''))\r\n                        else window.open(linkURL);\r\n                    }\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        if (this.listenObj) {\r\n            this.listenObj();\r\n        }\r\n    }\r\n\r\n    public scrollTo(anchor) {\r\n        let element = document.querySelector(\".\" + anchor);\r\n        if (element) element.scrollIntoView({behavior: 'smooth', block: 'start', inline: 'nearest'});\r\n    }\r\n\r\n    /**\r\n     * open the layer information dialog\r\n     */\r\n    openLayerDialog() {\r\n        this.dialog.open(LayerInformationComponent, {\r\n            maxWidth: \"90ch\"\r\n        });\r\n    }\r\n}\r\n\r\n\r\ninterface MarkdownHeadingAnchor {\r\n    level: number,\r\n    anchor: string,\r\n    label: string\r\n}\r\n","<div class=\"help-dialog\">\r\n    <div class=\"content markdown\">\r\n        <div class=\"col toc\">\r\n            <h1>Table of Contents</h1>\r\n            <ul class=\"table-of-contents\" *ngIf=\"headingAnchors.length > 0\">\r\n                <li *ngFor=\"let heading of headingAnchors\" class=\"toc-heading level-{{heading.level}}\">\r\n                    <a (click)=\"scrollTo(heading.anchor)\">{{heading.label}}</a>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n        <markdown #markdownElement [src]=\"'./USAGE.md'\" (load)=\"onMarkdownLoad($event)\"></markdown>\r\n    </div>\r\n    <div class=\"top-button\">\r\n        <button mat-button (click)=\"scrollTo('toc')\">Top ^</button>\r\n    </div>\r\n    <div class=\"close-button\">\r\n        <button mat-button mat-dialog-close>close</button>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { MatrixCommon } from '../matrix-common';\r\nimport { ConfigService } from '../../config.service';\r\nimport { ViewModelsService } from '../../viewmodels.service';\r\n\r\n@Component({\r\n  selector: 'matrix-flat',\r\n  templateUrl: './matrix-flat.component.html',\r\n  styleUrls: ['./matrix-flat.component.scss'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class MatrixFlatComponent extends MatrixCommon implements OnInit  {\r\n\r\n    constructor(configService: ConfigService, viewModelsService: ViewModelsService) {\r\n        super(configService, viewModelsService);\r\n    }\r\n\r\n    ngOnInit() {}\r\n}\r\n","<table class=\"matrix flat\">\r\n    <thead [ngStyle]=\"tacticRowStyle\">\r\n        <tr>\r\n            <td *ngFor=\"let tactic of filterTactics(matrix.tactics)\" class=\"tactic name\">\r\n                <a (click)=\"onTacticClick(tactic)\">\r\n                    <tactic-cell [viewModel]=\"viewModel\" [tactic]=\"tactic\"></tactic-cell>\r\n                </a>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td *ngFor=\"let tactic of filterTactics(matrix.tactics)\" class=\"tactic count\">\r\n                {{filterTechniques(tactic.techniques, tactic).length }}<ng-container *ngIf=\"viewModel.layout.showName\">&nbsp;techniques</ng-container>\r\n            </td>\r\n        </tr>\r\n    </thead>\r\n    <tbody>\r\n        <tr>\r\n            <td *ngFor=\"let tactic of filterTactics(matrix.tactics)\" class=\"tactic\">\r\n                <ng-container *ngFor=\"let technique of applyControls(tactic.techniques, tactic)\">\r\n                    <ng-container *ngIf=\"technique.subtechniques.length == 0; else supertechnique\">\r\n                        <technique-cell\r\n                                        [tactic]=\"tactic\"\r\n                                        [technique]=\"technique\" \r\n                                        [viewModel]=\"viewModel\"\r\n                                        [matrix]=\"matrix\"\r\n                                        (leftclick)=\"onTechniqueLeftClick($event, technique, tactic)\"\r\n                                        (rightclick)=\"onTechniqueRightClick($event, technique)\"\r\n                                        (highlight)=\"onTechniqueHighlight($event, technique, tactic)\"\r\n                                        (unhighlight)=\"onTechniqueUnhighlight($event)\">\r\n                        </technique-cell>\r\n                    </ng-container>\r\n                    <ng-template #supertechnique>\r\n                        <table class=\"supertechnique\">\r\n                            <tr>\r\n                                <td *ngIf=\"technique.subtechniques.length > 0\" class=\"sidebar technique\" [ngClass]=\"{disabled: applyControls(technique.subtechniques, tactic).length == 0}\" (click)=\"onToggleSubtechniquesVisible(technique, tactic)\">\r\n                                    <div class=\"handle\"> = </div>\r\n                                </td>\r\n                                <td class=\"technique\">\r\n                                    <technique-cell\r\n                                                    [tactic]=\"tactic\"\r\n                                                    [technique]=\"technique\" \r\n                                                    [viewModel]=\"viewModel\"\r\n                                                    [matrix]=\"matrix\"\r\n                                                    (leftclick)=\"onTechniqueLeftClick($event, technique, tactic)\"\r\n                                                    (rightclick)=\"onTechniqueRightClick($event, technique)\"\r\n                                                    (highlight)=\"onTechniqueHighlight($event, technique, tactic)\"\r\n                                                    (unhighlight)=\"onTechniqueUnhighlight($event)\">\r\n                                    </technique-cell>\r\n                                </td>\r\n                            </tr>\r\n                            <tr class=\"subtechniques-row subtechniques-container\" [class.hidden]=\"!viewModel.getTechniqueVM(technique, tactic).showSubtechniques\">\r\n                                <td *ngIf=\"applyControls(technique.subtechniques, tactic).length > 0\" class=\"sidebar subtechniques\">\r\n                                    <svg width=\"12px\" height=\"12px\">\r\n                                        <path d=\"M0 0H12V12Z\"/>\r\n                                    </svg>\r\n                                </td>\r\n                                <td class=\"subtechniques\">\r\n                                    <div class=\"subtechniques\">\r\n                                        <technique-cell \r\n                                                *ngFor=\"let subtechnique of applyControls(technique.subtechniques, tactic)\"\r\n                                                [tactic]=\"tactic\"\r\n                                                [technique]=\"subtechnique\" \r\n                                                [viewModel]=\"viewModel\"\r\n                                                [matrix]=\"matrix\"\r\n                                                (leftclick)=\"onTechniqueLeftClick($event, subtechnique, tactic)\"\r\n                                                (rightclick)=\"onTechniqueRightClick($event, subtechnique)\"\r\n                                                (highlight)=\"onTechniqueHighlight($event, subtechnique, tactic)\"\r\n                                                (unhighlight)=\"onTechniqueUnhighlight($event)\">\r\n                                        </technique-cell>\r\n                                    </div>\r\n                                </td>\r\n                            </tr>\r\n                        </table>\r\n                    </ng-template>\r\n                </ng-container>\r\n            </td>\r\n        </tr>\r\n    </tbody>\r\n</table>","// utilities for working with browser cookies\r\n\r\n\r\n/**\r\n * Set a cookie\r\n * @param  {string} key            key to set under\r\n * @param  {string} value          value to set under key\r\n * @param  {number} expirationDays when cookie expires in days\r\n */\r\n const setCookie = function(key: string, value: string, expirationDays: number) {\r\n    let d = new Date();\r\n    d.setTime(d.getTime() + (expirationDays*24*60*60*1000));\r\n    let expires = \"expires=\"+ d.toUTCString();\r\n    document.cookie = key + \"=\" + value + \";\" + expires + \";path=/;SameSite=Strict\";\r\n}\r\n\r\n/**\r\n * Get the value of the cookie under the given key\r\n * @param  {string} key to retrieve from\r\n * @return {string}     cookie value\r\n */\r\nconst getCookie = function(key: string): string {\r\n    let name = key + \"=\";\r\n    let decodedCookie = decodeURIComponent(document.cookie);\r\n    let ca = decodedCookie.split(';');\r\n    for(let i = 0; i <ca.length; i++) {\r\n        let c = ca[i];\r\n        while (c.charAt(0) == ' ') {\r\n            c = c.substring(1);\r\n        }\r\n        if (c.indexOf(name) == 0) {\r\n            return c.substring(name.length, c.length);\r\n        }\r\n    }\r\n    return \"\";\r\n}\r\n/**\r\n * Does a cookie exist under the given key?\r\n * @param  {string} key to check\r\n * @return {boolean}    true if cookie is stored under key, false otherwise\r\n */\r\nconst hasCookie = function(key: string): boolean {\r\n    return getCookie(key) !== \"\";\r\n}\r\n\r\n/**\r\n * Delete the given cookie\r\n * @param {string} key to delete\r\n */\r\nconst deleteCookie = function(key: string) {\r\n  document.cookie = key + '=;expires=Thu, 01 Jan 1970 00:00:01 GMT;path=/;SameSite=Strict';\r\n}\r\n\r\nexport {setCookie, getCookie, hasCookie, deleteCookie};\r\n","import { EventEmitter, Injectable, Output } from '@angular/core';\r\nimport { DataService, Technique, Tactic, Matrix, Domain, VersionChangelog } from \"./data.service\";\r\nimport * as tinygradient from 'tinygradient';\r\nimport * as tinycolor from 'tinycolor2';\r\nimport { evaluate } from 'mathjs';\r\nimport * as globals from './globals'; //global variables\r\nimport * as is from 'is_js';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ViewModelsService {\r\n    @Output() onSelectionChange = new EventEmitter<any>();\r\n    pinnedCell = \"\";\r\n\r\n    constructor(private dataService: DataService) { }\r\n\r\n    viewModels: ViewModel[] = [];\r\n\r\n    /**\r\n     * Emit event when technique selection changes\r\n     */\r\n    selectionChanged() {\r\n        this.onSelectionChange.emit();\r\n    }\r\n\r\n    /**\r\n     * Create and return a new viewModel\r\n     * @param {string} name the viewmodel name\r\n     * @param {string} domainVersionID the ID of the domain & version\r\n     * @return {ViewModel} the created ViewModel\r\n     */\r\n    newViewModel(name: string, domainVersionID: string) {\r\n        let vm = new ViewModel(name, \"vm\"+ this.getNonce(), domainVersionID, this.dataService);\r\n        this.viewModels.push(vm);\r\n        return vm;\r\n    }\r\n\r\n    nonce: number = 0;\r\n    /**\r\n     * Get a nonce.\r\n     * @return a number that will never be regenerated by sequential calls to getNonce.\r\n     *         Note: this applies on a session-by-session basis, nonces are not\r\n     *         unique between app instances.\r\n     */\r\n    getNonce(): number {\r\n        return this.nonce++;\r\n    }\r\n\r\n    /**\r\n     * Destroy the viewmodel completely Nessecary if tab is closed!\r\n     * @param vm viewmodel to destroy.\r\n     */\r\n    destroyViewModel(vm: ViewModel): void {\r\n        for (let i = 0; i < this.viewModels.length; i++) {\r\n            if (this.viewModels[i] == vm) {\r\n                // console.log(\"destroying viewmodel\", vm)\r\n                this.viewModels.splice(i,1)\r\n                return;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * layer combination operation\r\n     * @param  domainVersionID  domain & version ID\r\n     * @param  scoreExpression  math expression of score expression\r\n     * @param  scoreVariables   variables in math expression, mapping to viewmodel they correspond to\r\n     * @param  comments         what viewmodel to inherit comments from\r\n     * @param  links            what viewmodel to inherit links from\r\n     * @param  metadata         what viewmodel to inherit technique metadata from\r\n     * @param  coloring         what viewmodel to inherit manual colors from\r\n     * @param  enabledness      what viewmodel to inherit state from\r\n     * @param  layerName        new layer name\r\n     * @param  filters          viewmodel to inherit filters from\r\n     * @return                  new viewmodel inheriting above properties\r\n     */\r\n    layerLayerOperation(domainVersionID: string, scoreExpression: string, scoreVariables: Map<string, ViewModel>, comments: ViewModel, links: ViewModel, metadata: ViewModel, gradient: ViewModel, coloring: ViewModel, enabledness: ViewModel, layerName: string, filters: ViewModel, legendItems: ViewModel): ViewModel {\r\n        let result = new ViewModel(\"layer by operation\", \"vm\" + this.getNonce(), domainVersionID, this.dataService);\r\n\r\n        if (scoreExpression) {\r\n            scoreExpression = scoreExpression.toLowerCase() //should be enforced by input, but just in case\r\n            let score_min = Infinity;\r\n            let score_max = -Infinity;\r\n\r\n            //get list of all technique IDs used in the VMs\r\n            let techniqueIDs = new Set<string>();\r\n            scoreVariables.forEach(function(vm, key) {\r\n                vm.techniqueVMs.forEach(function(techniqueVM, techniqueID) {\r\n                    techniqueIDs.add(techniqueID);\r\n                })\r\n            })\r\n            //attempt to evaluate without a scope to catch the case of a static assignment\r\n            try {\r\n                // evaluate with an empty scope\r\n                let mathResult = evaluate(scoreExpression, {});\r\n                // if it didn't except after this, it evaluated to a single result.\r\n                console.log(\"score expression evaluated to single result to be applied to all techniques\");\r\n                if (is.boolean(mathResult)) {\r\n                    mathResult = mathResult ? \"1\" : \"0\"; //boolean to binary\r\n                } else if (is.not.number(mathResult)) { //user inputted something weird, complain about it\r\n                    throw {message: \"math result ( \" + mathResult + \" ) is not a number\"};\r\n                }\r\n                // if it didn't error, and outputted a single value, apply this to all techniques.\r\n                result.initializeScoresTo = String(mathResult); //initialize scores to this value\r\n                score_min = mathResult;\r\n                score_max = mathResult;\r\n            } catch(err) { //couldn't evaluate with empty scope, build scope for each technique\r\n                // compute the score of each techniqueID\r\n                techniqueIDs.forEach(function(technique_id) {\r\n                    let new_tvm = new TechniqueVM(technique_id);\r\n                    let scope = {};\r\n                    let misses = 0; //number of times a VM is missing the value\r\n                    scoreVariables.forEach(function(vm, key) {\r\n                        let scoreValue: number;\r\n                        if (!vm.hasTechniqueVM_id(technique_id)) { //missing technique\r\n                            scoreValue = 0;\r\n                            misses++;\r\n                        } else { //technique exists\r\n                            let score = vm.getTechniqueVM_id(technique_id).score;\r\n                            if (score == \"\") {\r\n                                scoreValue = 0;\r\n                                misses++;\r\n                            } else if (isNaN(Number(score))) {\r\n                                scoreValue = 0;\r\n                                misses++;\r\n                            } else {\r\n                                scoreValue = Number(score);\r\n                            }\r\n                        }\r\n                        scope[key] = scoreValue;\r\n                    });\r\n                    //don't record a result if none of VMs had a score for this technique\r\n                    //did at least one technique have a score for this technique?\r\n                    if (misses < scoreVariables.size) {\r\n                        let mathResult = evaluate(scoreExpression, scope);\r\n                        if (is.boolean(mathResult)) {\r\n                            mathResult = mathResult ? \"1\" : \"0\"; //boolean to binary\r\n                        } else if (is.not.number(mathResult)) { //user inputted something weird, complain about it\r\n                            throw {message: \"math result ( \" + mathResult + \" ) is not a number\"};\r\n                        }\r\n                        new_tvm.score = String(mathResult);\r\n                        result.techniqueVMs.set(technique_id, new_tvm);\r\n\r\n                        score_min = Math.min(score_min, mathResult);\r\n                        score_max = Math.max(score_max, mathResult);\r\n                    }\r\n                })\r\n            }\r\n            //don't do gradient if there's no range of values\r\n            if (score_min != score_max) {\r\n                // set up gradient according to result range\r\n                if (score_min != Infinity) result.gradient.minValue = score_min;\r\n                if (score_max != -Infinity) result.gradient.maxValue = score_max;\r\n                // if it's a binary range, set to transparentblue gradient\r\n                if (score_min == 0 && score_max == 1) result.gradient.setGradientPreset(\"transparentblue\");\r\n            }\r\n        }\r\n\r\n\r\n        /**\r\n         * Inherit a field from a vm\r\n         * @param  {ViewModel} inherit_vm the viewModel to inherit from\r\n         * @param  {string}    fieldname  the field to inherit from the viewmodel\r\n         */\r\n        function inherit(inherit_vm: ViewModel, fieldname: string) {\r\n            // console.log(\"inherit\", fieldname)\r\n            inherit_vm.techniqueVMs.forEach(function(inherit_TVM) {\r\n                let tvm = result.hasTechniqueVM_id(inherit_TVM.technique_tactic_union_id) ? result.getTechniqueVM_id(inherit_TVM.technique_tactic_union_id) : new TechniqueVM(inherit_TVM.technique_tactic_union_id)\r\n                tvm[fieldname] = inherit_TVM[fieldname];\r\n                result.techniqueVMs.set(inherit_TVM.technique_tactic_union_id, tvm);\r\n            })\r\n        }\r\n\r\n        if (comments) inherit(comments, \"comment\");\r\n        if (links) inherit(links, \"links\");\r\n        if (metadata) inherit(metadata, \"metadata\");\r\n        if (coloring) inherit(coloring, \"color\");\r\n        if (enabledness) inherit(enabledness, \"enabled\");\r\n\r\n        if (filters) { //copy filter settings\r\n            result.filters.deSerialize(JSON.parse(filters.filters.serialize()))\r\n        }\r\n\r\n        if (legendItems) {\r\n            result.legendItems = JSON.parse(JSON.stringify(legendItems.legendItems));\r\n        }\r\n\r\n        if (gradient) {\r\n            result.gradient = new Gradient();\r\n            result.gradient.deSerialize(gradient.gradient.serialize());\r\n        }\r\n\r\n        result.name = layerName;\r\n        // console.log(result)\r\n        this.viewModels.push(result)\r\n        result.updateGradient();\r\n        return result;\r\n    } //end layer layer operation\r\n}\r\n\r\n\r\n\r\n/**\r\n * Gradient class used by viewmodels\r\n */\r\nexport class Gradient {\r\n    //official colors used in gradients:\r\n\r\n    colors: Gcolor[] = [new Gcolor(\"red\"), new Gcolor(\"green\")]; //current colors\r\n    // options: string[] = [\"white\", \"red\", \"orange\", \"yellow\", \"green\", \"blue\", \"purple\"]; //possible colors\r\n    options: string[] = [\"#ffffff\", \"#ff6666\", \"#ffaf66\",\"#ffe766\", \"#8ec843\", \"#66b1ff\", \"#ff66f4\"]; //possible colors\r\n    minValue: number = 0;\r\n    maxValue: number = 100;\r\n    gradient: any;\r\n    gradientRGB: any;\r\n\r\n    /**\r\n     * Create a string version of this gradient\r\n     * @return string version of gradient\r\n     */\r\n    serialize(): string {\r\n        let colorList: string[] = [];\r\n        let self = this;\r\n        this.colors.forEach(function(gColor: Gcolor) {\r\n            let hexstring = (tinycolor(gColor.color).toHex8String()); // include the alpha channel\r\n            colorList.push(hexstring)\r\n        });\r\n\r\n        let rep = {\r\n                \"colors\": colorList,\r\n                \"minValue\": this.minValue,\r\n                \"maxValue\": this.maxValue,\r\n              }\r\n        return JSON.stringify(rep, null, \"\\t\")\r\n    }\r\n\r\n    /**\r\n     * Restore this gradient from the given serialized representation\r\n     * @param  rep serialized gradient\r\n     */\r\n    deSerialize(rep: string): void {\r\n        let obj = JSON.parse(rep)\r\n        let isColorStringArray = function(check): boolean {\r\n            for (let i = 0; i < check.length; i++) {\r\n                if (typeof(check[i]) !== \"string\" || !tinycolor(check[i]).isValid()) {\r\n                    console.error(\"TypeError:\", check[i], \"(\",typeof(check[i]),\")\", \"is not a color-string\")\r\n                    return false;\r\n                }\r\n            }\r\n            return true;\r\n        }\r\n\r\n\r\n        if (isColorStringArray(obj.colors)) {\r\n            this.colors = []\r\n            let self = this;\r\n            obj.colors.forEach(function(hex: string) {\r\n                self.colors.push(new Gcolor(hex));\r\n            });\r\n        } else console.error(\"TypeError: gradient colors field is not a color-string[]\")\r\n        this.minValue = obj.minValue;\r\n        this.maxValue = obj.maxValue;\r\n        this.updateGradient();\r\n    }\r\n\r\n    //presets in dropdown menu\r\n    presets = {\r\n        redgreen: [new Gcolor(\"#ff6666\"), new Gcolor(\"#ffe766\"), new Gcolor(\"#8ec843\")],\r\n        greenred: [new Gcolor(\"#8ec843\"), new Gcolor(\"#ffe766\"), new Gcolor(\"#ff6666\")],\r\n        bluered: [new Gcolor(\"#66b1ff\"), new Gcolor(\"#ff66f4\"), new Gcolor(\"#ff6666\")],\r\n        redblue: [new Gcolor(\"#ff6666\"), new Gcolor(\"#ff66f4\"), new Gcolor(\"#66b1ff\")],\r\n        transparentblue: [new Gcolor(\"#ffffff00\"), new Gcolor(\"#66b1ff\")],\r\n        transparentred: [new Gcolor(\"#ffffff00\"), new Gcolor(\"#ff6666\")]\r\n    }\r\n\r\n    /**\r\n     * Convert a preset to tinycolor array\r\n     * @param  preset preset name from preset array\r\n     * @return        [description]\r\n     */\r\n    presetToTinyColor(preset) {\r\n        let colorarray = []\r\n        let self = this;\r\n        this.presets[preset].forEach(function(gcolor: Gcolor) {\r\n            colorarray.push(gcolor.color);\r\n        });\r\n        return tinygradient(colorarray).css('linear', 'to right');\r\n    }\r\n\r\n    constructor() { this.setGradientPreset('redgreen'); }\r\n\r\n    /**\r\n     * set this gradient to use the preset\r\n     * @param  preset preset to use\r\n     */\r\n    setGradientPreset(preset: string): void {\r\n        this.colors = this.presets[preset].map((color: Gcolor) => new Gcolor(color.color)); //deep copy gradient preset\r\n        this.updateGradient();\r\n    }\r\n\r\n    /**\r\n     * recompute gradient\r\n     */\r\n    updateGradient(): void {\r\n        let colorarray = [];\r\n        let self = this;\r\n        this.colors.forEach(function(colorobj) {\r\n            // figure out what kind of color this is\r\n            // let format = tinycolor(colorobj.color).getFormat();\r\n            // if (format == \"name\" && colorobj.color in self.labelToColor)\r\n            colorarray.push(colorobj.color)\r\n        });\r\n        this.gradient = tinygradient(colorarray);\r\n        this.gradientRGB = this.gradient.rgb(100);\r\n    }\r\n\r\n    /**\r\n     * Add a color to the end of the gradient\r\n     */\r\n    addColor(): void {\r\n        this.colors.push(new Gcolor(this.colors[this.colors.length - 1].color));\r\n    }\r\n\r\n    /**\r\n     * Remove color at the given index\r\n     * @param index index to remove color at\r\n     */\r\n    removeColor(index): void {\r\n        this.colors.splice(index, 1)\r\n    }\r\n\r\n    // get the gradient color for a given value in the scale. Value is string format number\r\n    getColor(valueString: string) {\r\n        if (!this.gradient) this.updateGradient();\r\n\r\n        let value: number;\r\n        if (valueString.length == 0) return;\r\n        else value = Number(valueString);\r\n\r\n        if (value >= this.maxValue) { return this.gradientRGB[this.gradientRGB.length - 1]; }\r\n        if (value <= this.minValue) { return this.gradientRGB[0]; }\r\n        let index = (value - this.minValue)/(this.maxValue - this.minValue) * 100;\r\n        // console.log(value, \"->\", index)\r\n        return this.gradientRGB[Math.round(index)];\r\n    }\r\n}\r\n//a color in the gradient\r\nexport class Gcolor {color: string; constructor(color: string) {this.color = color}};\r\n\r\n//semi-synonymous with \"layer\"\r\nexport class ViewModel {\r\n    // PROPERTIES & DEFAULTS\r\n\r\n    name: string; // layer name\r\n    domain: string = \"\"; // attack domain\r\n    version: string = \"\"; // attack version\r\n    domainVersionID: string; // layer domain & version\r\n    description: string = \"\"; //layer description\r\n    uid: string; //unique identifier for this ViewModel. Do not serialize, let it get initialized by the VmService\r\n    bundleURL: string; // the STIX bundle URL that a custom layer was loaded from\r\n    loaded: boolean = false; // whether or not techniqueVMs are loaded\r\n\r\n    filters: Filter;\r\n\r\n    metadata: Metadata[] = [];\r\n    links: Link[] = [];\r\n\r\n    /*\r\n     * sorting int meanings (see filterTechniques()):\r\n     * 0: ascending alphabetically\r\n     * 1: descending alphabetically\r\n     * 2: ascending numerically\r\n     * 3: descending numerically\r\n     */\r\n    sorting: number = 0;\r\n\r\n    layout: LayoutOptions = new LayoutOptions();\r\n\r\n\r\n    hideDisabled: boolean = false; //are disabled techniques hidden?\r\n\r\n\r\n    gradient: Gradient = new Gradient(); //gradient for scores\r\n\r\n    backgroundPresets: string[] = ['#e60d0d', '#fc3b3b', '#fc6b6b', '#fca2a2', '#e6550d', '#fd8d3c', '#fdae6b', '#fdd0a2', '#e6d60d', '#fce93b', '#fcf26b', '#fcf3a2', '#31a354', '#74c476', '#a1d99b', '#c7e9c0', '#3182bd', '#6baed6', '#9ecae1', '#c6dbef', '#756bb1', '#9e9ac8', '#bcbddc', '#dadaeb', '#636363', '#969696', '#bdbdbd', '#d9d9d9'];\r\n    legendColorPresets: string[] = [];\r\n\r\n    selectTechniquesAcrossTactics: boolean = true;\r\n    selectSubtechniquesWithParent: boolean = false;\r\n\r\n    needsToConstructTechniqueVMs = false;\r\n    legacyTechniques = [];\r\n\r\n    initializeScoresTo = \"\"; //value to initialize scores to\r\n\r\n    techIDtoUIDMap: Object = {};\r\n    techUIDtoIDMap: Object = {};\r\n\r\n    compareTo?: ViewModel;\r\n    versionChangelog?: VersionChangelog;\r\n\r\n    private _sidebarOpened: boolean;\r\n    public get sidebarOpened(): boolean { return this._sidebarOpened; };\r\n    public set sidebarOpened(newVal: boolean) { this._sidebarOpened = newVal; };\r\n\r\n    public readonly sidebarContentTypes = ['layerUpgrade', 'search'];\r\n    private _sidebarContentType: string;\r\n    public get sidebarContentType(): string { return this._sidebarContentType; };\r\n    public set sidebarContentType(newVal: string) {\r\n        if (this.sidebarContentTypes.includes(newVal)) this._sidebarContentType = newVal;\r\n        else this._sidebarContentType = '';\r\n    };\r\n\r\n    constructor(name: string, uid: string, domainVersionID: string, private dataService: DataService) {\r\n        this.domainVersionID = domainVersionID;\r\n        console.log(\"initializing ViewModel '\" + name + \"'\");\r\n        this.filters = new Filter();\r\n        this.name = name;\r\n        this.uid = uid;\r\n    }\r\n\r\n    loadVMData() {\r\n        let domain = this.dataService.getDomain(this.domainVersionID);\r\n        if (domain.isCustom) {\r\n            this.bundleURL = domain.urls[0];\r\n        }\r\n\r\n        if (!this.domainVersionID || !domain.dataLoaded) {\r\n            let self = this;\r\n            this.dataService.onDataLoad(this.domainVersionID, function() {\r\n                self.initTechniqueVMs()\r\n                self.filters.initPlatformOptions(self.dataService.getDomain(self.domainVersionID));\r\n            });\r\n        } else {\r\n            this.initTechniqueVMs();\r\n            this.filters.initPlatformOptions(domain);\r\n        }\r\n        this.loaded = true;\r\n    }\r\n\r\n    initTechniqueVMs() {\r\n        console.log(this.name, \"initializing technique VMs\");\r\n        for (let technique of this.dataService.getDomain(this.domainVersionID).techniques) {\r\n            for (let id of technique.get_all_technique_tactic_ids()) {\r\n                let techniqueVM = new TechniqueVM(id);\r\n                techniqueVM.score = this.initializeScoresTo;\r\n                this.setTechniqueVM(techniqueVM, false);\r\n            }\r\n            //init subtechniques\r\n            for (let subtechnique of technique.subtechniques) {\r\n                for (let id of subtechnique.get_all_technique_tactic_ids()) {\r\n                    let techniqueVM = new TechniqueVM(id);\r\n                    techniqueVM.score = this.initializeScoresTo;\r\n                    this.setTechniqueVM(techniqueVM, false);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    // changeTechniqueIDSelectionLock() {\r\n    //     this.selectTechniquesAcrossTactics = !this.selectTechniquesAcrossTactics;\r\n    // }\r\n\r\n    showTacticRowBackground: boolean = false;\r\n    tacticRowBackground: string = \"#dddddd\";\r\n\r\n    // getTechniqueIDFromUID(technique_tactic_union_id: string){\r\n    //     return this.techIDtoUIDMap[technique_tactic_union_id];\r\n    // }\r\n\r\n    // getTechniquesUIDFromID(technique_id: string){\r\n    //     return this.techIDtoUIDMap[technique_id];\r\n    // }\r\n\r\n    // setTechniqueMaps(techIDtoUIDMapt, techUIDtoIDMapt){\r\n    //     this.techIDtoUIDMap = Object.freeze(techIDtoUIDMapt);\r\n    //     this.techUIDtoIDMap = Object.freeze(techUIDtoIDMapt);\r\n    // }\r\n\r\n     //  _____ ___ ___ _  _ _  _ ___ ___  _   _ ___     _   ___ ___\r\n     // |_   _| __/ __| || | \\| |_ _/ _ \\| | | | __|   /_\\ | _ \\_ _|\r\n     //   | | | _| (__| __ | .` || | (_) | |_| | _|   / _ \\|  _/| |\r\n     //   |_| |___\\___|_||_|_|\\_|___\\__\\_\\\\___/|___| /_/ \\_\\_| |___|\r\n\r\n    techniqueVMs: Map<string, TechniqueVM> = new Map<string, TechniqueVM>(); //configuration for each technique\r\n    // Getter\r\n    public getTechniqueVM(technique: Technique, tactic: Tactic): TechniqueVM {\r\n        if (!this.hasTechniqueVM(technique, tactic)) throw Error(\"technique VM not found: \" + technique.attackID + \", \" + tactic.attackID);\r\n        return this.techniqueVMs.get(technique.get_technique_tactic_id(tactic));\r\n    }\r\n    public getTechniqueVM_id(technique_tactic_id: string): TechniqueVM {\r\n        if (!this.hasTechniqueVM_id(technique_tactic_id)) throw Error(\"technique VM not found: \" + technique_tactic_id);\r\n        return this.techniqueVMs.get(technique_tactic_id);\r\n    }\r\n    /**\r\n     * setter\r\n     * @param {techniqueVM} techniqueVM: the techniqueVM to set\r\n     * @param {boolean} overwrite (default true) if true, overwrite existing techniqueVMs under that ID.\r\n     */\r\n    public setTechniqueVM(techniqueVM: TechniqueVM, overwrite=true): void {\r\n        if (this.techniqueVMs.has(techniqueVM.technique_tactic_union_id)) {\r\n            if (overwrite) this.techniqueVMs.delete(techniqueVM.technique_tactic_union_id)\r\n            else return;\r\n        }\r\n        this.techniqueVMs.set(techniqueVM.technique_tactic_union_id, techniqueVM);\r\n    }\r\n    //checker\r\n    public hasTechniqueVM(technique: Technique, tactic: Tactic): boolean {\r\n        return this.techniqueVMs.has(technique.get_technique_tactic_id(tactic));\r\n    }\r\n    public hasTechniqueVM_id(technique_tactic_id: string): boolean {\r\n        return this.techniqueVMs.has(technique_tactic_id);\r\n    }\r\n\r\n    //  ___ ___ ___ _____ ___ _  _  ___     _   ___ ___\r\n    // | __|   \\_ _|_   _|_ _| \\| |/ __|   /_\\ | _ \\_ _|\r\n    // | _|| |) | |  | |  | || .` | (_ |  / _ \\|  _/| |\r\n    // |___|___/___| |_| |___|_|\\_|\\___| /_/ \\_\\_| |___|\r\n\r\n\r\n    public highlightedTactic: Tactic = null;\r\n    public highlightedTechniques: Set<string> = new Set<string>();\r\n    public highlightedTechnique: Technique = null; // the Technique that was actually moused over\r\n\r\n    /**\r\n     * Highlight the given technique under the given tactic\r\n     * @param {Technique} technique to highlight\r\n     * @param {Tactic} tactic wherein the technique occurs\r\n     */\r\n    public highlightTechnique(technique: Technique, tactic?: Tactic | null) {\r\n        if (this.selectSubtechniquesWithParent && technique.isSubtechnique) this.highlightedTechniques.add(technique.parent.id);\r\n        this.highlightedTechnique = technique;\r\n        this.highlightedTechniques.add(technique.id);\r\n        this.highlightedTactic = tactic;\r\n    }\r\n    /**\r\n     * Clear the technique highlight\r\n     */\r\n    public clearHighlight() {\r\n        this.highlightedTactic = null;\r\n        this.highlightedTechnique = null;\r\n        this.highlightedTechniques = new Set<string>();\r\n    }\r\n\r\n    /**\r\n     * currently selected techniques in technique_tactic_id format\r\n     */\r\n    private selectedTechniques: Set<string> = new Set<string>();\r\n\r\n    /**\r\n     * Select the given technique. Depending on selectTechniquesAcrossTactics, either selects in all tactics or in given tactic\r\n     * @param {Technique} technique to select\r\n     * @param {Tactic} tactic wherein the technique occurs\r\n     */\r\n    public selectTechnique(technique: Technique, tactic: Tactic): void {\r\n        if (this.selectTechniquesAcrossTactics) this.selectTechniqueAcrossTactics(technique);\r\n        else (this.selectTechniqueInTactic(technique, tactic));\r\n    }\r\n\r\n    /**\r\n     * unselect the given technique. Depending on selectTechniquesAcrossTactics, either unselects in all tactics or in given tactic\r\n     * @param {Technique} technique to select\r\n     * @param {Tactic} tactic wherein the technique occurs\r\n     */\r\n    public unselectTechnique(technique: Technique, tactic: Tactic): void {\r\n        if (this.selectTechniquesAcrossTactics) this.unselectTechniqueAcrossTactics(technique);\r\n        else (this.unselectTechniqueInTactic(technique, tactic));\r\n    }\r\n\r\n    /**\r\n     * select the given technique in the given tactic\r\n     * @param {Technique} technique to select\r\n     * @param {Tactic} tactic wherein the technique occurs\r\n     * @param {boolean} walkChildren (recursion helper) if true and selectSubtechniquesWithParent is true, walk selection up to parent technique\r\n     */\r\n    public selectTechniqueInTactic(technique: Technique, tactic: Tactic, walkChildren=true): void {\r\n        if (this.selectSubtechniquesWithParent && walkChildren) { //check parent / children / siblings\r\n            if (technique.isSubtechnique) { //select from parent\r\n                this.selectTechniqueInTactic(technique.parent, tactic, true);\r\n                return;\r\n            } else { //select subtechniques\r\n                for (let subtechnique of technique.subtechniques) {\r\n                    this.selectTechniqueInTactic(subtechnique, tactic, false);\r\n                }\r\n            }\r\n        }\r\n        let technique_tactic_id = technique.get_technique_tactic_id(tactic);\r\n        if (!this.isCurrentlyEditing()) this.activeTvm = this.getTechniqueVM_id(technique_tactic_id); // first selection\r\n        this.selectedTechniques.add(technique_tactic_id);\r\n        this.checkValues(true, technique_tactic_id);\r\n    }\r\n\r\n    /**\r\n     * select all techniques under the given tactic\r\n     * @param {Tactic} tactic wherein the techniques occur\r\n     */\r\n    public selectAllTechniquesInTactic(tactic: Tactic): void {\r\n        for (let technique of tactic.techniques) {\r\n            this.selectTechnique(technique, tactic);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * select the given technique across all tactics in which it occurs\r\n     * @param {Technique} technique to select\r\n     * @param {boolean} walkChildren (recursion helper) if true and selectSubtechniquesWithParent is true, walk selection up to parent technique\r\n     * @param highlightTechniques, if true, highlight techniques rather than add to selected techniques group\r\n     */\r\n    public selectTechniqueAcrossTactics(technique: Technique, walkChildren= true, highlightTechniques = false): void {\r\n        if (this.selectSubtechniquesWithParent && walkChildren) { //walk to parent / children / siblings\r\n            if (technique.isSubtechnique) { //select from parent\r\n                this.selectTechniqueAcrossTactics(technique.parent, true, highlightTechniques);\r\n                return;\r\n            } else { //select subtechniques\r\n                for (let subtechnique of technique.subtechniques) {\r\n                    this.selectTechniqueAcrossTactics(subtechnique, false, highlightTechniques);\r\n                }\r\n            }\r\n        }\r\n        if (highlightTechniques) {\r\n            this.highlightTechnique(technique);\r\n        }\r\n        else {\r\n            for (let id of technique.get_all_technique_tactic_ids()) {\r\n                if (!this.isCurrentlyEditing()) this.activeTvm = this.getTechniqueVM_id(id); // first selection\r\n                this.selectedTechniques.add(id);\r\n                this.checkValues(true, id);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * unselect the given technique in the given tactic\r\n     * @param {Technique} technique to unselect\r\n     * @param {Tactic} tactic wherein the technique occurs\r\n     * @param {boolean} walkChildren (recursion helper) if true and selectSubtechniquesWithParent is true, walk selection up to parent technique\r\n     */\r\n    public unselectTechniqueInTactic(technique: Technique, tactic: Tactic, walkChildren=true): void {\r\n        if (this.selectSubtechniquesWithParent && walkChildren) { //walk to parent / children / siblings\r\n            if (technique.isSubtechnique) { //select from parent\r\n                this.unselectTechniqueInTactic(technique.parent, tactic, true);\r\n                return;\r\n            } else { //select subtechniques\r\n                for (let subtechnique of technique.subtechniques) {\r\n                    this.unselectTechniqueInTactic(subtechnique, tactic, false);\r\n                }\r\n            }\r\n        }\r\n        let technique_tactic_id = technique.get_technique_tactic_id(tactic);\r\n        this.selectedTechniques.delete(technique_tactic_id);\r\n        this.checkValues(false, technique_tactic_id);\r\n    }\r\n\r\n    /**\r\n     * unselect all techniques in the given tactic\r\n     * @param {Tactic} tactic wherein the techniques occur\r\n     */\r\n    public unselectAllTechniquesInTactic(tactic: Tactic): void {\r\n        for (let technique of tactic.techniques) {\r\n            this.unselectTechnique(technique, tactic);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * unselect the given technique across all tactics in which it occurs\r\n     * @param {Technique} technique to unselect\r\n     * @param {boolean} walkChildren (recursion helper) if true and selectSubtechniquesWithParent is true, walk selection up to parent technique\r\n     */\r\n    public unselectTechniqueAcrossTactics(technique: Technique, walkChildren=true) {\r\n        if (this.selectSubtechniquesWithParent && walkChildren) { //walk to parent / children / siblings\r\n            if (technique.isSubtechnique) { //select from parent\r\n                this.unselectTechniqueAcrossTactics(technique.parent, true);\r\n                return;\r\n            } else { //select subtechniques\r\n                for (let subtechnique of technique.subtechniques) {\r\n                    this.unselectTechniqueAcrossTactics(subtechnique, false);\r\n                }\r\n            }\r\n        }\r\n        for (let id of technique.get_all_technique_tactic_ids()) {\r\n            this.selectedTechniques.delete(id);\r\n            this.checkValues(false, id);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * unselect all techniques\r\n     */\r\n    public clearSelectedTechniques() {\r\n        this.selectedTechniques.clear();\r\n        this.activeTvm = undefined;\r\n        this.linkMismatches = [];\r\n        this.metadataMismatches = [];\r\n    }\r\n\r\n    /**\r\n     * Select all techniques\r\n     */\r\n    public selectAllTechniques(): void {\r\n        this.clearSelectedTechniques()\r\n        this.invertSelection();\r\n    }\r\n\r\n    /**\r\n     * Set all selected techniques to deselected, and select all techniques not currently selected\r\n     */\r\n    public invertSelection(): void {\r\n        let previouslySelected = new Set(this.selectedTechniques);\r\n        this.clearSelectedTechniques();\r\n        let self = this;\r\n        this.techniqueVMs.forEach(function(tvm, key) {\r\n            if (!previouslySelected.has(tvm.technique_tactic_union_id)) {\r\n                if (!self.isCurrentlyEditing()) self.activeTvm = self.getTechniqueVM_id(tvm.technique_tactic_union_id); // first selection\r\n                self.selectedTechniques.add(tvm.technique_tactic_union_id);\r\n                self.checkValues(true, tvm.technique_tactic_union_id);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Select all techniques with annotations if nothing is currently selected, or select a subset of\r\n     * the current selection that has annotations\r\n     */\r\n    public selectAnnotated(): void {\r\n        let self = this;\r\n        if (this.isCurrentlyEditing()) {\r\n            // deselect techniques without annotations\r\n            let selected = new Set(this.selectedTechniques);\r\n            this.techniqueVMs.forEach(function(tvm, key) {\r\n                if (selected.has(tvm.technique_tactic_union_id) && !tvm.annotated()) {\r\n                    self.selectedTechniques.delete(tvm.technique_tactic_union_id);\r\n                    self.checkValues(false, tvm.technique_tactic_union_id);\r\n                }\r\n            });\r\n        } else {\r\n            // select all techniques with annotations\r\n            this.techniqueVMs.forEach(function(tvm, key) {\r\n                if (tvm.annotated()) {\r\n                    if (!self.isCurrentlyEditing()) self.activeTvm = self.getTechniqueVM_id(tvm.technique_tactic_union_id); // first selection\r\n                    self.selectedTechniques.add(tvm.technique_tactic_union_id);\r\n                    self.checkValues(true, tvm.technique_tactic_union_id);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Select all techniques without annotations if nothing is currently selected, or select a subset of\r\n     * the current selection that do not have annotations\r\n     */\r\n    public selectUnannotated(): void {\r\n        let self = this;\r\n        if (this.isCurrentlyEditing()) {\r\n            // deselect techniques with annotations\r\n            let selected = new Set(this.selectedTechniques);\r\n            this.techniqueVMs.forEach(function(tvm, key) {\r\n                if (selected.has(tvm.technique_tactic_union_id) && tvm.annotated()) {\r\n                    self.selectedTechniques.delete(tvm.technique_tactic_union_id);\r\n                    self.checkValues(false, tvm.technique_tactic_union_id);\r\n                }\r\n            });\r\n        } else {\r\n            // select all techniques without annotations\r\n            this.selectAnnotated();\r\n            this.invertSelection();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Copies all annotations from unchanged techniques and techniques\r\n     * which have had minor changes\r\n     */\r\n    public initCopyAnnotations(): void {\r\n        let self = this;\r\n\r\n        function copy(attackID: string) {\r\n            let fromTechnique = self.dataService.getTechnique(attackID, self.compareTo.domainVersionID);\r\n            let domain = self.dataService.getDomain(self.domainVersionID);\r\n            let tactics = fromTechnique.tactics.map(shortname => domain.tactics.find(t => t.shortname == shortname));\r\n            tactics.forEach(tactic => {\r\n                let fromVM = self.compareTo.getTechniqueVM(fromTechnique, tactic);\r\n                if (fromVM.annotated()) {\r\n                    let toTechnique = self.dataService.getTechnique(attackID, self.domainVersionID);\r\n                    self.copyAnnotations(fromTechnique, toTechnique, tactic);\r\n                }\r\n            });\r\n        }\r\n\r\n        if (this.versionChangelog) {\r\n            this.versionChangelog.unchanged.forEach(attackID => copy(attackID));\r\n            this.versionChangelog.minor_changes.forEach(attackID => copy(attackID));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Copy annotations from one technique to another under the given tactic.\r\n     * The previous technique will be disabled\r\n     * @param fromTechnique the technique to copy annotations from\r\n     * @param toTechnique the technique to copy annotations to\r\n     * @param tactic the tactic the techniques are found under\r\n     */\r\n    public copyAnnotations(fromTechnique: Technique, toTechnique: Technique, tactic: Tactic): void {\r\n        let fromVM = this.compareTo.getTechniqueVM(fromTechnique, tactic);\r\n        let toVM = this.getTechniqueVM(toTechnique, tactic);\r\n\r\n        this.versionChangelog.reviewed.delete(fromTechnique.attackID);\r\n\r\n        toVM.deSerialize(fromVM.serialize(), fromTechnique.attackID, tactic.shortname);\r\n        this.updateScoreColor(toVM);\r\n        fromVM.enabled = false;\r\n\r\n        this.versionChangelog.copied.add(fromVM.technique_tactic_union_id);\r\n        if (fromTechnique.get_all_technique_tactic_ids().every(id => this.versionChangelog.copied.has(id))) {\r\n            this.versionChangelog.reviewed.add(fromTechnique.attackID);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Reset the techniqueVM that the annotations were previously copied to\r\n     * and re-enable the technique the annotations were copied from\r\n     * @param fromTechnique the technique that annotations were copied from\r\n     * @param toTechnique the technique that annotations were copied to\r\n     * @param tactic the tactic the techniques are found under\r\n     */\r\n    public revertCopy(fromTechnique: Technique, toTechnique: Technique, tactic: Tactic): void {\r\n        let fromVM = this.compareTo.getTechniqueVM(fromTechnique, tactic);\r\n        let toVM = this.getTechniqueVM(toTechnique, tactic);\r\n        this.versionChangelog.reviewed.delete(fromTechnique.attackID);\r\n\r\n        toVM.resetAnnotations();\r\n        fromVM.enabled = true;\r\n\r\n        this.versionChangelog.copied.delete(fromVM.technique_tactic_union_id);\r\n        if (!fromTechnique.get_all_technique_tactic_ids().every(id => this.versionChangelog.copied.has(id))) {\r\n            this.versionChangelog.reviewed.delete(fromTechnique.attackID);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Return true if the given technique is selected, false otherwise\r\n     * @param  {Technique}  technique the technique to check\r\n    * * @param  {Tactic}  tactic wherein the technique occurs\r\n     * @return {boolean}           true if selected, false otherwise\r\n     */\r\n    public isTechniqueSelected(technique: Technique, tactic: Tactic, walkChildren=true): boolean {\r\n        if (this.selectTechniquesAcrossTactics) {\r\n            if (this.selectSubtechniquesWithParent && walkChildren) { //check parent / children / siblings\r\n                if (technique.isSubtechnique) { //select from parent\r\n                    return this.isTechniqueSelected(technique.parent, tactic, true);\r\n                } else {\r\n                    for (let subtechnique of technique.subtechniques) {\r\n                        if (this.isTechniqueSelected(subtechnique, tactic, false)) return true;\r\n                    }\r\n                }\r\n            }\r\n\r\n            for (let id of technique.get_all_technique_tactic_ids()) {\r\n                if (this.selectedTechniques.has(id)) return true;\r\n            }\r\n            return false;\r\n        } else {\r\n            if (this.selectSubtechniquesWithParent && walkChildren) { //check parent / children / siblings\r\n                if (technique.isSubtechnique) { //select from parent\r\n                    return this.isTechniqueSelected(technique.parent, tactic, true);\r\n                } else {\r\n                    for (let subtechnique of technique.subtechniques) {\r\n                        if (this.isTechniqueSelected(subtechnique, tactic, false)) return true;\r\n                    }\r\n                }\r\n            }\r\n            return this.selectedTechniques.has(technique.get_technique_tactic_id(tactic));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * return the number of selected techniques\r\n     * @return {number} the number of selected techniques\r\n     */\r\n    public getSelectedTechniqueCount(): number {\r\n        if (this.selectTechniquesAcrossTactics) {\r\n            if (this.selectSubtechniquesWithParent) {\r\n                // match across tactics\r\n                // match subtechniques and parents\r\n\r\n                // matches this part\r\n                // vvvvv\r\n                // T1001.001^TA1000\r\n                let ids = new Set();\r\n                this.selectedTechniques.forEach((unionID) => ids.add(unionID.split(\"^\")[0].split(\".\")[0]));\r\n                return ids.size;\r\n            } else {\r\n                // match across tactics\r\n                // differentiate subtechniques and parents\r\n\r\n                // matches this part\r\n                // vvvvv vvv\r\n                // T1001.001^TA1000\r\n                let ids = new Set();\r\n                this.selectedTechniques.forEach((unionID) => ids.add(unionID.split(\"^\")[0]));\r\n                return ids.size;\r\n            }\r\n        } else {\r\n            if (this.selectSubtechniquesWithParent) {\r\n                // differentiate tactics\r\n                // match subtechniques and parents\r\n\r\n                // matches this part\r\n                // vvvvv     vvvvvv\r\n                // T1001.001^TA1000\r\n                let ids = new Set();\r\n                this.selectedTechniques.forEach((unionID) => {\r\n                    let split = unionID.split(\"^\");\r\n                    let tacticID = split[1];\r\n                    let techniqueID = split[0].split(\".\")[0];\r\n                    ids.add(techniqueID + \"^\" + tacticID);\r\n                })\r\n                return ids.size;\r\n            } else {\r\n                // differentiate tactics\r\n                // differentiate subtechniques and parents\r\n\r\n                // matches this part\r\n                // vvvvv vvv vvvvvv\r\n                // T1001.001^TA1000\r\n                return this.selectedTechniques.size;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns true if the given tactic is selected\r\n     * @param  {Tactic}  tactic to check\r\n     * @return {boolean} true if selected\r\n     */\r\n    public isTacticSelected(tactic: Tactic) {\r\n        let self = this;\r\n        var result = tactic.techniques.every(function(technique) {\r\n            return self.isTechniqueSelected(technique, tactic)\r\n        });\r\n        return result;\r\n    }\r\n\r\n\r\n    /**\r\n     * Return true if currently editing any techniques, false otherwise\r\n     * @return {boolean} true if currently editing any techniques, false otherwise\r\n     */\r\n    public isCurrentlyEditing(): boolean {\r\n        return this.getSelectedTechniqueCount() > 0;\r\n    }\r\n\r\n    /**\r\n     * edit the selected techniques\r\n     * @param {string} field the field to edit\r\n     * @param {any}    value the value to place in the field\r\n     */\r\n    public editSelectedTechniques(field: string, value: any): void {\r\n        this.selectedTechniques.forEach((id) => {\r\n            this.getTechniqueVM_id(id)[field] = value;\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Edit the selected techniques list attribute\r\n     * @param {string}  field the field to edit\r\n     * @param {(Link|Metadata)[]} values the list of values to place in the field\r\n     */\r\n    public editSelectedTechniqueValues(field: string, values: (Link | Metadata)[]): void {\r\n        let fieldToType: any = {\"links\": Link, \"metadata\": Metadata};\r\n        this.selectedTechniques.forEach(id => {\r\n            const value_clone = values.map(value => { // deep copy\r\n                let clone = new fieldToType[field]();\r\n                clone.deSerialize(value.serialize());\r\n                return clone;\r\n            });\r\n            this.getTechniqueVM_id(id)[field] = value_clone;\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Reset the selected techniques' annotations to their default values\r\n     */\r\n    public resetSelectedTechniques(): void {\r\n        this.selectedTechniques.forEach((id) => {\r\n            this.getTechniqueVM_id(id).resetAnnotations();\r\n        })\r\n    }\r\n\r\n    /**\r\n     * Get get a common value from the selected techniques\r\n     * @param  field the field to get the common value from\r\n     * @return       the value of the field if all selected techniques have the same value, otherwise \"\"\r\n     */\r\n    public getEditingCommonValue(field: string): any {\r\n        if (!this.isCurrentlyEditing()) return \"\";\r\n        let ids = Array.from(this.selectedTechniques);\r\n        let commonValue = this.getTechniqueVM_id(ids[0])[field];\r\n        for (let i = 1; i < ids.length; i++) {\r\n            if (this.getTechniqueVM_id(ids[i])[field] != commonValue) return \"\"\r\n        }\r\n\r\n        return commonValue;\r\n    }\r\n\r\n    activeTvm: TechniqueVM; // first selected techniqueVM\r\n    linkMismatches: string[] = []; // subsequent selected technique_tactic_ids that do not have matching links\r\n    public get linksMatch(): boolean { return !this.linkMismatches.length; }\r\n    metadataMismatches: string[] = []; // subsequent selected technique_tactic_ids that do not have matching metadata\r\n    public get metadataMatch(): boolean { return !this.metadataMismatches.length; }\r\n\r\n    /**\r\n     * If a technique has been selected, checks whether the link & metadata values of the selected technique match \r\n     * the link & metadata values of the first selected technique. If a technique has been deselected, removes it from\r\n     * the lists of mismatching techniques (if applicable) or re-evalutes the lists of mismatching\r\n     * techniques in the case where the deselected technique was the first selected technique\r\n     * @param selected true if the technique was selected, false if it was deselected\r\n     * @param id the technique_tactic_union_id of the technique\r\n     */\r\n    public checkValues(selected: boolean, id: string): void {\r\n        if (selected) { // selected technique(s)\r\n            let tvm = this.getTechniqueVM_id(id);\r\n            if (this.activeTvm.linkStr !== tvm.linkStr) this.linkMismatches.push(id);\r\n            if (this.activeTvm.metadataStr !== tvm.metadataStr) this.metadataMismatches.push(id);\r\n        } else { // deselected technique(s)\r\n            if (this.linkMismatches.includes(id)) this.linkMismatches.splice(this.linkMismatches.indexOf(id), 1);\r\n            if (this.metadataMismatches.includes(id)) this.metadataMismatches.splice(this.metadataMismatches.indexOf(id), 1);\r\n\r\n            if (this.activeTvm && this.activeTvm.technique_tactic_union_id == id) { // edge case where deselection was the first selected technique\r\n                let first_id = this.selectedTechniques.values().next().value;\r\n                this.activeTvm = first_id ? this.getTechniqueVM_id(first_id): undefined;\r\n\r\n                // re-evaluate mismatched values\r\n                this.linkMismatches = [];\r\n                this.metadataMismatches = [];\r\n                for (let technique_tactic_id of Array.from(this.selectedTechniques.values())) {\r\n                    let tvm = this.getTechniqueVM_id(technique_tactic_id);\r\n                    if (this.activeTvm.linkStr !== tvm.linkStr) this.linkMismatches.push(technique_tactic_id);\r\n                    if (this.activeTvm.metadataStr !== tvm.metadataStr) this.metadataMismatches.push(technique_tactic_id);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    //  oooooooo8                          o8          o88 ooooooooooo o88   o888   o8\r\n    // 888           ooooooo  oo oooooo  o888oo       o88   888    88  oooo   888 o888oo ooooooooo8 oo oooooo\r\n    //  888oooooo  888     888 888    888 888       o88     888ooo8     888   888  888  888oooooo8   888    888\r\n    //         888 888     888 888        888     o88       888         888   888  888  888          888\r\n    // o88oooo888    88ooo88  o888o        888o o88        o888o       o888o o888o  888o  88oooo888 o888o\r\n    //                                         o88\r\n    //    ooooo ooooo            o888\r\n    //     888   888  ooooooooo8  888 ooooooooo    ooooooooo8 oo oooooo    oooooooo8\r\n    //     888ooo888 888oooooo8   888  888    888 888oooooo8   888    888 888ooooooo\r\n    //     888   888 888          888  888    888 888          888                888\r\n    //    o888o o888o  88oooo888 o888o 888ooo88     88oooo888 o888o       88oooooo88\r\n    //                                o888\r\n\r\n    /**\r\n     * filter tactics according to viewmodel state\r\n     * @param {Tactic[]} tactics to filter\r\n     * @param {Matrix} matrix that the tactics fall under\r\n     * @returns {Tactic[]} filtered tactics\r\n     */\r\n    public filterTactics(tactics: Tactic[], matrix: Matrix): Tactic[] {\r\n        if (!this.loaded) return; // still initializing technique VMs\r\n        return tactics.filter((tactic: Tactic) => this.filterTechniques(tactic.techniques, tactic, matrix).length > 0);\r\n    }\r\n\r\n    /**\r\n     * filter techniques according to viewModel state\r\n     * @param {Technique[]} techniques list of techniques to filter\r\n     * @param {Tactic} tactic tactic the techniques fall under\r\n     * @param {Matrix} matrix that the techniques fall under\r\n     * @returns {Technique[]} filtered techniques\r\n     */\r\n    public filterTechniques(techniques: Technique[], tactic: Tactic, matrix: Matrix): Technique[] {\r\n        return techniques.filter((technique: Technique) => {\r\n            let techniqueVM = this.getTechniqueVM(technique, tactic);\r\n            // filter by enabled\r\n            if (this.hideDisabled && !this.isSubtechniqueEnabled(technique, techniqueVM, tactic)) return false;\r\n            if (matrix.name == \"PRE-ATT&CK\") return true; // don't filter by platform if it's pre-attack\r\n            // filter by platform\r\n            let platforms = new Set(technique.platforms)\r\n            for (let platform of this.filters.platforms.selection) {\r\n                if (platforms.has(platform)) return true; //platform match\r\n            }\r\n            return false; //no platform match\r\n        })\r\n    }\r\n\r\n    public isSubtechniqueEnabled(technique, techniqueVM, tactic): boolean {\r\n        if (techniqueVM.enabled) return true;\r\n        else if (technique.subtechniques.length > 0) {\r\n            return technique.subtechniques.some(subtechnique => {\r\n                let sub_platforms = new Set(subtechnique.platforms);\r\n                let filter = new Set(this.filters.platforms.selection);\r\n                let platforms = new Set(Array.from(filter.values()).filter(p => sub_platforms.has(p)));\r\n                return this.getTechniqueVM(subtechnique, tactic).enabled && platforms.size > 0;\r\n            });\r\n        }\r\n        else return false;\r\n    }\r\n\r\n    /**\r\n     * sort techniques according to viewModel state\r\n     * @param {Technique[]} techniques techniques to sort\r\n     * @param {Tactic} tactic tactic the techniques fall under\r\n     * @returns {Technique[]} sorted techniques\r\n     */\r\n    public sortTechniques(techniques: Technique[], tactic: Tactic): Technique[] {\r\n        return techniques.sort((technique1: Technique, technique2: Technique) => {\r\n            const techniqueVM1 = this.getTechniqueVM(technique1, tactic);\r\n            const techniqueVM2 = this.getTechniqueVM(technique2, tactic);\r\n            let score1, score2;\r\n\r\n            this.sortSubTechniques(technique1, tactic);\r\n            this.sortSubTechniques(technique2, tactic);\r\n\r\n            if (!this.layout.showAggregateScores) {\r\n                score1 = techniqueVM1.score.length > 0 ? Number(techniqueVM1.score) : 0;\r\n                score2 = techniqueVM2.score.length > 0 ? Number(techniqueVM2.score) : 0;\r\n            }\r\n            else { // if show aggregate scores is enabled, factor that into sorting, and prefer techniques scored 0 over unscored\r\n                score1 = this.calculateAggregateScore(technique1, tactic);\r\n                techniqueVM1.aggregateScore = Number.isFinite(score1) ? score1.toString() : \"\";\r\n                score2 = this.calculateAggregateScore(technique2, tactic);\r\n                techniqueVM2.aggregateScore = Number.isFinite(score2) ? score2.toString() : \"\";\r\n            }\r\n            return this.sortingAlgorithm(technique1, technique2, score1, score2);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * sort subtechniques according to viewModel state\r\n     * @param {Technique} technique technique to sort\r\n     * @param {Tactic} tactic tactic the technique falls under\r\n     */\r\n    public sortSubTechniques(technique: Technique, tactic: Tactic) {\r\n        technique.subtechniques.sort((technique1: Technique, technique2: Technique) => {\r\n            const techniqueVM1 = this.getTechniqueVM(technique1, tactic);\r\n            const techniqueVM2 = this.getTechniqueVM(technique2, tactic);\r\n            const score1 = techniqueVM1.score.length > 0 ? Number(techniqueVM1.score) : 0;\r\n            const score2 = techniqueVM2.score.length > 0 ? Number(techniqueVM2.score) : 0;\r\n            return this.sortingAlgorithm(technique1, technique2, score1, score2);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * execute the sorting algorithm for techniques according to the viewModel state\r\n     * @param {Technique} technique1 the first technique in the comparison\r\n     * @param {Technique} technique2 the second technique in the comparison\r\n     * @param {number} score1 the first score in the comparison\r\n     * @param {number} score2 the second score in the comparison\r\n     * @returns technique or score comparison\r\n     */\r\n    private sortingAlgorithm(technique1: Technique, technique2: Technique, score1: number, score2: number) {\r\n        switch (this.sorting) {\r\n            default:\r\n            case 0: // A-Z\r\n                return technique1.name.localeCompare(technique2.name);\r\n            case 1: // Z-A\r\n                return technique2.name.localeCompare(technique1.name);\r\n            case 2: // 1-2\r\n                if (score1 === score2) {\r\n                    return technique1.name.localeCompare(technique2.name);\r\n                } else {\r\n                    return score1 - score2;\r\n                }\r\n            case 3: // 2-1\r\n                if (score1 === score2) {\r\n                    return technique1.name.localeCompare(technique2.name);\r\n                } else {\r\n                    return score2 - score1;\r\n                }\r\n        }\r\n    }\r\n\r\n    public calculateAggregateScore(technique: Technique, tactic: Tactic): any {\r\n        const tvm = this.getTechniqueVM(technique, tactic);\r\n        let score = tvm.score.length > 0 ? Number(tvm.score) : 0;\r\n        let validTechniquesCount = tvm.score.length > 0 ? 1 : 0;\r\n        let scores = [score];\r\n\r\n        technique.subtechniques.forEach((subtechnique) => {\r\n            const svm = this.getTechniqueVM(subtechnique, tactic);\r\n            const scoreNum = svm.score.length > 0 ? Number(svm.score) : 0;\r\n            if (svm.score.length > 0) {\r\n                validTechniquesCount += 1;\r\n                scores.push(scoreNum);\r\n            }\r\n        });\r\n\r\n        if (validTechniquesCount === 0) return tvm.score.length > 0 ? score : Number.NEGATIVE_INFINITY;\r\n\r\n        let aggScore: any = 0;\r\n\r\n        switch (this.layout.aggregateFunction) {\r\n            default:\r\n            case \"average\":\r\n                // Divide by count of all subtechniques + 1 (for parent technique) if counting unscored is enabled\r\n                // Otherwise, divide by count of all scored only\r\n                score = scores.reduce((a, b) => a + b);\r\n                aggScore = score / (this.layout.countUnscored ? (technique.subtechniques.length + 1) : validTechniquesCount);\r\n                break;\r\n            case \"min\":\r\n                if (scores.length > 0) aggScore = Math.min(...scores);\r\n                break;\r\n            case \"max\":\r\n                if (scores.length > 0) aggScore = Math.max(...scores);\r\n                break;\r\n            case \"sum\":\r\n                aggScore = scores.reduce((a, b) => a + b);\r\n                break;\r\n        }\r\n\r\n        aggScore = aggScore.toFixed(2);\r\n        tvm.aggregateScoreColor = this.gradient.getColor(aggScore.toString());\r\n        return +aggScore;\r\n    }\r\n\r\n    /**\r\n     * apply sort and filter state to techniques\r\n     * @param {Technique[]} techniques techniques to sort and filter\r\n     * @param {Tactic} tactic that the techniques fall under\r\n     * @param {Matrix} matrix that the techniques fall under\r\n     * @returns {Technique[]} sorted and filtered techniques\r\n     */\r\n    public applyControls(techniques: Technique[], tactic: Tactic, matrix: Matrix): Technique[] {\r\n        //apply sort and filter\r\n        return this.sortTechniques(this.filterTechniques(techniques, tactic, matrix), tactic);\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    //  ___ ___ ___ ___   _   _    ___ ____  _ _____ ___ ___  _  _\r\n    // / __| __| _ \\_ _| /_\\ | |  |_ _|_  / /_\\_   _|_ _/ _ \\| \\| |\r\n    // \\__ \\ _||   /| | / _ \\| |__ | | / / / _ \\| |  | | (_) | .` |\r\n    // |___/___|_|_\\___/_/ \\_\\____|___/___/_/ \\_\\_| |___\\___/|_|\\_|\r\n\r\n    /**\r\n     * stringify this vm\r\n     * @return string representation\r\n     */\r\n    serialize(): string {\r\n        let modifiedTechniqueVMs = []\r\n        let self = this;\r\n        this.techniqueVMs.forEach(function(value,key) {\r\n            if (value.modified()) modifiedTechniqueVMs.push(JSON.parse(value.serialize())) //only save techniqueVMs which have been modified\r\n        })\r\n        let rep: {[k: string]: any } = {};\r\n        rep.name = this.name;\r\n\r\n        rep.versions = {\r\n            \"attack\": this.dataService.getDomain(this.domainVersionID).getVersion(),\r\n            \"navigator\": globals.nav_version,\r\n            \"layer\": globals.layer_version\r\n        }\r\n\r\n        let domain = this.dataService.getDomain(this.domainVersionID);\r\n        rep.domain = domain.domain_identifier;\r\n        if (domain.isCustom) {\r\n            // custom data url\r\n            rep.customDataURL = domain.urls[0];\r\n        }\r\n        rep.description = this.description;\r\n        rep.filters = JSON.parse(this.filters.serialize());\r\n        rep.sorting = this.sorting;\r\n        rep.layout = this.layout.serialize();\r\n        rep.hideDisabled = this.hideDisabled;\r\n        rep.techniques = modifiedTechniqueVMs;\r\n        rep.gradient = JSON.parse(this.gradient.serialize());\r\n        rep.legendItems = JSON.parse(JSON.stringify(this.legendItems));\r\n        rep.metadata = this.metadata.filter(m => m.valid()).map(m => m.serialize());\r\n        rep.links = this.links.filter(l => l.valid()).map(l => l.serialize());\r\n\r\n        rep.showTacticRowBackground = this.showTacticRowBackground;\r\n        rep.tacticRowBackground = this.tacticRowBackground;\r\n        rep.selectTechniquesAcrossTactics = this.selectTechniquesAcrossTactics;\r\n        rep.selectSubtechniquesWithParent = this.selectSubtechniquesWithParent;\r\n\r\n        return JSON.stringify(rep, null, \"\\t\");\r\n    }\r\n\r\n    /**\r\n     * restore the domain and version from a string\r\n     * @param rep string to restore from\r\n     */\r\n    deSerializeDomainVersionID(rep: any): void {\r\n        let obj = (typeof(rep) == \"string\")? JSON.parse(rep) : rep\r\n        this.name = obj.name\r\n        this.version = this.dataService.getCurrentVersion().number; // layer with no specified version defaults to current version\r\n        if (\"versions\" in obj) {\r\n            if (\"attack\" in obj.versions) {\r\n                if (typeof(obj.versions.attack) === \"string\") {\r\n                    if (obj.versions.attack.length > 0) this.version = obj.versions.attack.match(/[0-9]+/g)[0];\r\n                }\r\n                else console.error(\"TypeError: attack version field is not a string\");\r\n            }\r\n            if(obj.versions[\"layer\"] !== globals.layer_version){\r\n                alert(\"WARNING: Uploaded layer version (\" + String(obj.versions[\"layer\"]) + \") does not match Navigator's layer version (\"\r\n                + String(globals.layer_version) + \"). The layer configuration may not be fully restored.\");\r\n            }\r\n        }\r\n        if (\"version\" in obj) { // backwards compatibility with Layer Format 3\r\n            if (obj.version !== globals.layer_version){\r\n                alert(\"WARNING: Uploaded layer version (\" + String(obj.version) + \") does not match Navigator's layer version (\"\r\n                + String(globals.layer_version) + \"). The layer configuration may not be fully restored.\");\r\n            }\r\n        }\r\n        // patch for old domain name convention\r\n        if(obj.domain in this.dataService.domain_backwards_compatibility) {\r\n            this.domain = this.dataService.domain_backwards_compatibility[obj.domain];\r\n        } else { this.domain = obj.domain; }\r\n        this.domainVersionID = this.dataService.getDomainVersionID(this.domain, this.version);\r\n    }\r\n\r\n    /**\r\n     * restore this vm from a string\r\n     * @param  rep string to restore from\r\n     */\r\n    deSerialize(rep: any): void {\r\n        let obj = (typeof(rep) == \"string\")? JSON.parse(rep) : rep\r\n\r\n        if (\"description\" in obj) {\r\n            if (typeof(obj.description) === \"string\") this.description = obj.description;\r\n            else console.error(\"TypeError: description field is not a string\")\r\n        }\r\n        if (\"filters\" in obj) { this.filters.deSerialize(obj.filters); }\r\n        if (\"sorting\" in obj) {\r\n            if (typeof(obj.sorting) === \"number\") this.sorting = obj.sorting;\r\n            else console.error(\"TypeError: sorting field is not a number\")\r\n        }\r\n        if (\"hideDisabled\" in obj) {\r\n            if (typeof(obj.hideDisabled) === \"boolean\") this.hideDisabled = obj.hideDisabled;\r\n            else console.error(\"TypeError: hideDisabled field is not a boolean\")\r\n        }\r\n\r\n        if (\"gradient\" in obj) {\r\n            this.gradient = new Gradient();\r\n            this.gradient.deSerialize(JSON.stringify(obj.gradient))\r\n        }\r\n\r\n        if (\"legendItems\" in obj) {\r\n            for (let i = 0; i < obj.legendItems.length; i++) {\r\n                let legendItem = {\r\n                    color: \"#defa217\",\r\n                    label: \"default label\"\r\n                };\r\n                if (!(\"label\" in obj.legendItems[i])) {\r\n                    console.error(\"Error: LegendItem required field 'label' not present\")\r\n                    continue;\r\n                }\r\n                if (!(\"color\" in obj.legendItems[i])) {\r\n                    console.error(\"Error: LegendItem required field 'label' not present\")\r\n                    continue;\r\n                }\r\n\r\n                if (typeof(obj.legendItems[i].label) === \"string\") {\r\n                    legendItem.label = obj.legendItems[i].label;\r\n                } else {\r\n                    console.error(\"TypeError: legendItem label field is not a string\")\r\n                    continue\r\n                }\r\n\r\n                if (typeof(obj.legendItems[i].color) === \"string\" && tinycolor(obj.legendItems[i].color).isValid()) {\r\n                    legendItem.color = obj.legendItems[i].color;\r\n                } else {\r\n                    console.error(\"TypeError: legendItem color field is not a color-string:\", obj.legendItems[i].color, \"(\", typeof(obj.legendItems[i].color),\")\")\r\n                    continue\r\n                }\r\n                this.legendItems.push(legendItem);\r\n            }\r\n        }\r\n\r\n        if (\"showTacticRowBackground\" in obj) {\r\n            if (typeof(obj.showTacticRowBackground) === \"boolean\") this.showTacticRowBackground = obj.showTacticRowBackground\r\n            else console.error(\"TypeError: showTacticRowBackground field is not a boolean\")\r\n        }\r\n        if (\"tacticRowBackground\" in obj) {\r\n            if (typeof(obj.tacticRowBackground) === \"string\" && tinycolor(obj.tacticRowBackground).isValid()) this.tacticRowBackground = obj.tacticRowBackground;\r\n            else console.error(\"TypeError: tacticRowBackground field is not a color-string:\", obj.tacticRowBackground, \"(\", typeof(obj.tacticRowBackground),\")\")\r\n        }\r\n        if (\"selectTechniquesAcrossTactics\" in obj) {\r\n            if (typeof(obj.selectTechniquesAcrossTactics) === \"boolean\") this.selectTechniquesAcrossTactics = obj.selectTechniquesAcrossTactics\r\n            else console.error(\"TypeError: selectTechniquesAcrossTactics field is not a boolean\")\r\n        }\r\n        if (\"selectSubtechniquesWithParent\" in obj) {\r\n            if (typeof(obj.selectSubtechniquesWithParent) === \"boolean\") this.selectSubtechniquesWithParent = obj.selectSubtechniquesWithParent\r\n            else console.error(\"TypeError: selectSubtechniquesWithParent field is not a boolean\")\r\n        }\r\n        if (\"techniques\" in obj) {\r\n            if(obj.techniques.length > 0) {\r\n                for (let i = 0; i < obj.techniques.length; i++) {\r\n                    var obj_technique = obj.techniques[i];\r\n                    if (\"tactic\" in obj_technique) {\r\n                        let tvm = new TechniqueVM(\"\");\r\n                        tvm.deSerialize(JSON.stringify(obj_technique),\r\n                                        obj_technique.techniqueID,\r\n                                        obj_technique.tactic);\r\n                        this.setTechniqueVM(tvm);\r\n                    } else {\r\n                        // occurs in multiple tactics\r\n                        // match to Technique by attackID\r\n                        for (let technique of this.dataService.getDomain(this.domainVersionID).techniques) {\r\n                            if (technique.attackID == obj_technique.techniqueID) {\r\n                                // match technique\r\n                                // don't load deprecated/revoked, causes crash since tactics don't get loaded on revoked techniques\r\n                                if (technique.deprecated || technique.revoked) break;\r\n\r\n                                for (let tactic of technique.tactics) {\r\n                                    let tvm = new TechniqueVM(\"\");\r\n                                    tvm.deSerialize(JSON.stringify(obj_technique),\r\n                                                    obj_technique.techniqueID,\r\n                                                    tactic);\r\n                                    this.setTechniqueVM(tvm);\r\n                                }\r\n                                break;\r\n                            }\r\n                            //check against subtechniques\r\n                            for (let subtechnique of technique.subtechniques) {\r\n                                if (subtechnique.attackID == obj_technique.techniqueID) {\r\n                                    // don't load deprecated/revoked, causes crash since tactics don't get loaded on revoked techniques\r\n                                    if (subtechnique.deprecated || subtechnique.revoked) break;\r\n\r\n                                    for (let tactic of subtechnique.tactics) {\r\n                                        let tvm = new TechniqueVM(\"\");\r\n                                        tvm.deSerialize(JSON.stringify(obj_technique),\r\n                                                        obj_technique.techniqueID,\r\n                                                        tactic);\r\n                                        this.setTechniqueVM(tvm);\r\n                                    }\r\n                                    break;\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (\"metadata\" in obj) {\r\n            for (let metadataObj of obj.metadata) {\r\n                let m = new Metadata();\r\n                m.deSerialize(metadataObj);\r\n                if (m.valid()) this.metadata.push(m)\r\n            }\r\n        }\r\n        if (\"links\" in obj) {\r\n            for (let link of obj.links) {\r\n                let l = new Link();\r\n                l.deSerialize(link);\r\n                if (l.valid()) this.links.push(l);\r\n            }\r\n        }\r\n        // add custom data URL\r\n        if (\"customDataURL\" in obj) {\r\n            this.bundleURL = obj.customDataURL;\r\n        }\r\n        if (\"layout\" in obj) {\r\n            this.layout.deserialize(obj.layout);\r\n        }\r\n        else if (\"viewMode\" in obj) {\r\n            /*\r\n             * viewMode backwards compatibility:\r\n             * 0: full table (side layout, show name)\r\n             * 1: compact table (side layout, show ID)\r\n             * 2: mini table (mini layout, show neither name nor ID)\r\n             */\r\n            if (typeof(obj.viewMode) === \"number\") {\r\n                switch(obj.viewMode) {\r\n                    default:\r\n                    case 0:\r\n                        break; //default matrix layout already initialized\r\n                    case 1:\r\n                        this.layout.layout = \"side\";\r\n                        this.layout.showName = false;\r\n                        this.layout.showID = true;\r\n                        break;\r\n                    case 2:\r\n                        this.layout.layout = \"mini\";\r\n                        this.layout.showName = false;\r\n                        this.layout.showID = false;\r\n                }\r\n            }\r\n            else console.error(\"TypeError: viewMode field is not a number\")\r\n        }\r\n\r\n        this.updateGradient();\r\n    }\r\n\r\n    /**\r\n     * Add a color to the end of the gradient\r\n     */\r\n    addGradientColor(): void {\r\n        this.gradient.addColor();\r\n        this.updateGradient();\r\n    }\r\n\r\n    /**\r\n     * Remove color at the given index\r\n     * @param index index to remove color at\r\n     */\r\n    removeGradientColor(index: number): void {\r\n        this.gradient.removeColor(index)\r\n        this.updateGradient();\r\n    }\r\n\r\n    /**\r\n     * Update this vm's gradient\r\n     */\r\n    updateGradient(): void {\r\n        console.log(\"updating gradient\")\r\n        this.gradient.updateGradient();\r\n        let self = this;\r\n        this.techniqueVMs.forEach(function(tvm, key) {\r\n            tvm.scoreColor = self.gradient.getColor(tvm.score);\r\n        });\r\n        this.updateLegendColorPresets();\r\n    }\r\n\r\n    /**\r\n     * Update the score color of a single technique VM to match the current\r\n     * score and gradient\r\n     * @param tvm technique VM to update\r\n     */\r\n    updateScoreColor(tvm: TechniqueVM): void {\r\n        tvm.scoreColor = this.gradient.getColor(tvm.score);\r\n    }\r\n\r\n    legendItems = [\r\n\r\n    ];\r\n\r\n    addLegendItem(): void {\r\n        var newObj = {\r\n            label: \"NewItem\",\r\n            color: '#00ffff'\r\n        }\r\n        this.legendItems.push(newObj);\r\n    }\r\n\r\n    deleteLegendItem(index: number): void {\r\n        this.legendItems.splice(index,1);\r\n    }\r\n\r\n    clearLegend(): void {\r\n        this.legendItems = [];\r\n    }\r\n\r\n    updateLegendColorPresets(): void {\r\n        this.legendColorPresets = [];\r\n        for(var i = 0; i < this.backgroundPresets.length; i++){\r\n            this.legendColorPresets.push(this.backgroundPresets[i]);\r\n        }\r\n        for(var i = 0; i < this.gradient.colors.length; i++){\r\n            this.legendColorPresets.push(this.gradient.colors[i].color);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * return an acronym version of the given string\r\n     * @param  words the string of words to get the acrnoym of\r\n     * @return       the acronym string\r\n     */\r\n    acronym(words: string): string {\r\n        let skipWords = [\"on\",\"and\", \"the\", \"with\", \"a\", \"an\", \"of\", \"in\", \"for\", \"from\"]\r\n\r\n        let result = \"\";\r\n        let wordSplit = words.split(\" \");\r\n        if (wordSplit.length > 1) {\r\n            let wordIndex = 0;\r\n            // console.log(wordSplit);\r\n            while (result.length < 4 && wordIndex < wordSplit.length) {\r\n                if (skipWords.includes(wordSplit[wordIndex].toLowerCase())) {\r\n                    wordIndex++;\r\n                    continue;\r\n                }\r\n\r\n                //find first legal char of word\r\n                for (let charIndex = 0; charIndex < wordSplit[wordIndex].length; charIndex++) {\r\n                    let code = wordSplit[wordIndex].charCodeAt(charIndex);\r\n                    if (code < 48 || (code > 57 && code < 65) || (code > 90 && code < 97) || code > 122) { //illegal character\r\n                        continue;\r\n                    } else {\r\n                        result += wordSplit[wordIndex].charAt(charIndex).toUpperCase()\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                wordIndex++;\r\n            }\r\n\r\n            return result;\r\n        } else {\r\n            return wordSplit[0].charAt(0).toUpperCase();\r\n        }\r\n    }\r\n}\r\n\r\n// the viewmodel for a specific technique\r\nexport class TechniqueVM {\r\n    techniqueID: string;\r\n    technique_tactic_union_id: string;\r\n    tactic: string;\r\n\r\n    score: string = \"\";\r\n    scoreColor: any; //color for score gradient\r\n\r\n    color: string = \"\"; //manually assigned color-class name\r\n    enabled: boolean = true;\r\n    comment: string = \"\"\r\n    metadata: Metadata[] = [];\r\n    public get metadataStr(): string { return JSON.stringify(this.metadata); }\r\n    links: Link[] = [];\r\n    public get linkStr(): string { return JSON.stringify(this.links); }\r\n\r\n    showSubtechniques = false;\r\n    aggregateScore: any; // number rather than string as this is not based on an input from user\r\n    aggregateScoreColor: any;\r\n\r\n    //print this object to the console\r\n    print(): void {\r\n        console.log(this.serialize())\r\n        console.log(this)\r\n    }\r\n\r\n    /**\r\n     * Has this TechniqueVM been modified from its initialized state?\r\n     * @return true if it has been modified, false otherwise\r\n     */\r\n    modified(): boolean {\r\n        return (this.annotated() || this.showSubtechniques);\r\n    }\r\n\r\n    /**\r\n     * Check if this TechniqueVM has been annotated\r\n     * @return true if it has annotations, false otherwise\r\n     */\r\n    annotated(): boolean {\r\n        return (this.score != \"\" || this.color != \"\" || !this.enabled || this.comment != \"\" || this.links.length !== 0 || this.metadata.length !== 0);\r\n    }\r\n\r\n    /**\r\n     * Reset this TechniqueVM's annotations to their default values\r\n     */\r\n    resetAnnotations(): void {\r\n        this.score = \"\";\r\n        this.comment = \"\";\r\n        this.color = \"\";\r\n        this.enabled = true;\r\n        this.aggregateScore = \"\";\r\n        this.aggregateScoreColor = \"\";\r\n        this.links = [];\r\n        this.metadata = [];\r\n    }\r\n\r\n    /**\r\n     * Convert to string representation\r\n     * @return string representation\r\n     */\r\n    serialize(): string {\r\n        let rep: {[k: string]: any } = {};\r\n        rep.techniqueID = this.techniqueID;\r\n        rep.tactic = this.tactic;\r\n        if (this.score !== \"\" && !(isNaN(Number(this.score)))) rep.score = Number(this.score);\r\n        rep.color = this.color;\r\n        rep.comment = this.comment;\r\n        rep.enabled = this.enabled;\r\n        rep.metadata = this.metadata.filter(m => m.valid()).map(m => m.serialize());\r\n        rep.links = this.links.filter(l => l.valid()).map(l => l.serialize());\r\n        rep.showSubtechniques = this.showSubtechniques;\r\n        return JSON.stringify(rep, null, \"\\t\")\r\n    }\r\n\r\n    /**\r\n     * Restore this technique from serialized technique\r\n     * @param rep serialized technique string\r\n     */\r\n    deSerialize(rep: string, techniqueID: string, tactic: string): void {\r\n        let obj = JSON.parse(rep);\r\n        if (techniqueID !== undefined) this.techniqueID = techniqueID;\r\n        else console.error(\"ERROR: TechniqueID field not present in technique\")\r\n\r\n        if (tactic !== undefined && tactic !== \"\") this.tactic = tactic;\r\n        else {\r\n            console.error(\"WARNING: tactic field not present in technique\");\r\n            alert(`WARNING: The tactic field on the technique ID ${techniqueID} is not defined. Annotations for this technique may not be restored.`);\r\n        }\r\n        if (\"comment\" in obj) {\r\n            if (typeof(obj.comment) === \"string\") this.comment = obj.comment;\r\n            else console.error(\"TypeError: technique comment field is not a number:\", obj.comment, \"(\",typeof(obj.comment),\")\")\r\n        }\r\n        if (\"color\" in obj && obj.color !== \"\") {\r\n            if (typeof(obj.color) === \"string\" && tinycolor(obj.color).isValid()) this.color = obj.color;\r\n            else console.error(\"TypeError: technique color field is not a color-string:\", obj.color, \"(\", typeof(obj.color),\")\")\r\n        }\r\n        if (\"score\" in obj) {\r\n            if (typeof(obj.score) === \"number\") this.score = String(obj.score);\r\n            else console.error(\"TypeError: technique score field is not a number:\", obj.score, \"(\", typeof(obj.score), \")\")\r\n        }\r\n        if (\"enabled\" in obj) {\r\n            if (typeof(obj.enabled) === \"boolean\") this.enabled = obj.enabled;\r\n            else console.error(\"TypeError: technique enabled field is not a boolean:\", obj.enabled, \"(\", typeof(obj.enabled), \")\");\r\n        }\r\n        if (\"showSubtechniques\" in obj) {\r\n            if (typeof(obj.showSubtechniques) === \"boolean\") this.showSubtechniques = obj.showSubtechniques;\r\n            else console.error(\"TypeError: technique showSubtechnique field is not a boolean:\", obj.showSubtechniques, \"(\", typeof(obj.showSubtechniques), \")\");\r\n        }\r\n        if (this.tactic !== undefined && this.techniqueID !== undefined) {\r\n            this.technique_tactic_union_id = this.techniqueID + \"^\" + this.tactic;\r\n        } else {\r\n            console.log(\"ERROR: Tactic and TechniqueID field needed.\")\r\n        }\r\n\r\n        if (\"metadata\" in obj) {\r\n            for (let metadataObj of obj.metadata) {\r\n                let m = new Metadata();\r\n                m.deSerialize(metadataObj);\r\n                if (m.valid()) this.metadata.push(m)\r\n            }\r\n        }\r\n        if (\"links\" in obj) {\r\n            for (let linkObj of obj.links) {\r\n                let link = new Link();\r\n                link.deSerialize(linkObj);\r\n                if (link.valid()) this.links.push(link);\r\n            }\r\n        }\r\n    }\r\n\r\n    constructor(technique_tactic_union_id: string) {\r\n        this.technique_tactic_union_id = technique_tactic_union_id;\r\n        var idSplit = technique_tactic_union_id.split(\"^\");\r\n        this.techniqueID = idSplit[0];\r\n        this.tactic = idSplit[1];\r\n    }\r\n}\r\n\r\n// the data for a specific filter\r\nexport class Filter {\r\n    private readonly domain: string;\r\n    platforms: {\r\n        options: string[],\r\n        selection: string[]\r\n    }\r\n    constructor() {\r\n        this.platforms = {\r\n            selection: [],\r\n            options: []\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Initialize the platform options according to the data in the domain\r\n     * @param {Domain} domain the domain to parse for platform options\r\n     */\r\n    public initPlatformOptions(domain: Domain): void {\r\n        this.platforms.options = JSON.parse(JSON.stringify(domain.platforms));\r\n        if (!this.platforms.selection.length) { // prevent overwriting current selection\r\n            this.platforms.selection = JSON.parse(JSON.stringify(domain.platforms));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * toggle the given value in the given filter\r\n     * @param {*} filterName the name of the filter\r\n     * @param {*} value the value to toggle\r\n     */\r\n    toggleInFilter(filterName: string, value: string): void {\r\n        if (!this[filterName].options.includes(value)) { console.log(\"not a valid option to toggle\", value, this[filterName]); return }\r\n        if (this[filterName].selection.includes(value)) {\r\n            let index = this[filterName].selection.indexOf(value)\r\n            this[filterName].selection.splice(index, 1);\r\n        } else {\r\n            this[filterName].selection.push(value);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * determine if the given value is active in the filter\r\n     * @param {*} filterName the name of the filter\r\n     * @param {*} value the value to determine\r\n     * @returns {boolean} true if value is currently enabled in the filter\r\n     */\r\n    inFilter(filterName, value): boolean {\r\n        return this[filterName].selection.includes(value)\r\n    }\r\n\r\n    /**\r\n     * Return the string representation of this filter\r\n     * @return stringified filter\r\n     */\r\n    serialize(): string {\r\n        return JSON.stringify({\"platforms\": this.platforms.selection})\r\n    }\r\n\r\n    /**\r\n     * Replace the properties of this object with those of the given serialized filter\r\n     * @param rep filter object\r\n     */\r\n    deSerialize(rep: any): void {\r\n        // console.log(rep)\r\n        let isStringArray = function(check): boolean {\r\n            for (let i = 0; i < check.length; i++) {\r\n                if (typeof(check[i]) !== \"string\") {\r\n                    console.error(\"TypeError:\", check[i], \"(\",typeof(check[i]),\")\", \"is not a string\")\r\n                    return false;\r\n                }\r\n\r\n            }\r\n            return true;\r\n        }\r\n        // let obj = JSON.parse(rep);\r\n        if (rep.platforms) {\r\n            if (isStringArray(rep.platforms)) {\r\n                let backwards_compatibility_mappings = { //backwards compatibility with older layers\r\n                    \"android\": \"Android\",\r\n                    \"ios\": \"iOS\",\r\n\r\n                    \"windows\": \"Windows\",\r\n                    \"linux\": \"Linux\",\r\n                    \"mac\": \"macOS\",\r\n\r\n                    \"AWS\": \"IaaS\",\r\n                    \"GCP\": \"IaaS\",\r\n                    \"Azure\": \"IaaS\"\r\n                }\r\n                const selection = new Set<string>();\r\n                rep.platforms.forEach(function (platform) {\r\n                    if (platform in backwards_compatibility_mappings) selection.add(backwards_compatibility_mappings[platform]);\r\n                    else selection.add(platform);\r\n                });\r\n                this.platforms.selection = Array.from(selection);\r\n            } else console.error(\"TypeError: filter platforms field is not a string[]\");\r\n        }\r\n    }\r\n}\r\n\r\n// { name, value } with serialization\r\nexport class Metadata {\r\n    public name: string;\r\n    public value: string;\r\n    public divider: boolean;\r\n\r\n    constructor() { }\r\n\r\n    serialize(): object {\r\n        return this.name && this.value ? {name: this.name, value: this.value} : {divider: this.divider};\r\n    }\r\n\r\n    deSerialize(rep: any): void {\r\n        let obj = (typeof(rep) == \"string\")? JSON.parse(rep) : rep;\r\n        if (\"name\" in obj) { // name & value object\r\n            if (typeof(obj.name) === \"string\") this.name = obj.name;\r\n            else console.error(\"TypeError: Metadata field 'name' is not a string\");\r\n\r\n            if (\"value\" in obj) {\r\n                if (typeof(obj.value) === \"string\") this.value = obj.value;\r\n                else console.error(\"TypeError: Metadata field 'value' is not a string\")\r\n            }\r\n            else console.error(\"Error: Metadata required field 'value' not present\");\r\n        }\r\n        else if (\"divider\" in obj) { // divider object\r\n            if (typeof(obj.divider) === \"boolean\") this.divider = obj.divider;\r\n            else  console.error(\"TypeError: Metadata field 'divider' is not a boolean\");\r\n        }\r\n        else console.error(\"Error: Metadata required field 'name' or 'divider' not present\");\r\n    }\r\n\r\n    valid(): boolean {\r\n        return (this.name && this.name.length > 0 && this.value && this.value.length > 0) || (this.divider !== undefined)\r\n    }\r\n}\r\n\r\n// { label, url } with serialization\r\nexport class Link {\r\n    public label: string;\r\n    public url: string;\r\n    public divider: boolean;\r\n\r\n    constructor() { }\r\n\r\n    serialize(): object { \r\n        return this.label && this.url ? {label: this.label, url: this.url} : {divider: this.divider};\r\n    }\r\n\r\n    deSerialize(rep: any): void {\r\n        let obj = (typeof(rep) == \"string\")? JSON.parse(rep) : rep;\r\n        if (\"url\" in obj) { // label & url object\r\n            if (typeof(obj.url) === \"string\") this.url = obj.url;\r\n            else console.error(\"TypeError: Link field 'url' is not a string\");\r\n\r\n            if (\"label\" in obj) {\r\n                if (typeof(obj.label) === \"string\") this.label = obj.label;\r\n                else console.error(\"TypeError: Link field 'label' is not a string\");\r\n            }\r\n            else console.error(\"Error: Link required field 'label' not present\");\r\n        }\r\n        else if (\"divider\" in obj) { // divider object\r\n            if (typeof(obj.divider) === \"boolean\") this.divider = obj.divider;\r\n            else  console.error(\"TypeError: Link field 'divider' is not a boolean\");\r\n        }\r\n        else console.error(\"Error: Link required field 'url' or 'divider' not present\");\r\n    }\r\n\r\n    valid(): boolean {\r\n        return (this.label && this.label.length > 0 && this.url && this.url.length > 0) || (this.divider !== undefined)\r\n    }\r\n}\r\n\r\nexport class LayoutOptions {\r\n    // current layout selection\r\n    public readonly layoutOptions: string[] = [\"side\", \"flat\", \"mini\"];\r\n    private _layout = this.layoutOptions[0]; //current selection\r\n    public set layout(newLayout) {\r\n        if (!this.layoutOptions.includes(newLayout)) {\r\n            console.warn(\"invalid matrix layout\", newLayout);\r\n            return;\r\n        }\r\n        let oldLayout = this._layout;\r\n        this._layout = newLayout;\r\n        if (this._layout == \"mini\") { //mini-table cannot show ID or name\r\n            this.showID = false;\r\n            this.showName = false;\r\n        }\r\n        if (oldLayout == \"mini\" && newLayout != \"mini\") {\r\n            this.showName = true; //restore default show value for name\r\n        }\r\n    }\r\n    public get layout(): string { return this._layout; }\r\n\r\n    public readonly aggregateFunctionOptions: string[] = [\"average\", \"min\", \"max\", \"sum\"];\r\n    private _aggregateFunction = this.aggregateFunctionOptions[0];\r\n    public set aggregateFunction(newAggregateFunction) {\r\n        if (!this.aggregateFunctionOptions.includes(newAggregateFunction)) {\r\n            console.warn(\"invalid aggregate fx option\", newAggregateFunction);\r\n            return;\r\n        }\r\n        this._aggregateFunction = newAggregateFunction;\r\n    }\r\n\r\n    public get aggregateFunction(): string { return this._aggregateFunction; }\r\n\r\n    //show technique/tactic IDs in the view?\r\n    public _showID: boolean = false;\r\n    public set showID(newval: boolean) {\r\n        this._showID = newval;\r\n        if (newval == true && this._layout == \"mini\") this._layout = \"side\";\r\n    }\r\n    public get showID(): boolean { return this._showID; }\r\n\r\n    //show technique/tactic names in the view?\r\n    public _showName: boolean = true;\r\n    public set showName(newval: boolean) {\r\n        this._showName = newval;\r\n        if (newval == true && this._layout == \"mini\") this._layout = \"side\";\r\n    }\r\n    public get showName(): boolean { return this._showName; }\r\n\r\n    public _showAggregateScores: boolean = false;\r\n    public set showAggregateScores(newval: boolean) { this._showAggregateScores = newval; }\r\n    public get showAggregateScores(): boolean { return this._showAggregateScores; }\r\n\r\n    public _countUnscored: boolean = false;\r\n    public set countUnscored(newval: boolean) { this._countUnscored = newval; }\r\n    public get countUnscored(): boolean { return (this.aggregateFunction === \"average\") ? this._countUnscored : false; }\r\n\r\n    public serialize(): object {\r\n        return {\r\n            \"layout\": this.layout,\r\n            \"aggregateFunction\": this.aggregateFunction,\r\n            \"showID\": this.showID,\r\n            \"showName\": this.showName,\r\n            \"showAggregateScores\": this.showAggregateScores,\r\n            \"countUnscored\": this.countUnscored\r\n        };\r\n    }\r\n\r\n    public deserialize(rep: any) {\r\n        if (\"showID\" in rep) {\r\n            if (typeof (rep.showID) === \"boolean\") this.showID = rep.showID;\r\n            else console.error(\"TypeError: layout field 'showID' is not a boolean:\", rep.showID, \"(\", typeof (rep.showID), \")\");\r\n        }\r\n      if (\"showName\" in rep) {\r\n          if (typeof (rep.showName) === \"boolean\") this.showName = rep.showName;\r\n          else console.error(\"TypeError: layout field 'showName' is not a boolean:\", rep.showName, \"(\", typeof (rep.showName), \")\");\r\n      }\r\n      //make sure this one goes last so that it can override name and ID if layout == 'mini'\r\n      if (\"layout\" in rep) {\r\n          if (typeof (rep.layout) === \"string\") this.layout = rep.layout;\r\n          else console.error(\"TypeError: layout field 'layout' is not a string:\", rep.layout, \"(\", typeof (rep.layout), \")\");\r\n      }\r\n      if (\"aggregateFunction\" in rep) {\r\n          if (typeof (rep.aggregateFunction) === \"string\") this.aggregateFunction = rep.aggregateFunction;\r\n          else console.error(\"TypeError: layout field 'aggregateFunction' is not a boolean:\", rep.aggregateFunction, \"(\", typeof (rep.aggregateFunction), \")\");\r\n      }\r\n      if (\"showAggregateScores\" in rep) {\r\n          if (typeof (rep.showAggregateScores) === \"boolean\") this.showAggregateScores = rep.showAggregateScores;\r\n          else console.error(\"TypeError: layout field 'showAggregateScores' is not a boolean:\", rep.showAggregateScores, \"(\", typeof (rep.showAggregateScores), \")\");\r\n      }\r\n      if (\"countUnscored\" in rep) {\r\n          if (typeof (rep.countUnscored) === \"boolean\") this.countUnscored = rep.countUnscored;\r\n          else console.error(\"TypeError: layout field 'countUnscored' is not a boolean:\", rep.countUnscored, \"(\", typeof (rep.countUnscored), \")\");\r\n      }\r\n  }\r\n}\r\n\r\n\r\n","import { Component, OnInit, Input, EventEmitter, Output, ViewEncapsulation } from '@angular/core';\r\nimport { Technique, Tactic, Matrix, DataService } from '../../data.service';\r\nimport { ConfigService } from '../../config.service';\r\nimport { Cell } from '../cell';\r\nimport { ViewModelsService } from '../../viewmodels.service';\r\n\r\n@Component({\r\n    selector: 'technique-cell',\r\n    templateUrl: './technique-cell.component.html',\r\n    styleUrls: ['./technique-cell.component.scss'],\r\n    encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class TechniqueCellComponent extends Cell implements OnInit {\r\n    @Input() matrix: Matrix;\r\n    @Output() highlight = new EventEmitter<any>(); // emit with the highlighted technique, or null to unhighlight\r\n    @Output() unhighlight = new EventEmitter<any>();\r\n    @Output() leftclick = new EventEmitter<any>(); // emit with the selected technique and the modifier keys\r\n\r\n    public get isCellPinned(): boolean {\r\n        return this.viewModelsService.pinnedCell === this.viewModel.getTechniqueVM(this.technique, this.tactic).technique_tactic_union_id\r\n    }\r\n\r\n    public get showTooltip(): boolean {\r\n        if (this.isCellPinned) return true;\r\n        if (this.showContextmenu) return false;\r\n        if (this.viewModel.highlightedTechniques.size === 0) return false;\r\n\r\n        return (this.viewModel.highlightedTechnique === this.technique && this.viewModel.highlightedTactic && this.viewModel.highlightedTactic.id === this.tactic.id);\r\n    }\r\n\r\n    constructor(public dataService: DataService, public configService: ConfigService, public viewModelsService: ViewModelsService) {\r\n        super(dataService, configService);\r\n    }\r\n\r\n    ngOnInit() {}\r\n\r\n    // count number of annotated sub-techniques on this technique\r\n    public annotatedSubtechniques() {\r\n        let annotatedSubs: Technique[] = []\r\n        for (let s of this.technique.subtechniques) {\r\n            let subVM = this.viewModel.getTechniqueVM(s, this.tactic);\r\n            if (subVM.annotated()) annotatedSubs.push(s);\r\n        }\r\n        return this.applyControls(annotatedSubs, this.tactic).length;\r\n    }\r\n\r\n    // sort and filter techniques\r\n    public applyControls(techniques: Technique[], tactic: Tactic): Technique[] {\r\n        return this.viewModel.applyControls(techniques, tactic, this.matrix)\r\n    }\r\n\r\n    // events to pass to parent component\r\n    public onMouseEnter() {\r\n        this.highlight.emit();\r\n    }\r\n    public onMouseLeave() {\r\n        this.unhighlight.emit();\r\n    }\r\n    public onLeftClick(event) {\r\n        if (!this.isCellPinned) this.viewModelsService.pinnedCell = \"\";\r\n        if (this.configService.getFeature(\"selecting_techniques\")) this.leftclick.emit({\r\n                \"technique\": this.technique,\r\n                // modifier keys\r\n                \"shift\": event.shiftKey,\r\n                \"ctrl\": event.ctrlKey,\r\n                \"meta\": event.metaKey,\r\n                // position of event on page\r\n                \"x\": event.pageX,\r\n                \"y\": event.pageY\r\n            });\r\n        else this.onRightClick(event);\r\n    }\r\n    public onRightClick(event) {\r\n        if (!this.isCellPinned) this.viewModelsService.pinnedCell = \"\";\r\n        this.showContextmenu = true;\r\n    }\r\n\r\n    // return css classes for a technique\r\n    public getClass(): string {\r\n        let theclass = super.getClass();\r\n\r\n        // classes by annotated sub-techniques\r\n        if (!this.annotatedSubtechniques())\r\n            theclass += \" unannotated\"\r\n\r\n        if (this.isCellPinned) theclass += \" editing\";\r\n\r\n        return theclass;\r\n    }\r\n}\r\n\r\nexport class TechniqueEvent {\r\n    public readonly event: Event;\r\n    public readonly technique: Technique;\r\n    constructor(event, technique) {\r\n        this.technique = technique;\r\n        this.event = event;\r\n    }\r\n}\r\n","<div class=\"technique-cell\" \r\n     [ngStyle]=\"getTechniqueBackground()\" \r\n     [ngClass]=\"getClass()\">\r\n    <div (click)=\"onLeftClick($event)\" \r\n         (contextmenu)=\"onRightClick($event)\"\r\n         (mouseenter)=\"onMouseEnter()\"\r\n         (mouseleave)=\"onMouseLeave()\">\r\n        <span [style.border-color]=\"getTechniqueUnderlineColor()\"\r\n              [style.color]=\"getTechniqueTextColor()\">\r\n            <ng-container *ngIf=\"viewModel.layout.showID\">{{technique.attackID}}</ng-container><div class=\"id-name-break\" *ngIf=\"viewModel.layout.showID && viewModel.layout.showName\"></div><ng-container *ngIf=\"viewModel.layout.showName\">{{technique.name}}</ng-container>\r\n        </span>\r\n        <ng-container *ngIf=\"technique.subtechniques.length > 0\">\r\n            <sub *ngIf=\"viewModel.layout.showID || viewModel.layout.showName\" class=\"sub\">&nbsp;({{annotatedSubtechniques()}}/{{applyControls(technique.subtechniques, tactic).length}})</sub></ng-container>\r\n    </div>\r\n    <app-tooltip *ngIf=\"showTooltip\"  [technique]=\"technique\" [tactic]=\"tactic\" [viewModel]=\"viewModel\"></app-tooltip>\r\n    <app-contextmenu *ngIf=\"showContextmenu\" [technique]=\"technique\" [tactic]=\"tactic\" [viewModel]=\"viewModel\" (close)=\"showContextmenu = false; onMouseLeave()\"></app-contextmenu>\r\n</div>\r\n","import { Component, OnInit, Input, ElementRef, ViewEncapsulation } from '@angular/core';\r\nimport { Technique, Tactic, DataService, Note } from '../../../data.service';\r\nimport { ViewModel, TechniqueVM, ViewModelsService } from '../../../viewmodels.service';\r\nimport { CellPopover } from '../cell-popover';\r\n\r\n@Component({\r\n  selector: 'app-tooltip',\r\n  templateUrl: './tooltip.component.html',\r\n  styleUrls: ['./tooltip.component.scss'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class TooltipComponent extends CellPopover implements OnInit {\r\n    @Input() technique: Technique;\r\n    @Input() tactic: Tactic;\r\n    @Input() viewModel: ViewModel;\r\n    public placement: string;\r\n    public notes: Note[];\r\n\r\n    public get isCellPinned(): boolean {\r\n        return this.viewModelsService.pinnedCell === this.techniqueVM.technique_tactic_union_id\r\n    }\r\n\r\n    public get techniqueVM(): TechniqueVM {\r\n        return this.viewModel.getTechniqueVM(this.technique, this.tactic);\r\n    }\r\n\r\n    constructor(private element: ElementRef, private dataService: DataService, private viewModelsService: ViewModelsService) {\r\n        super(element);\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.placement = this.getPosition();\r\n        let domain = this.dataService.getDomain(this.viewModel.domainVersionID);\r\n        this.notes = domain.notes.filter(note => {\r\n            return note.object_refs.includes(this.technique.id);\r\n        });\r\n    }\r\n}\r\n","<div [ngClass]=\"'tooltip ' + placement\" [style.width]=\"isCellPinned ? '200ch' : ''\">\r\n    <table>\r\n        <tr>\r\n            <td colspan=2 class=\"technique-name\">\r\n                {{technique.name}} ({{technique.attackID}})\r\n            </td>\r\n        </tr>\r\n        <tr *ngIf=\"!techniqueVM.enabled\">\r\n            <td colspan=2>Disabled</td>\r\n        </tr>\r\n        <tr *ngIf=\"techniqueVM.score\">\r\n            <td>Score:</td>\r\n            <td>{{techniqueVM.score}}\r\n            </td>\r\n        </tr>\r\n        <tr *ngIf=\"technique.subtechniques.length > 0 && viewModel.layout.showAggregateScores && techniqueVM.aggregateScore.length > 0\">\r\n            <td>Aggregate Score ({{viewModel.layout.aggregateFunction}}):</td>\r\n            <td>{{techniqueVM.aggregateScore}}</td>\r\n        </tr>\r\n        <tr *ngIf=\"techniqueVM.comment\">\r\n            <td>Comment:</td>\r\n            <td>{{techniqueVM.comment}}</td>\r\n        </tr>\r\n        <tr *ngFor=\"let note of notes\">\r\n            <td *ngIf=\"note.abstract\" class=\"wrap\">{{note.abstract}}:</td>\r\n            <td class=\"wrap\" [attr.colspan]=\"note.abstract ? '1' : '2'\">{{note.content}}</td>\r\n        </tr>\r\n        <tr *ngFor=\"let metadata of techniqueVM.metadata\">\r\n            <td *ngIf=\"metadata.divider\" class=\"divider\" colspan=2><hr></td>\r\n            <td *ngIf=\"!metadata.divider\">{{metadata.name}}:</td>\r\n            <td *ngIf=\"!metadata.divider\">{{metadata.value}}</td>\r\n        </tr>\r\n    </table>\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport { DataService, Technique, Tactic } from './data.service'; //import the DataService component so we can use it\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class ConfigService {\r\n    public comment_color = \"yellow\";\r\n    public link_color = \"blue\";\r\n    public banner: string;\r\n    private features = new Map<string, boolean>();\r\n    private featureGroups = new Map<string, string[]>();\r\n    private featureStructure: object[];\r\n\r\n    public contextMenuItems: ContextMenuItem[] = [];\r\n    constructor(private dataService: DataService) {\r\n        console.log(\"initializing config service\");\r\n        let self = this;\r\n        let subscription = dataService.getConfig().subscribe({\r\n            next: function(config: any) {\r\n                //parse feature preferences from config json\r\n                config[\"features\"].forEach(function(featureObject: any) {\r\n                    self.setFeature_object(featureObject);\r\n                })\r\n                //override json preferences with preferences from URL fragment\r\n                self.getAllFragments().forEach(function(value: string, key: string) {\r\n                    let valueBool = (value == 'true');\r\n                    if (self.isFeature(key) || self.isFeatureGroup(key)) {\r\n                        self.setFeature(key, valueBool);\r\n                    }\r\n                })\r\n                dataService.subtechniquesEnabled = self.getFeature(\"subtechniques\");\r\n                self.featureStructure = config[\"features\"];\r\n                self.comment_color = config[\"comment_color\"];\r\n                self.link_color = config[\"link_color\"];\r\n                self.banner = config[\"banner\"];\r\n                for (let obj of config[\"custom_context_menu_items\"]) {\r\n                    self.contextMenuItems.push(new ContextMenuItem(obj.label, obj.url, obj.subtechnique_url))\r\n                }\r\n            }, \r\n            complete: () => { if (subscription) subscription.unsubscribe(); } //prevent memory leaks \r\n        });\r\n    }\r\n\r\n    public getFeatureList(): object[] {\r\n        if (!this.featureStructure) return []\r\n        return this.featureStructure;\r\n    }\r\n\r\n    public getFeature(featureName: string): boolean {\r\n        return this.features.get(featureName);\r\n    }\r\n\r\n    /**\r\n     * Return true if any/all features in the group are enabled\r\n     * @param  featureGroup feature group name\r\n     * @param  type         'any' or 'all' for logical or/and\r\n     * @return              true iffany/all are enabled, false otherwise\r\n     */\r\n    public getFeatureGroup(featureGroup: string, type?: string): boolean {\r\n        if (!this.featureGroups.has(featureGroup)) return true;\r\n\r\n        let subFeatures = this.featureGroups.get(featureGroup)\r\n        let count = this.getFeatureGroupCount(featureGroup);\r\n        return type == \"any\" ? count > 0 : count === subFeatures.length;\r\n    }\r\n\r\n    /**\r\n     * Return the number of enabled features in the group\r\n     * @param  featureGroup feature group name\r\n     * @return              the number of enabled features in the group, or -1 if\r\n     *                      the group does not exist\r\n     */\r\n    public getFeatureGroupCount(featureGroup: string): number {\r\n        if (!this.featureGroups.has(featureGroup)) return -1;\r\n        let count = 0\r\n        let subFeatures = this.featureGroups.get(featureGroup)\r\n        for (let i = 0; i < subFeatures.length; i++) {\r\n            if (this.getFeature(subFeatures[i])) count += 1\r\n        }\r\n        return count;\r\n    }\r\n\r\n    /**\r\n     * Recursively search an object for boolean properties, set these as features\r\n     * Take a key:value pair of an object. If the value is a boolean, set the\r\n     * feature[key] to value. Otherwise recursively walk value to find boolean\r\n     * options.\r\n     *\r\n     * Additionally, if the given feature grouping (where value is an obj)\r\n     * has been previously defined, boolean properties assigned to the grouping\r\n     * name will apply to all subfeatures of the grouping.\r\n     *\r\n     * @param  featureName string, the fieldname the value was found in\r\n     * @param  value       boolean:object the value of the field. If a boolean,\r\n     *                     sets feature[featureName] = value, otherwise walks recursively\r\n     */\r\n    public setFeature(featureName: string, value: any): string[] {\r\n        let self = this\r\n\r\n        if (typeof(value) == \"boolean\") { //base case\r\n            if (this.featureGroups.has(featureName)) { //feature group, assign to all subfeatures\r\n                this.featureGroups.get(featureName).forEach(function(subFeatureName: string) {\r\n                    self.setFeature(subFeatureName, value);\r\n                })\r\n            } else { //single feature\r\n                this.features.set(featureName, value);\r\n            }\r\n            return [featureName];\r\n        }\r\n\r\n        if (typeof(value) == \"object\") { //keep walking\r\n            let subfeatures = [];\r\n            Object.keys(value).forEach(function(fieldname: string) {\r\n                subfeatures = Array.prototype.concat(subfeatures, self.setFeature(fieldname, value[fieldname]));\r\n            })\r\n            this.featureGroups.set(featureName, subfeatures);\r\n            return subfeatures;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * given a set of feature objects, set the enabledness of that object and all subobjects\r\n     *\r\n     * @param  featureObject {name: string, enabled: boolean, subfeatures?: featureObject[] }\r\n     *                       Of enabled is false and it has subfeatures, they will all be forced to be false too\r\n     * @param  override      Set all subfeatures, and their subfeatures, values to\r\n     *                       this value\r\n     */\r\n    public setFeature_object(featureObject: any, override=null):string[] {\r\n        let self = this\r\n\r\n        // base case\r\n        if (!featureObject.hasOwnProperty(\"subfeatures\")) {\r\n\r\n            let enabled = override !== null? override : featureObject.enabled\r\n            this.features.set(featureObject.name, enabled)\r\n            return [featureObject.name]\r\n        } else { //has subfeatures\r\n            override = override ? override : !featureObject.enabled ? false : null;\r\n            let subfeatures = [];\r\n            featureObject.subfeatures.forEach(function(subfeature) {\r\n                subfeatures = Array.prototype.concat(subfeatures, self.setFeature_object(subfeature, override))\r\n            })\r\n            this.featureGroups.set(featureObject.name, subfeatures)\r\n            return subfeatures;\r\n        }\r\n\r\n\r\n    }\r\n\r\n    /**\r\n     * Return if the given string corresponds to a defined feature\r\n     * @param  featureName the name of the feature\r\n     * @return             true if the feature exists, false otherwise\r\n     */\r\n    public isFeature(featureName: string): boolean {\r\n        return this.features.has(featureName)\r\n    }\r\n    /**\r\n     * return if the given string corresponds to a defined feature group\r\n     * @param  featureGroupName the name of the feature group\r\n     * @return                  true if it is a feature group, false otherwise\r\n     */\r\n    public isFeatureGroup(featureGroupName: string): boolean {\r\n        return this.featureGroups.has(featureGroupName);\r\n    }\r\n\r\n    public getFeatureGroups(): string[] {\r\n        let keys = [];\r\n        this.featureGroups.forEach(function(value, key) { keys.push(key) })\r\n        return keys;\r\n    }\r\n\r\n    public getFeatures(): string[] {\r\n        let keys = [];\r\n        this.features.forEach(function(value, key) { keys.push(key) })\r\n        return keys;\r\n    }\r\n\r\n    /**\r\n     * Get all url fragments\r\n     * @param  url optional, url to parse instead of window location href\r\n     * @return     all fragments as key-value pairs\r\n     */\r\n    getAllFragments(url?: string): Map<string, string> {\r\n        if (!url) url = window.location.href;\r\n        let fragments = new Map<string, string>();\r\n        let regex = /[#&](\\w+)=(\\w+)/g\r\n\r\n        // let results = url.match(regex)\r\n        var match;\r\n        while (match = regex.exec(url)) {\r\n            fragments.set(match[1], match[2])\r\n        }\r\n\r\n        return fragments;\r\n    }\r\n}\r\n\r\nexport class ContextMenuItem {\r\n    public readonly label: string;\r\n    private readonly url: string;\r\n    private readonly subtechnique_url: string;\r\n\r\n    constructor(label, url, subtechnique_url=null) {\r\n        this.label = label;\r\n        this.url = url;\r\n        this.subtechnique_url = subtechnique_url;\r\n    }\r\n\r\n    public getReplacedURL(technique: Technique, tactic: Tactic): string {\r\n        if (this.subtechnique_url && technique.isSubtechnique) {\r\n            return this.subtechnique_url.replace(/{{parent_technique_attackID}}/g, technique.parent.attackID)\r\n                                        .replace(/{{parent_technique_stixID}}/g, technique.parent.id)\r\n                                        .replace(/{{parent_technique_name}}/g, technique.parent.name.replace(/ /g, \"-\").toLowerCase())\r\n\r\n                                        .replace(/{{subtechnique_attackID}}/g, technique.attackID)\r\n                                        .replace(/{{subtechnique_attackID_suffix}}/g, technique.attackID.split(\".\")[1])\r\n                                        .replace(/{{subtechnique_stixID}}/g, technique.id)\r\n                                        .replace(/{{subtechnique_name}}/g, technique.name.replace(/ /g, \"-\").toLowerCase())\r\n\r\n                                        .replace(/{{tactic_attackID}}/g, tactic.attackID)\r\n                                        .replace(/{{tactic_stixID}}/g, tactic.id)\r\n                                        .replace(/{{tactic_name}}/g, tactic.shortname);\r\n        } else {\r\n            return this.url.replace(/{{technique_attackID}}/g, technique.attackID)\r\n                           .replace(/{{technique_stixID}}/g, technique.id)\r\n                           .replace(/{{technique_name}}/g, technique.name.replace(/ /g, \"-\").toLowerCase())\r\n\r\n                           .replace(/{{tactic_attackID}}/g, tactic.attackID)\r\n                           .replace(/{{tactic_stixID}}/g, tactic.id)\r\n                           .replace(/{{tactic_name}}/g, tactic.shortname);\r\n        }\r\n    }\r\n}\r\n","'use strict';\r\nimport * as app_package from \"../../package.json\";\r\n\r\n //   ___ _    ___  ___   _   _     __   ___   ___ ___   _   ___ _    ___ ___\r\n //  / __| |  / _ \\| _ ) /_\\ | |    \\ \\ / /_\\ | _ \\_ _| /_\\ | _ ) |  | __/ __|\r\n // | (_ | |_| (_) | _ \\/ _ \\| |__   \\ V / _ \\|   /| | / _ \\| _ \\ |__| _|\\__ \\\r\n //  \\___|____\\___/|___/_/ \\_\\____|   \\_/_/ \\_\\_|_\\___/_/ \\_\\___/____|___|___/\r\n //\r\n\r\nexport const nav_version: string = app_package[\"version\"];\r\nexport const layer_version: string = \"4.4\";\r\n","import { Component, Input, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { ViewModelsService } from '../../viewmodels.service';\r\nimport { ConfigService } from '../../config.service';\r\nimport { DataService } from '../../data.service';\r\nimport { Cell } from '../../matrix/cell';\r\n\r\n@Component({\r\n    selector: 'changelog-cell',\r\n    templateUrl: './changelog-cell.component.html',\r\n    styleUrls: ['./changelog-cell.component.scss'],\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\nexport class ChangelogCellComponent extends Cell implements OnInit {\r\n    @Input() isCurrentVersion?: boolean = true;\r\n    @Input() isDraggable?: boolean = false;\r\n    @Input() section: string;\r\n\r\n    constructor(public configService: ConfigService, public dataService: DataService, public viewModelsService: ViewModelsService) {\r\n        super(dataService, configService);\r\n    }\r\n\r\n    ngOnInit(): void { }\r\n\r\n    /**\r\n     * Highlight the moused over technique\r\n     */\r\n    public highlight(): void {\r\n        if (this.isCurrentVersion) {\r\n            this.viewModel.highlightTechnique(this.technique, this.tactic)\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Clear the technique highlight\r\n     */\r\n    public unhighlight(): void {\r\n        if (this.isCurrentVersion) this.viewModel.clearHighlight();\r\n    }\r\n\r\n    /**\r\n     * Select or unselect this technique\r\n     */\r\n    public onClick(): void {\r\n        if (this.isCurrentVersion) {\r\n            // unselect technique\r\n            if (this.viewModel.isTechniqueSelected(this.technique, this.tactic)) {\r\n                this.viewModel.unselectTechnique(this.technique, this.tactic);\r\n            }\r\n            // select technique\r\n            else {\r\n                this.viewModel.clearSelectedTechniques();\r\n                this.viewModel.selectTechnique(this.technique, this.tactic);\r\n            }\r\n            this.viewModelsService.selectionChanged(); // emit selection change\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Retrieve css classes for this technique\r\n     */\r\n    public getClass(): string {\r\n        let theclass = super.getClass();\r\n        if (!this.isCurrentVersion && !this.isDraggable) {\r\n            theclass += \" nopointer\";\r\n        }\r\n        if (this.section == 'additions' || this.section == 'deprecations') {\r\n            theclass += \" setwidth\";\r\n        }\r\n        return theclass;\r\n    }\r\n}\r\n","<div class=\"technique-cell\" [ngStyle]=\"getTechniqueBackground()\" [ngClass]=\"getClass()\">\r\n    <div (click)=\"onClick()\" (mouseenter)=\"highlight()\" (mouseleave)=\"unhighlight()\">\r\n        <div class=\"section\">\r\n            <span [style.border-color]=\"configService.comment_color\" [style.color]=\"getTechniqueTextColor()\">\r\n                <b>{{tactic.name}}</b>\r\n            </span>\r\n        </div>\r\n        <div class=\"section\">\r\n            <span [style.border-color]=\"configService.comment_color\" [style.color]=\"getTechniqueTextColor()\">{{technique.attackID}}</span>\r\n        </div>\r\n        <div class=\"section\">\r\n            <span [style.border-color]=\"configService.comment_color\" [style.color]=\"getTechniqueTextColor()\">{{technique.name}}</span>\r\n        </div>\r\n    </div>\r\n</div>","/**\r\n * @file\r\n * A TAXII 2.0 Javascript client library. Converted to Typescript by Isabel Tuson 24 May 2018\r\n *\r\n * @see https://oasis-open.github.io/cti-documentation/\r\n *\r\n * @author R. Wathelet, September 2017, modified by I Tuson 24 May 2018\r\n * @version 0.2\r\n */\r\n\r\n/**\r\n * Provide asynchronous network communications to a TAXII 2.0 server.\r\n *\r\n */\r\nexport class TaxiiConnect {\r\n    baseURL: string;\r\n    user: string;\r\n    password: string;\r\n    hash: string;\r\n    timeout: number;\r\n    version: string;\r\n    getConfig: any;\r\n    postConfig: any;\r\n    getStixConfig: any;\r\n\r\n    /**\r\n     * provide network communication to a Taxii 2.0 server.\r\n     * @param {String} url - the base url of the Taxii2 server, for example https://example.com/\r\n     * @param {String} user - the user name required for authentication.\r\n     * @param {String} password - the user password required for authentication.\r\n     * @param {Integer} timeout - the connection timeout in millisec\r\n     */\r\n    constructor(url, user, password, timeout) {\r\n        this.baseURL = TaxiiConnect.withoutLastSlash(url);\r\n        this.user = user;\r\n        this.password = password;\r\n        this.hash = btoa(this.user + \":\" + this.password);\r\n        this.timeout = timeout ? timeout : 10000; // default timeout\r\n\r\n        this.version = '2.0';\r\n\r\n        // default headers configurations\r\n        this.getConfig = {\r\n            'method': 'get',\r\n            'headers': new Headers({\r\n                'Accept': 'application/vnd.oasis.taxii+json',\r\n                'version': this.version,\r\n                'Authorization': 'Basic ' + this.hash\r\n            })\r\n        };\r\n\r\n        this.postConfig = {\r\n            'method': 'post',\r\n            'headers': new Headers({\r\n                'Accept': 'application/vnd.oasis.taxii+json',\r\n                'Content-Type': 'application/vnd.oasis.stix+json',\r\n                'version': this.version,\r\n                'Authorization': 'Basic ' + this.hash\r\n            })\r\n        };\r\n\r\n        this.getStixConfig = {\r\n            'method': 'get',\r\n            'headers': new Headers({\r\n                'Accept': 'application/vnd.oasis.stix+json',\r\n                'version': this.version,\r\n                'Authorization': 'Basic ' + this.hash\r\n            })\r\n        };\r\n\r\n    }\r\n\r\n    // original code from: https://github.com/jkomyno/fetch-timeout\r\n    timeoutPromise(promise, timeout, error) {\r\n        return new Promise((resolve, reject) => {\r\n            setTimeout(() => reject(error), timeout);\r\n            promise.then(resolve, reject);\r\n        });\r\n    }\r\n    // original code from: https://github.com/jkomyno/fetch-timeout\r\n    fetchTimeout(url, options, timeout, error) {\r\n        error = error || 'Timeout error';\r\n        options = options || {};\r\n        timeout = timeout || 10000;\r\n        return this.timeoutPromise(fetch(url, options), timeout, error);\r\n    }\r\n\r\n    /**\r\n     * send an async request (GET or POST) to the taxii2 server.\r\n     *\r\n     * @param {String} path - the full path to connect to.\r\n     * @param {Object} config - the request configuration, see getConfig and postConfig for examples\r\n     * @param {Object} filter - the filter object describing the filtering requested, this is added to the path as a query string\r\n     * @returns {Promise} the server response in json.\r\n     */\r\n    async asyncFetch(path, config, filter?) { //CHANGED\r\n        let fullPath = (filter === undefined) ? path : path + \"?\" + TaxiiConnect.asQueryString(filter);\r\n        return await (await (\r\n            this.fetchTimeout(fullPath, config, this.timeout, 'connection timeout')\r\n                .then((res: Response) => res.json())\r\n                .catch(err => { throw new Error(\"fetch error: \" + err); } ) ));\r\n    }\r\n\r\n    /**\r\n     * send a GET async request to the taxii2 server.\r\n     *\r\n     * The server response is assigned to the cache attribute of the options object, and\r\n     * the options flag attribute is set to true if a server request was performed.\r\n     * Otherwise if the options.flag is initially true, the cached response (options.cache) is returned and\r\n     * no server request is performed.\r\n     * To force a server request used invalidate(), for example: server.invalidate()\r\n     *\r\n     * @param {String} path - the path to connect to.\r\n     * @param {Object} options - an option object of the form: { \"cache\": {}, \"flag\": false }\r\n     * @param {Object} filter - the filter object describing the filtering requested, this is added to the path as a query string\r\n     * @param {Object} config - the request configuration\r\n     * @returns {Promise} the server response object\r\n     */\r\n    async fetchThis(path, options, filter?, config?) { //CHANGED\r\n        let conf = config === undefined ? this.getConfig : config;\r\n        if (!options.flag) {\r\n            options.cache = await (this.asyncFetch(path, conf, filter));\r\n            options.flag = true;\r\n        }\r\n        return options.cache;\r\n    }\r\n\r\n    /**\r\n     * return the url without the last slash.\r\n     * @param {String} url - the URL string to process.\r\n     * @returns {String} the url without the last slash.\r\n     */\r\n    static withoutLastSlash(url) {\r\n        return (url.substr(-1) === '/') ? url.substr(0, url.length - 1) : url;\r\n    }\r\n\r\n    /**\r\n     * return the url with a terminating slash.\r\n     * @param {String} url - the URL string to process.\r\n     * @returns {String} the url with a terminating slash.\r\n     */\r\n    static withLastSlash(url) {\r\n        return (url.substr(-1) === '/') ? url : url + \"/\";\r\n    }\r\n\r\n    /**\r\n     * convert a filter object into a query string.\r\n     * @param {Object} filter - the filter object to process.\r\n     * @returns {String} the query string corresponding to the filter object.\r\n     */\r\n    static asQueryString(filter) {\r\n        return Object.keys(filter).map(k => {\r\n            let value = (k === \"added_after\") ? k : \"match[\" + k + \"]\";\r\n            return encodeURIComponent(value) + '=' + encodeURIComponent(filter[k]);\r\n        }).join('&');\r\n    }\r\n}\r\n\r\n/**\r\n * Server encapsulates a discovery and api roots endpoints.\r\n */\r\nexport class Server {\r\n    path: string;\r\n    conn: TaxiiConnect;\r\n    disOptions: any;\r\n    apiOptions: any;\r\n\r\n    /**\r\n     * A TAXII Server endpoint representation.\r\n     * @param {String} path - the path to the server discovery endpoint, for example \"/taxii/\"\r\n     * @param {TaxiiConnect} conn - a TaxiiConnection instance providing network communications.\r\n     */\r\n    constructor(path, conn) {\r\n        this.path = TaxiiConnect.withLastSlash(path);\r\n        this.conn = conn;\r\n        // cache represents the cached results and flag determines if it needs a re-fetch\r\n        this.disOptions = {\"cache\": {}, \"flag\": false};\r\n        this.apiOptions = {\"cache\": [], \"flag\": false};\r\n    }\r\n\r\n    /**\r\n     * determine if the obj is empty, {}\r\n     * @param {Object} obj - the object to test\r\n     * @returns {Boolean} - true if empty else false\r\n     */\r\n    static isEmpty(obj) {\r\n        return Object.keys(obj).length === 0 && obj.constructor === Object;\r\n    }\r\n\r\n    /**\r\n     * reset the internal options flags so that the next method call of this class will\r\n     * send a request to the server rather than retreive the results from cache.\r\n     */\r\n    invalidate() {\r\n        this.disOptions.flag = false;\r\n        this.apiOptions.flag = false;\r\n    }\r\n\r\n    /**\r\n     * retrieve the information about a TAXII Server and the list of API Roots.\r\n     * @returns {Promise} the server discovery information object.\r\n     */\r\n    async discovery() {\r\n        return this.conn.fetchThis(this.conn.baseURL + this.path, this.disOptions);\r\n    }\r\n\r\n    /**\r\n     * retrieve the api roots information objects.\r\n     * Note: unreachable roots are not part of the results.\r\n     *\r\n     * API Roots are logical groupings of TAXII Channels, Collections, and related functionality.\r\n     * Each API Root contains a set of Endpoints that a TAXII Client contacts in order to interact with the TAXII Server.\r\n     * This returns the api roots information objects from the string urls.\r\n     * @returns {Promise} the Array of api roots information objects\r\n     */\r\n    async api_roots() {\r\n        return this.discovery().then(discovery => this._getApiRoots(discovery));\r\n    }\r\n\r\n    /**\r\n     * retrieve a map of key=the api root url and value=the api root object.\r\n     *\r\n     * API Roots are logical groupings of TAXII Channels, Collections, and related functionality.\r\n     * Each API Root contains a set of Endpoints that a TAXII Client contacts in order to interact with the TAXII Server.\r\n     * @returns {Promise} a Map of key=the url and value=the api root object.\r\n     */\r\n    async api_rootsMap() {\r\n        var apiRootMap = new Map();\r\n        await this.discovery().then(discovery => this._getApiRoots(discovery, apiRootMap));\r\n        return apiRootMap;\r\n    }\r\n\r\n    /**\r\n     * private function to retrieve the api roots\r\n     * @param {discovery} discovery - a discovery object\r\n     * @param {Map} apiRootMap - a map of key=url, value=api root object\r\n     * @returns {Promise} the Array of api roots information objects\r\n     */\r\n    async _getApiRoots(discovery, apiRootMap?) { //CHANGED\r\n        if (!this.apiOptions.flag) {\r\n            // clear the cache\r\n            this.apiOptions.cache = [];\r\n            // fetch all the api_roots in parallel\r\n            await Promise.all(discovery.api_roots.map(async url => {\r\n                let apiroot = await this.conn.asyncFetch(url, this.conn.getConfig);\r\n                // add to the map\r\n                if (apiRootMap !== undefined) {\r\n                    apiRootMap.set(url, apiroot);\r\n                }\r\n                // add to the array of results\r\n                this.apiOptions.cache.push(apiroot);\r\n            }));\r\n            // remove the undefined and empty elements, that is those we could not connect to.\r\n            this.apiOptions.cache = this.apiOptions.cache.filter(element => (element !== undefined && !Server.isEmpty(element)));\r\n            this.apiOptions.flag = true;\r\n        }\r\n        return this.apiOptions.cache;\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * Collections resource endpoint.\r\n * A TAXII Collections is an interface to a logical repository of CTI objects\r\n * provided by a TAXII Server and is used by TAXII Clients to send information\r\n * to the TAXII Server or request information from the TAXII Server.\r\n * A TAXII Server can host multiple Collections per API Root, and Collections\r\n * are used to exchange information in a request–response manner.\r\n */\r\nexport class Collections {\r\n    api_root_path: string;\r\n    conn: TaxiiConnect;\r\n    options: any;\r\n    collectionsFlag: boolean;\r\n    // hash: string;\r\n\r\n    /**\r\n     * A TAXII Collections for a specific api root path.\r\n     * The collections resource is a simple wrapper around a list of collection resources.\r\n     * @param {String} api_root_path - the full path to the desired api root endpoint\r\n     * @param {TaxiiConnection} conn a TaxiiConnection class instance.\r\n     */\r\n    constructor(api_root_path, conn) {\r\n        this.api_root_path = TaxiiConnect.withLastSlash(api_root_path);\r\n        this.conn = conn;\r\n        // cache represents the cached results and flag determines if it needs a re-fetch\r\n        this.options = {\"cache\": {}, \"flag\": false};\r\n    }\r\n\r\n    /**\r\n     * reset the internal options flags so that the next method call of this class will\r\n     * send a request to the server rather than retreive the results from cache.\r\n     */\r\n    invalidate() {\r\n        this.options.flag = false;\r\n    }\r\n\r\n    /**\r\n     * provide information about a specific Collection hosted under this API Root.\r\n     *\r\n     * @param {Integer} index - the index of the desired collection object.\r\n     * @returns {Object} a specific collection object.\r\n     */\r\n    async get(index) {\r\n        if (Number.isInteger(index) && index >= 0) {\r\n            // return a specific collection info\r\n            if (!this.collectionsFlag) {\r\n                return this.collections().then(cols => {\r\n                    if (index < this.options.cache.collections.length) {\r\n                        return this.options.cache.collections[index];\r\n                    } else {\r\n                        console.log(\"----> in Collections get(index) invalid index value: \" + index);\r\n                    }\r\n                });\r\n            } else {\r\n                if (index < this.options.cache.collections.length) {\r\n                    return this.options.cache.collections[index];\r\n                } else {\r\n                    console.log(\"----> in Collections get(index) invalid index value: \" + index);\r\n                }\r\n            }\r\n        } else {\r\n            console.log(\"----> in Collections get(index) invalid index value: \" + index);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * provide information about the Collections hosted under this API Root.\r\n     *\r\n     * @param {String} range - a pagination range string, for example \"0-10\"\r\n     * @returns {Array} an array of collection objects\r\n     */\r\n    async collections(range?) { //CHANGED\r\n        var theConfig = this.conn.getConfig;\r\n        if (range !== undefined) {\r\n            theConfig = {\r\n                'method': 'get',\r\n                'headers': new Headers({\r\n                    'Accept': 'application/vnd.oasis.taxii+json',\r\n                    'version': this.conn.version,\r\n                    'Authorization': 'Basic ' + this.conn.hash, //CHANGED\r\n                    'Range': 'items=' + range\r\n                })\r\n            };\r\n        }\r\n        // return a list of collection info\r\n        await this.conn.fetchThis(this.api_root_path + \"collections/\", this.options, \"\", theConfig);\r\n        return this.options.cache.collections;\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * A Collection resource endpoint.\r\n */\r\nexport class Collection {\r\n    collectionInfo: any;\r\n    api_root_path: string;\r\n    conn: TaxiiConnect;\r\n    path: string;\r\n    colOptions: any;\r\n    objsOptions: any;\r\n    objOptions: any;\r\n    manOptions: any;\r\n\r\n    /**\r\n     * Collection resource endpoint.\r\n     * @param {CollectionInfoObject} collectionInfo - the collection object of this endpoint.\r\n     * @param {String} api_root_path - the full path to the desired api root endpoint.\r\n     * @param {TaxiiConnection} conn - a TaxiiConnection class instance.\r\n     */\r\n    constructor(collectionInfo, api_root_path, conn) {\r\n        this.collectionInfo = collectionInfo;\r\n        this.api_root_path = TaxiiConnect.withLastSlash(api_root_path);\r\n        this.conn = conn;\r\n        // construct the path\r\n        this.path = this.api_root_path + \"collections/\" + collectionInfo.id + \"/\";\r\n        // cache represents the cached results and flag determines if it needs a re-fetch\r\n        this.colOptions = {\"cache\": {}, \"flag\": false};\r\n        this.objsOptions = {\"cache\": {}, \"flag\": false};\r\n        this.objOptions = {\"cache\": {}, \"flag\": false};\r\n        this.manOptions = {\"cache\": {}, \"flag\": false};\r\n    }\r\n\r\n    /**\r\n     * reset the internal options flags so that the next method call of this class will\r\n     * send a request to the server rather than retreive the results from cache.\r\n     */\r\n    invalidate() {\r\n        this.colOptions.flag = false;\r\n        this.objsOptions.flag = false;\r\n        this.objOptions.flag = false;\r\n        this.manOptions.flag = false;\r\n    }\r\n\r\n    /**\r\n     * check that the collection allows reading, if true then return the function passed in\r\n     * else log an error\r\n     * @param {Function} func - the function to return if the collection allows reading it\r\n     * @returns {Function} the function if this collection allow reading else undefined\r\n     */\r\n    ifCanRead(func) {\r\n        if (this.collectionInfo.can_read) {\r\n            return func;\r\n        } else {\r\n            console.log(\"this collection does not allow reading: \\n\" + JSON.stringify(this.collectionInfo));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * check that the collection allows writing, if true then return the function passed in else log an error\r\n     * @param {Function} func - the function to return if the collection allows writing it\r\n     * @returns {Function} the function if this collection allow writing else undefined\r\n     */\r\n    ifCanWrite(func) {\r\n        if (this.collectionInfo.can_write) {\r\n            return func;\r\n        } else {\r\n            console.log(\"this collection does not allow writing: \\n\" + JSON.stringify(this.collectionInfo));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * retrieve this Collection object.\r\n     * @returns {Promise} the Collection object\r\n     */\r\n    async get() {\r\n        return this.ifCanRead(this.conn.fetchThis(this.path, this.colOptions));\r\n    }\r\n\r\n    /**\r\n     * retrieve a STIX-2 bundle from this Collection.\r\n     *\r\n     * @param {Object} filter - the filter object describing the filtering requested, this is added to the path as a query string.\r\n     * For example: {\"added_after\": \"2016-02-01T00:00:01.000Z\"}\r\n     *              {\"type\": [\"incident\",\"ttp\",\"actor\"]}\r\n     * @param {String} range - a pagination range string, for example \"0-10\"\r\n     * @returns {Promise} the Bundle with the STIX-2 objects of this collection\r\n     */\r\n    async getObjects(filter, range) {\r\n        var theConfig = this.conn.getStixConfig;\r\n        if (range !== undefined) {\r\n            theConfig = {\r\n                'method': 'get',\r\n                'headers': new Headers({\r\n                    'Accept': 'application/vnd.oasis.stix+json',\r\n                    'version': this.conn.version,\r\n                    'Authorization': 'Basic ' + this.conn.hash, //CHANGED\r\n                    'Range': 'items=' + range\r\n                })\r\n            };\r\n        }\r\n        return this.ifCanRead(this.conn.fetchThis(this.path + \"objects/\", this.objsOptions, filter, theConfig));\r\n    }\r\n\r\n    /**\r\n     * retrieve a specific STIX-2 object from this collection objects bundle.\r\n     *\r\n     * @param {String} obj_id - the STIX-2 object id to retrieve\r\n     * @param {Object} filter - the filter object describing the filtering requested, this is added to the path as a query string.\r\n     * For example: {\"version\": \"2016-01-01T01:01:01.000Z\"}\r\n     */\r\n    async getObject(obj_id, filter) {\r\n        return await (await (this.ifCanRead(this.conn.fetchThis(this.path + \"objects/\" + obj_id + \"/\", this.objOptions, filter, this.conn.getStixConfig)\r\n        .then(bundle => bundle.objects.find(obj => obj.id === obj_id) ))));\r\n    }\r\n\r\n    /**\r\n     * add a STIX-2 bundle object to this Collection objects.\r\n     * @param {Bundle} bundle - the STIX-2 bundle object to add\r\n     * @return {Status} a status object\r\n     */\r\n    async addObject(bundle) {\r\n        return this.ifCanWrite(this.conn.asyncFetch(this.path + \"objects/\", this.conn.postConfig));\r\n    }\r\n\r\n    /**\r\n     * retrieve all manifests about objects from this Collection.\r\n     * Manifests are metadata about the objects.\r\n     *\r\n     * @param {Object} filter - the filter object describing the filtering requested, this is added to the path as a query string.\r\n     * @param {String} range - a pagination range string, for example \"0-10\"\r\n     * @return {Array} an array of manifest entries object\r\n     */\r\n    async getManifests(filter, range?) {\r\n        var theConfig = this.conn.getConfig;\r\n        if (range !== undefined) {\r\n            theConfig = {\r\n                'method': 'get',\r\n                'headers': new Headers({\r\n                    'Accept': 'application/vnd.oasis.taxii+json',\r\n                    'version': this.conn.version,\r\n                    'Authorization': 'Basic ' + this.conn.hash, //CHANGED\r\n                    'Range': 'items=' + range\r\n                })\r\n            };\r\n        }\r\n        this.ifCanRead(await this.conn.fetchThis(this.path + \"manifest/\", this.manOptions, filter, theConfig));\r\n        return this.manOptions.cache.objects;\r\n    }\r\n\r\n    /**\r\n     * retrieve the manifest about a specific object (obj_id) from this Collection.\r\n     * Manifests are metadata about the objects.\r\n     *\r\n     * @param {String} obj_id - the STIX-2 object id of the manifest to retrieve.\r\n     * @param {Object} filter - the filter object describing the filtering requested, this is added to the path as a query string.\r\n     * @return {Object} a manifest entry of the desired STIX-2 object.\r\n     */\r\n    async getManifest(obj_id, filter) {\r\n        return await (this.getManifests(filter).then(objects => objects.find(obj => obj.id === obj_id)));\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * This Endpoint provides information about the status of a previous request.\r\n * In TAXII 2.0, the only request that can be monitored is one to add objects to a Collection.\r\n */\r\nexport class Status {\r\n    api_root_path: string;\r\n    status_id: string;\r\n    conn: TaxiiConnect;\r\n    path: string;\r\n\r\n    /**\r\n     * provide information about the status of a previous request.\r\n     * @param {String} api_root_path - the full path to the desired api root\r\n     * @param {String} status_id - the identifier of the status message being requested, for STIX objects, their id.\r\n     * @param {TaxiiConnection} conn - a TaxiiConnection class instance.\r\n     */\r\n    constructor(api_root_path, status_id, conn) {\r\n        this.api_root_path = TaxiiConnect.withLastSlash(api_root_path);\r\n        this.status_id = status_id;\r\n        this.conn = conn;\r\n        this.path = this.api_root_path + \"status/\" + status_id + \"/\";\r\n    }\r\n\r\n    /**\r\n     * retrieve the Status information about a request to add objects to a Collection.\r\n     * @return {Promise} the status object\r\n     */\r\n    async get() {\r\n        return this.conn.asyncFetch(this.path, this.conn.getConfig);\r\n    }\r\n\r\n}\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"],"sourceRoot":"webpack:///"}